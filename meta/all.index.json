{
  "ownKey": "internal",
  "childrenPages": {
    "wiki": {
      "ownKey": "wiki",
      "childrenPages": {
        "license": {
          "ownKey": "license",
          "ownPages": [{
            "reference": {
              "path": "wiki",
              "baseUrl": "https://alchemistsimulator.github.io/latest",
              "fileName": "license",
              "extension": "html",
              "usePrettyUrl": true,
              "link": "https://alchemistsimulator.github.io/latest/wiki/license"
            },
            "previous": {
              "path": "wiki/examples",
              "baseUrl": "https://alchemistsimulator.github.io/latest",
              "fileName": "maps",
              "extension": "html",
              "usePrettyUrl": true,
              "link": "https://alchemistsimulator.github.io/latest/wiki/examples/maps"
            },
            "description": "",
            "title": "License",
            "content": ""
          }]
        },
        "simulator": {
          "ownKey": "simulator",
          "childrenPages": {"metamodel": {
            "ownKey": "metamodel",
            "ownPages": [{
              "reference": {
                "path": "wiki/simulator",
                "baseUrl": "https://alchemistsimulator.github.io/latest",
                "fileName": "metamodel",
                "extension": "html",
                "usePrettyUrl": true,
                "link": "https://alchemistsimulator.github.io/latest/wiki/simulator/metamodel"
              },
              "next": {
                "path": "wiki",
                "baseUrl": "https://alchemistsimulator.github.io/latest",
                "fileName": "usage",
                "extension": "html",
                "usePrettyUrl": true,
                "link": "https://alchemistsimulator.github.io/latest/wiki/usage"
              },
              "previous": {
                "path": "wiki",
                "baseUrl": "https://alchemistsimulator.github.io/latest",
                "fileName": "simulator",
                "extension": "html",
                "usePrettyUrl": true,
                "link": "https://alchemistsimulator.github.io/latest/wiki/simulator"
              },
              "description": "",
              "title": "The Alchemist Simulator metamodel",
              "content": "<h2 id=\"the-world-of-alchemist\">The world of Alchemist<\/h2>\n<p>The first step to take in order to use the simulator, is to answer the question<\/p>\n<blockquote>\n<p>what does Alchemist simulate?<\/p>\n<\/blockquote>\n<h3 id=\"the-model\">The model<\/h3>\n<p>The world of Alchemist is composed of the following entities:<\/p>\n<ul>\n<li><strong><a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/Molecule\">Molecule<\/a><\/strong>\n<ul>\n<li>The name of a data item<\/li>\n<li>If Alchemist were an imperative programming language, a <em>molecule<\/em> would be the concept of <em>variable name<\/em><\/li>\n<\/ul>\n<\/li>\n<li><strong><a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/Concentration\">Concentration<\/a><\/strong>\n<ul>\n<li>The value associated to a particular <em>molecule<\/em><\/li>\n<li>If Alchemist were an imperative programming language, a <em>concentration<\/em> would be the concept of <em>value associated to a variable<\/em><\/li>\n<\/ul>\n<\/li>\n<li><strong><a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/Node\">Node<\/a><\/strong>\n<ul>\n<li>A container of <em>molecules<\/em> and <em>reactions<\/em>, living inside an <em>environment<\/em><\/li>\n<\/ul>\n<\/li>\n<li><strong><a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/Environment\">Environment<\/a><\/strong>\n<ul>\n<li>The Alchemist abstration for the space. It is a container for <em>nodes<\/em>, and it is able to tell:\n<ol>\n<li>Where the nodes are in the space - i.e. their <em>position<\/em><\/li>\n<li>The distance between two <em>nodes<\/em><\/li>\n<li>Optionally, support for moving <em>nodes<\/em><\/li>\n<\/ol>\n<\/li>\n<\/ul>\n<\/li>\n<li><strong><a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/LinkingRule\">Linking rule<\/a><\/strong>\n<ul>\n<li>A function of the current status of the environment that associates to each <em>node<\/em> a <em>neighborhood<\/em><\/li>\n<\/ul>\n<\/li>\n<li><strong><a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/Neighborhood\">Neighborhood<\/a><\/strong>\n<ul>\n<li>An entity composed by a <em>node<\/em> (centre) and a set of <em>nodes<\/em> (neighbors)<\/li>\n<\/ul>\n<\/li>\n<li><strong><a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/Reaction\">Reaction<\/a><\/strong>\n<ul>\n<li>Any event that can change the status of the <em><a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/Environment\">environment<\/a><\/em><\/li>\n<li>Each <em>node<\/em> has a possibly empty set of <em>reactions<\/em><\/li>\n<li>Each reaction is defined by a possibly empty list of <em>conditions<\/em>, one or more <em>actions<\/em> and a <em><a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/TimeDistribution\">time distribution<\/a><\/em><\/li>\n<li>The frequency at which it happens depends on:\n<ol>\n<li>A static &quot;rate&quot; parameter<\/li>\n<li>The value of each <em>condition<\/em><\/li>\n<li>A &quot;rate equation&quot;, that combines the static rate and the value of conditions, giving back an &quot;instantaneous rate&quot;<\/li>\n<li>A <em>time distribution<\/em><\/li>\n<\/ol>\n<\/li>\n<\/ul>\n<\/li>\n<li><strong><a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/Condition\">Condition<\/a><\/strong>\n<ul>\n<li>A function that takes the current <em>environment<\/em> as input and outputs a boolean and a number<\/li>\n<li>If the <em>condition<\/em> does not hold (i.e. its current output is <code>false<\/code>), the <em>reaction<\/em> to which it is associated cannot run<\/li>\n<li>The outputed number may or may not influence the <em>reaction<\/em> speed (i.e. the average number of times the <em>reaction<\/em> &quot;happens&quot; per time unit), depending on the <em>reaction<\/em> and its <em>time distribution<\/em>.<\/li>\n<\/ul>\n<\/li>\n<li><strong><a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/Action\">Action<\/a><\/strong>\n<ul>\n<li>Models a change in the environment.<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<p>The following image is a visualization of such model:<\/p>\n<p><img src=\"https://alchemistsimulator.github.io/latest/assets/media/simulator/model.png\" alt=\"Alchemist model\" /><\/p>\n<p>The behavior of the system is described in terms of reactions. As such, here's a pictorial representation of a reaction:<\/p>\n<p><img src=\"https://alchemistsimulator.github.io/latest/assets/media/simulator/reaction.png\" alt=\"Alchemist reaction\" /><\/p>\n<h3 id=\"incarnations\">Incarnations<\/h3>\n<p>As you can see, names are given after classical chemistry terms.\nThis is mostly for historical reasons: Alchemist has been initially conceived as a chemical-oriented multi-compartment\nstochastic simulation engine, able to support compartment (node) mobility while still retaining high performance.<\/p>\n<p>However, Alchemist is not limited to that. The key of its extensibility is in the very loose interpretation of\n<strong>molecule<\/strong> and <strong>concentration<\/strong>. These two terms have a very precise definition in chemistry, but in Alchemist they\nare respectively<\/p>\n<ol>\n<li>a generic identifier, and<\/li>\n<li>a piece of data of some <strong>type<\/strong><\/li>\n<\/ol>\n<p>An <strong>incarnation<\/strong> of Alchemist includes a <strong>type<\/strong> definition of <strong>concentration<\/strong>,\nand possibly a set of specific conditions, actions and (rarely) environments and reactions that operate on such types.\nIn other words, an incarnation is a concrete instance of the Alchemist meta-model.\nIn addition, a proper <a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/Incarnation\">Alchemist incarnation<\/a> must also define:<\/p>\n<ul>\n<li>Means for translating strings into named entities (molecules)<\/li>\n<li>Means for obtaining a number when given a node, a molecule and a string representing a property<\/li>\n<li>Means for building incarnation-specific model entities given an appropriate context and a parameter String<\/li>\n<\/ul>\n<p>These functionalities are required in order to support a uniform access to different incarnations.<\/p>\n<p>Different Incarnations can model completely different universes.\nFor instance, if the concentration is defined as a positive integer and proper actions and conditions are provided,\nAlchemist becomes a stochastic simulator for chemistry featuring interconnected and mobile compartments.<\/p>\n<p>The standalone distribution comes with:<\/p>\n<ul>\n<li><a href=\"http://protelis.org\">Protelis Incarnation<\/a><\/li>\n<li><a href=\"http://dx.doi.org/10.1016/j.pmcj.2014.12.002\">SAPERE Incarnation<\/a><\/li>\n<li><a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/BiochemistryIncarnation\">Biochemistry Incarnation<\/a><\/li>\n<li><a href=\"https://scafi.github.io/\">Scafi incarnation<\/a><\/li>\n<\/ul>\n<p>More details on how to use each of the included incarnations will be provided after this introductory chapter.<\/p>\n<h2 id=\"the-tool\">The tool<\/h2>\n<p>The core part of the tool is the incarnation-agnostic simulation engine.\nIts current implementation is based on <a href=\"http://dx.doi.org/10.1021/jp993732q\">Gibson and Bruck's Next Reaction<\/a>,\nextended to support addition and removal of reactions, and improved using input and output contexts for reactions,\nin order to prune the dependency graph as much as possible.\nMore details on that are demanded to <a href=\"http://dx.doi.org/10.1057/jos.2012.27\">this scientific paper on Journal of Simulation<\/a>.<\/p>\n<p>The engine's entry point is the <a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/core/interfaces/Simulation\">Simulation<\/a>.\nIt is equipped with support for commands like play, pause and stop, and can be equipped with an <a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/interfaces/OutputMonitor\">OutputMonitor<\/a>.\nThe output monitor can be a graphical interface, a logger or any kind of environment inspector.<\/p>\n"
            }]
          }},
          "ownPages": [{
            "reference": {
              "path": "wiki",
              "baseUrl": "https://alchemistsimulator.github.io/latest",
              "fileName": "simulator",
              "extension": "html",
              "usePrettyUrl": true,
              "link": "https://alchemistsimulator.github.io/latest/wiki/simulator"
            },
            "next": {
              "path": "wiki/simulator",
              "baseUrl": "https://alchemistsimulator.github.io/latest",
              "fileName": "metamodel",
              "extension": "html",
              "usePrettyUrl": true,
              "link": "https://alchemistsimulator.github.io/latest/wiki/simulator/metamodel"
            },
            "description": "",
            "title": "Understanding Alchemist",
            "content": "<p>Understanding Alchemist<\/p>\n"
          }]
        },
        "examples": {
          "ownKey": "examples",
          "childrenPages": {
            "maps": {
              "ownKey": "maps",
              "ownPages": [{
                "reference": {
                  "path": "wiki/examples",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "maps",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/examples/maps"
                },
                "next": {
                  "path": "wiki",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "license",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/license"
                },
                "previous": {
                  "path": "wiki/examples",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "scafi",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/examples/scafi"
                },
                "description": "",
                "title": "On maps",
                "content": "<p>On maps<\/p>\n"
              }]
            },
            "scafi": {
              "ownKey": "scafi",
              "ownPages": [{
                "reference": {
                  "path": "wiki/examples",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "scafi",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/examples/scafi"
                },
                "next": {
                  "path": "wiki/examples",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "maps",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/examples/maps"
                },
                "previous": {
                  "path": "wiki/examples",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "protelis",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/examples/protelis"
                },
                "description": "",
                "title": "With Scafi",
                "content": "<p>With Scafi<\/p>\n"
              }]
            },
            "protelis": {
              "ownKey": "protelis",
              "ownPages": [{
                "reference": {
                  "path": "wiki/examples",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "protelis",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/examples/protelis"
                },
                "next": {
                  "path": "wiki/examples",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "scafi",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/examples/scafi"
                },
                "previous": {
                  "path": "wiki",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "examples",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/examples"
                },
                "description": "",
                "title": "With Protelis",
                "content": "<p>With Protelis<\/p>\n"
              }]
            }
          },
          "ownPages": [{
            "reference": {
              "path": "wiki",
              "baseUrl": "https://alchemistsimulator.github.io/latest",
              "fileName": "examples",
              "extension": "html",
              "usePrettyUrl": true,
              "link": "https://alchemistsimulator.github.io/latest/wiki/examples"
            },
            "next": {
              "path": "wiki/examples",
              "baseUrl": "https://alchemistsimulator.github.io/latest",
              "fileName": "protelis",
              "extension": "html",
              "usePrettyUrl": true,
              "link": "https://alchemistsimulator.github.io/latest/wiki/examples/protelis"
            },
            "previous": {
              "path": "wiki/usage",
              "baseUrl": "https://alchemistsimulator.github.io/latest",
              "fileName": "issues",
              "extension": "html",
              "usePrettyUrl": true,
              "link": "https://alchemistsimulator.github.io/latest/wiki/usage/issues"
            },
            "description": "",
            "title": "Simulation examples",
            "content": "<p>Simulation examples<\/p>\n"
          }]
        },
        "usage": {
          "ownKey": "usage",
          "childrenPages": {
            "quickstart": {
              "ownKey": "quickstart",
              "ownPages": [{
                "reference": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "quickstart",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/quickstart"
                },
                "next": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "run-gradle",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/run-gradle"
                },
                "previous": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "installation",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/installation"
                },
                "description": "",
                "title": "Quick start",
                "content": "<p>You can find <a href=\"https://github.com/AlchemistSimulator/alchemist-primer\">here<\/a> a project showing how to use Alchemist via\n<a href=\"https://gradle.org\">Gradle<\/a> to run a simple simulation.\nLet's use it as a quick start to have you hit the ground running.<\/p>\n<p>You can either follow these instructions or those on the <code>README.md<\/code> file of the linked project, information is equivalent.<\/p>\n<h2 id=\"how-to-launch\">How to launch<\/h2>\n<p>To run the example you can rely on the pre-configured Gradle build script. It will automatically download all the required libraries, set up the environment, and execute the simulator via command line for you.\nAs first step, use <code>git<\/code> to locally clone the repository linked above.\nIn order to launch, open a terminal and move to the project root folder, then on UNIX:<\/p>\n<pre><code class=\"language-bash\">./gradlew runAll\n<\/code><\/pre>\n<p>On Windows:<\/p>\n<pre><code>gradlew.bat runAll\n<\/code><\/pre>\n<p>Press P and you will see some pedestrians wandering around. For further information about the gui, see the <a href=\"https://alchemistsimulator.github.io/latest/wiki/usage/gui\">graphical interface shortcuts<\/a>.<\/p>\n<p>Note that the first launch will be rather slow, since Gradle will download all the required files.\nThey will get cached in the user's home folder (as per Gradle normal behavior).<\/p>\n<h2 id=\"importing-the-example-project-in-an-ide\">Importing the example project in an IDE<\/h2>\n<p>Since Gradle is used to deal with the simulator configuration,\nany IDE supporting it should in principle be able to import it.\nWe recommend IntelliJ Idea, as to the best of our knowledge has the smoothest integration with Gradle.<\/p>\n<p>If you have IntelliJ Idea, just right click from your file manager on the <code>build.gradle.kts<\/code> file and open it with IntelliJ.\nThe IDE should warn that a Gradle project has been detected,\nand by confirming that this is correct it will self-configure appropriately.<\/p>\n<h3 id=\"project-organization\">Project organization<\/h3>\n<p>You will see a <code>src/main<\/code> folder,\nwith subfolders divided by language.\nSimulations are in the <code>yaml<\/code> folder.<\/p>\n<h2 id=\"the-build-script\">The build script<\/h2>\n<p>Let's explain how things work by looking at the <code>build.gradle.kts<\/code> script.<\/p>\n<h3 id=\"importing-alchemist\">Importing Alchemist<\/h3>\n<p>First of all, we need to add Alchemist as a dependency. Alchemist is available on Maven Central, we can import all the components by importing the <code>it.unibo.alchemist:alchemist<\/code> artifact. Thus, you will see something like this:<\/p>\n<pre><code class=\"language-kotlin\">repositories { mavenCentral() }\n\ndependencies {\n    implementation(&quot;it.unibo.alchemist:alchemist:SOME_ALCHEMIST_VERSION&quot;)\n}\n<\/code><\/pre>\n<p>With <code>SOME_ALCHEMIST_VERSION<\/code> replaced by the version used, nothing special actually.<\/p>\n<p>If you do not need the whole Alchemist machinery but just a sub-part of it, you can restrict the set of imported artifacts by using as dependencies the modules you are actually in need of.<\/p>\n<h3 id=\"detail-using-gradle-to-launch-alchemist-or-any-java-process\">Detail: using Gradle to launch Alchemist (or any Java process...)<\/h3>\n<p>The following is a <code>runAlchemist<\/code> task, it is a simple gradle task responsible for launching the simulation.\nLet's dissect it:<\/p>\n<pre><code class=\"language-kotlin\">tasks.register&lt;JavaExec&gt;(&quot;runAlchemist&quot;) {\n    classpath = project.sourceSets.getByName(&quot;main&quot;).runtimeClasspath\n    main = &quot;it.unibo.alchemist.Alchemist&quot;\n    args = listOf(&quot;-y&quot;, &quot;src/main/yaml/$simulation.yml&quot;)\n}\n<\/code><\/pre>\n<p><a href=\"https://gradle.org\">Gradle<\/a> has a special task to run a Java class from the build script: <code>JavaExec<\/code>. We can create our custom task of type <code>JavaExec<\/code>, name it <code>runAlchemist<\/code> and configure it to launch our simulation. In order to make it work, we need to explicit two things:<\/p>\n<ul>\n<li>the Alchemist main class, which is <code>it.unibo.alchemist.Alchemist<\/code><\/li>\n<li>the classpath, or java won't be able to find all the classes needed<\/li>\n<\/ul>\n<p>This is what we do with the first three lines of code, and it is sufficient to successfully start Alchemist. Now, to make it run our simulation we can rely on the <a href=\"#command-line-interface\">command line interface<\/a>, to run a simulation we can use the <code>-y<\/code> option followed by the path to the simulation file. Alchemist simulations are contained in *.yml files, more information about how to write such simulations can be found <a href=\"https://alchemistsimulator.github.io/wiki/usage/yaml/\">here<\/a>. Let's suppose the <code>$simulation<\/code> variable contains the name of our simulation file, which is located in the <code>src/main/yaml/<\/code> folder, what we want to do is to run Alchemist with the following arguments:<\/p>\n<pre><code class=\"language-bash\">-y src/main/yaml/$simulation.yml\n<\/code><\/pre>\n<p>The last line of code specify these arguments.<\/p>\n<p>Ok, that's it. You should be able to use Alchemist via Gradle in your own project now, or at least have a clue.<\/p>\n<h2 id=\"command-line-interface\">Command line interface<\/h2>\n<p>The CLI supports the following options<\/p>\n<table>\n<thead>\n<tr><th>Option<\/th><th>Effect<\/th><\/tr>\n<\/thead>\n<tbody>\n<tr><td>-b,--batch<\/td><td>Runs in batch mode. If one or more -var parameters are specified, multiple simulation runs will be executed in parallel with all the combinations of values.<\/td><\/tr>\n<tr><td>-bmk,--benchmark &lt;file&gt;<\/td><td>Performs a benchmark with the provided simulation, measuring the total execution time. Saves result in given file.<\/td><\/tr>\n<tr><td>-cc,--comment-char<\/td><td>Sets the char that will be used to mark a data file line as commented. Defaults to #. (To be implemented)<\/td><\/tr>\n<tr><td>-d,--distributed &lt;file&gt;<\/td><td>Distribute simulations in computer grid<\/td><\/tr>\n<tr><td>-e,--export &lt;file&gt;<\/td><td>Exports the results onto a file<\/td><\/tr>\n<tr><td>-g,--effect-stack &lt;file&gt;<\/td><td>Loads an effect stack from file. Does nothing if in headless mode (because --batch and/or --headless are enabled)<\/td><\/tr>\n<tr><td>-h,--help<\/td><td>Print this help and quits the program<\/td><\/tr>\n<tr><td>-hl,--headless<\/td><td>Disable the graphical interface (automatic in batch mode)<\/td><\/tr>\n<tr><td>-i,--interval &lt;interval&gt;<\/td><td>Used when exporting data. Specifies how much simulated time units should pass between two samplings. Defaults to 1.<\/td><\/tr>\n<tr><td>-p,--parallelism &lt;arg&gt;<\/td><td>Sets how many threads will be used in batch mode (default to the number of cores of your CPU).<\/td><\/tr>\n<tr><td>-q,--quiet<\/td><td>Quiet mode: print only error-level informations.<\/td><\/tr>\n<tr><td>-qq,--quiet-quiet<\/td><td>Super quiet mode: the simulator does not log anything. Go cry somewhere else if something goes wrong and you have no clue what.<\/td><\/tr>\n<tr><td>-s,--serv &lt;Ignite note configuration file&gt;<\/td><td>Start Ignite cluster node on local machine<\/td><\/tr>\n<tr><td>-t,--end-time &lt;Time&gt;<\/td><td>The simulation will be concluded at the specified time. Defaults to infinity.<\/td><\/tr>\n<tr><td>-v,--verbose<\/td><td>Verbose mode: prints info-level informations. Slows the simulator down.<\/td><\/tr>\n<tr><td>-var,--variable &lt;var1 var2 ... varN&gt;<\/td><td>Used with -b. If the specified variable exists in the Alchemist YAML file, it is added to the pool of  variables. Be wary: complexity quickly grows with the number of variables.<\/td><\/tr>\n<tr><td>-vv,--vverbose<\/td><td>Very verbose mode: prints debug-level informations. Slows the simulator down. A lot.<\/td><\/tr>\n<tr><td>-vvv,--vvverbose<\/td><td>Very very verbose mode: prints trace-level informations. Slows the simulator down. An awful lot.<\/td><\/tr>\n<tr><td>-y,--yaml &lt;file&gt;<\/td><td>Load the specified Alchemist YAML file<\/td><\/tr>\n<\/tbody>\n<\/table>\n"
              }]
            },
            "maps": {
              "ownKey": "maps",
              "ownPages": [{
                "reference": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "maps",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/maps"
                },
                "next": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "export",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/export"
                },
                "previous": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "smartcam",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/smartcam"
                },
                "description": "",
                "title": "Maps and GPS traces",
                "content": "<p>Alchemist is equipped with the ability to load and simulate on real-world maps.\nNavigation on maps can be done by using gps traces,\nby moving along roads (Alchemist relies on <a href=\"https://www.graphhopper.com/\">GraphHopper<\/a> to provide directions),\nby interpolating gps traces with on-the-road-movements,\nor by ignoring the map information on just move as you would in a continuous space.<\/p>\n<h2 id=\"setting-up-a-map-environment\">Setting up a map environment<\/h2>\n<p>In order to run simulations on real world maps, an appropriate environment must be selected.<\/p>\n<p>Currently, the only environment supporting maps is <a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/environments/OSMEnvironment\">OSMEnvironment<\/a>.<\/p>\n<p>The only mandatory parameter is the <code>path<\/code> of the file with the map to be loaded. Accepts OSM maps of any format (xml, osm, pbf).\nIs possible define other optional parameter like:<\/p>\n<ol start=\"0\">\n<li><code>approximation: Int<\/code> -&gt; the amount of ciphers of the IEEE 754 encoded position that may be discarded when comparing two positions, allowing a quicker retrieval of the route between two position, since the cache may already contain a similar route which can be considered to be the same route, according to the level of precision determined by this value<\/li>\n<li><code>onStreets: Boolean<\/code> -&gt; if true, the nodes will be placed on the street nearest to the desired position<\/li>\n<li><code>onlyOnStreets: Boolean<\/code> -&gt; if true, the nodes which are too far from a street will be simply discarded. If false, they will be placed anyway, in the original position<\/li>\n<\/ol>\n<p>The following example shows how to configure a simulation that loads data from an Openstreetmap file\n(OSM, XML and PBF formats are supported) located in the classpath folder <code>maps<\/code>:<\/p>\n<pre><code class=\"language-yaml\">incarnation: protelis\nenvironment:\n  type: OSMEnvironment\n  parameters: [maps/foo.pbf]\n<\/code><\/pre>\n<h2 id=\"using-gps-traces-to-displace-nodes\">Using GPS traces to displace nodes<\/h2>\n<p>GPS traces can be used to displace nodes on a map.\nIn order to set the initial position of the nodes with the first position of the GPS traces,\nyou need to use the displacement <a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/displacements/FromGPSTrace\">FromGPSTrace<\/a>.\nThe displacement <code>FromGPSTrace<\/code> require the following parameters:<\/p>\n<ol start=\"0\">\n<li>number of nodes to displace<\/li>\n<li>file with the GPS traces to use<\/li>\n<li>boolean that indicates if the list of GPS trace is cyclic.\nIf <code>true<\/code> and the GPS traces are less than the number of nodes to be displaced,\nthen the traces are cyclically re-used to displace nodes.<\/li>\n<li>a <a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gpsload/api/GPSTimeAlignment\">GPSTimeAlignment<\/a> to define how to align the time of all the GPS points of all GPS traces.\nThere are present several strategy in the package <a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gpsload/api\">it.unibo.alchemist.boundary.gpsload.api<\/a>\nand introduced in the following subsection.<\/li>\n<\/ol>\n<p>The following example places 1497 nodes with the first position of the GPS traces in the file <code>vcmuser.gpx<\/code>.\nThe list of GPS traces isn't cyclic.\nThe strategy to align time of all the GPS points is AlignTime\nin order to consider only the GPS points with attribute <code>time<\/code> greater than the specified one\n(in milliseconds from epoch).<\/p>\n<pre><code class=\"language-yaml\">displacements:\n  - in:\n      type: FromGPSTrace\n      parameters: [1497, &quot;vcmuser.gpx&quot;, false, &quot;AlignToTime&quot;, 1365922800, false, false]\n<\/code><\/pre>\n<h3 id=\"strategy-to-align-time-of-gps-trace\">Strategy to align time of GPS trace<\/h3>\n<p>The strategies available to align time of GPS trace are the following:<\/p>\n<ol start=\"0\">\n<li>NoAlignment -&gt; No alignment is performed.<\/li>\n<li>AlignToFirstTrace -&gt; Aligns all traces at the start time of the first trace.\nIf you have two traces, the first trace start with time = 2 and second point with time = 5,\nthe second trace start with time = 4 and second point with time = 6,\nthe result will be:\n<ul>\n<li>first trace -&gt; start with time = 0 and second point with time = 3<\/li>\n<li>second trace -&gt; start with time = 2 and second point with time = 4<\/li>\n<\/ul>\n<\/li>\n<li>AlignToSimulationTime -&gt; Aligns all traces at the initial simulation time.\nIf you have two traces, the first trace start with time = 2 and second point with time = 5,\nthe second trace start with time = 4 and second point with time = 6,\nthe result will be:\n<ul>\n<li>first trace -&gt; start with time = 0 and second point with time = 3<\/li>\n<li>second trace -&gt; start with time = 0 and second point with time = 2<\/li>\n<\/ul>\n<\/li>\n<li>AlignToTime -&gt; Aligns the traces with the given time in seconds from Epoch.\nAll points before such time will be discarded. All points after the provided time will\nbe shifted back.\nIf you have two traces, the first trace start with time = 2 and second point with time = 5,\nthe second trace start with time = 4 and second point with time = 6, the given time is 3\nthe result will be:\n<ul>\n<li>first trace -&gt; first point discarded and second point with time = 2<\/li>\n<li>second trace -&gt; start with time = 1 and second point with time = 3<\/li>\n<\/ul>\n<\/li>\n<\/ol>\n<h2 id=\"navigation\">Navigation<\/h2>\n<p>As previous say there are several behavior in order to move the nodes in a environment with real-word map:<\/p>\n<ol start=\"0\">\n<li>movement ignoring map information. A node move directly from start position to destination position:\n<img src=\"https://alchemistsimulator.github.io/latest/assets/media/usage/no_map_information.png\" alt=\"No map information\" /><\/li>\n<li>movement by using map information. A node move from start position to destination position using\nintermediate position in order to follow streets and avoid obstacle (like building):\n<img src=\"https://alchemistsimulator.github.io/latest/assets/media/usage/use_map_information.png\" alt=\"Use map information\" /><\/li>\n<li>movement by reproducing a GPS trace (action <a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/ReproduceGPSTrace\">ReproduceGPSTrace<\/a>).\nA node start to the first position of the GPS trace, than move to the next\nposition of the trace until arrive to the last. The movement from a position to another is direct with a straight line:\n<img src=\"https://alchemistsimulator.github.io/latest/assets/media/usage/reproduce_gps_trace.png\" alt=\"Reproduce GPS trace\" /><\/li>\n<li>movement by interpolating the GPS trace with street data (action <a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/GPSTraceWalker\">GPSTraceWalker<\/a>).\nA node start to the first position of the GPS trace,\nthan move to the next position of the trace until arrive to the last. The movement from a position to another\nuse map information to define intermediate position in order to follow streets and avoid obstacle (like building):\n<img src=\"https://alchemistsimulator.github.io/latest/assets/media/usage/interpolate_gps_trace_with_street_data.png\" alt=\"Interpolate GPS trace with street data\" /><\/li>\n<\/ol>\n<p>Both the actions <a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/ReproduceGPSTrace\">ReproduceGPSTrace<\/a> and <a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/GPSTraceWalker\">GPSTraceWalker<\/a> require:\n0. the file with the GPS traces\n0. a boolean that indicate if the list of GPS trace is cyclic\n0. the strategy to align the attribute <code>time<\/code> of the GPS points of the GPS traces<\/p>\n<p>The following example show how it is possible define a program to follow GPS traces.<\/p>\n<pre><code class=\"language-yaml\">programs:\n  - time-distribution: 0.1\n  type: Event\n  actions:\n    - type: ReproduceGPSTrace\n      parameters: [&quot;/vcmuser.gpx&quot;, false, &quot;AlignToTime&quot;, 1365922800, false, false]\n<\/code><\/pre>\n"
              }]
            },
            "run-gradle": {
              "ownKey": "run-gradle",
              "ownPages": [{
                "reference": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "run-gradle",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/run-gradle"
                },
                "next": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "run-stand-alone",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/run-stand-alone"
                },
                "previous": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "quickstart",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/quickstart"
                },
                "description": "",
                "title": "Running Alchemist via Gradle",
                "content": "<p>In this section you will be given information about how to use the simulator via <a href=\"https://gradle.org\">Gradle<\/a>. If you already practiced with the <a href=\"quickstart.md\">quick start<\/a> you may find this information repetitive.<\/p>\n<h2 id=\"adding-alchemist-dependency\">Adding Alchemist dependency<\/h2>\n<p>First of all, you need to add Alchemist dependency to your Gradle build. Alchemist is available on Maven Central, you can import all the components by importing the <code>it.unibo.alchemist:alchemist<\/code> artifact. Do so by writing:<\/p>\n<pre><code class=\"language-kotlin\">repositories { mavenCentral() }\n\ndependencies {\n    implementation(&quot;it.unibo.alchemist:alchemist:ALCHEMIST_VERSION&quot;)\n}\n<\/code><\/pre>\n<p>Remember to substite <code>ALCHEMIST_VERSION<\/code> with the version you want to use (change the scope appropriately if you need Alchemist only for runtime or testing).<\/p>\n<p>If you do not need the whole Alchemist machinery but just a sub-part of it, you can restrict the set of imported artifacts by using as dependencies the modules you are actually in need of.<\/p>\n<h2 id=\"running-alchemist\">Running Alchemist<\/h2>\n<p>One easy way to run Alchemist via Gradle is by writing a simple Gradle task responsible for launching the simulator. Let's see how this can be done. Firstly, Gradle has a special task to run a Java class from the build script: <code>JavaExec<\/code>. We can create our custom task of type <code>JavaExec<\/code> and configure it to launch Alchemist. Let's define our task:<\/p>\n<pre><code class=\"language-kotlin\">tasks.register&lt;JavaExec&gt;(&quot;runAlchemist&quot;) {\n    // run alchemist\n}\n<\/code><\/pre>\n<p>Now, in order to launch the simulator, we need to explicit two things:<\/p>\n<ul>\n<li>the Alchemist main class, which is <code>it.unibo.alchemist.Alchemist<\/code><\/li>\n<li>the classpath, or java won't be able to find all the classes needed<\/li>\n<\/ul>\n<p>You can do so by adding two lines of code:<\/p>\n<pre><code class=\"language-kotlin\">tasks.register&lt;JavaExec&gt;(&quot;runAlchemist&quot;) {\n    classpath = project.sourceSets.getByName(&quot;main&quot;).runtimeClasspath\n    main = &quot;it.unibo.alchemist.Alchemist&quot;\n}\n<\/code><\/pre>\n<p>This is sufficient to succesfully run the simulator. Open a terminal and move to the project root folder, then on UNIX:<\/p>\n<pre><code class=\"language-bash\">./gradlew runAlchemist\n<\/code><\/pre>\n<p>On Windows:<\/p>\n<pre><code>gradlew.bat runAlchemist\n<\/code><\/pre>\n<p>Note that the first launch will be rather slow, since Gradle will download all the required files. They will get cached in the user's home folder (as per Gradle normal behavior).<\/p>\n<h3 id=\"using-the-command-line-interface\">Using the Command Line Interface<\/h3>\n<p>To make the simulator do something for you (for instance, to make it run your own simulation) you can rely on the <a href=\"quickstart.md#command-line-interface\">command line interface<\/a>. The most common case is you want to run your own simulation. To do so, you can rely on the <code>-y<\/code> option followed by the path to the simulation file. Alchemist simulations are contained in *.yml files, more information about how to write such simulations can be found <a href=\"yaml.md\">here<\/a>. Let's say you want to run Alchemist with the following arguments:<\/p>\n<pre><code class=\"language-bash\">-y path/to/your/simulation.yml\n<\/code><\/pre>\n<p>You can do so in a couple of ways, of course this applies to every option you may want to launch the simulator with. You can explicit such options via command line when you run your custom task, using the <code>--args<\/code> option. So you will have something like this:<\/p>\n<pre><code class=\"language-bash\">./gradlew runAlchemist --args='-y path/to/your/simulation.yml'\n<\/code><\/pre>\n<p>Otherwise, if your options never change, you can explicit them in the body of your custom task, by adding the following line of code:<\/p>\n<pre><code class=\"language-kotlin\">args = listOf(&quot;-y&quot;, &quot;path/to/your/simulation.yml&quot;)\n<\/code><\/pre>\n<p>Ok, that's it. You should be able to use Alchemist via Gradle in your own project now, or at least have a clue.<\/p>\n"
              }]
            },
            "customization": {
              "ownKey": "customization",
              "ownPages": [{
                "reference": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "customization",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/customization"
                },
                "next": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "faq",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/faq"
                },
                "previous": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "grid",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/grid"
                },
                "description": "",
                "title": "Writing custom components",
                "content": ""
              }]
            },
            "batch": {
              "ownKey": "batch",
              "ownPages": [{
                "reference": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "batch",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/batch"
                },
                "next": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "grid",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/grid"
                },
                "previous": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "export",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/export"
                },
                "description": "",
                "title": "Executing batches",
                "content": "<p>Executing batches<\/p>\n"
              }]
            },
            "cognitive-pedestrians": {
              "ownKey": "cognitive-pedestrians",
              "ownPages": [{
                "reference": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "cognitive-pedestrians",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/cognitive-pedestrians"
                },
                "next": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "smartcam",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/smartcam"
                },
                "previous": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "navigation-graphs",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/navigation-graphs"
                },
                "description": "",
                "title": "Using Cognitive Pedestrians",
                "content": "<p>Alchemist is capable of simulating the movement of pedestrians with sophisticated cognitive capabilities:<\/p>\n<p><img src=\"../../assets/media/usage/no-knowledge.gif\" alt=\"demo\" /><\/p>\n<p>The animation above shows an adult male with no previous knowledge of the environment trying to reach the destination marked green.<\/p>\n<h3 id=\"prerequisites\">Prerequisites<\/h3>\n<p>This guide assumes you already know <a href=\"../simulator/metamodel.md\">the Alchemist metamodel<\/a>, <a href=\"yaml.md\">how to write simulations in YAML<\/a> and <a href=\"navigation-graphs.md\">how to generate a navigation graph<\/a>.<\/p>\n<h3 id=\"types-of-pedestrians\">Types of pedestrians<\/h3>\n<p>The characteristics of the pedestrians loadable in a simulation can be chosen from three available types,\neach representing a more refined version of the previous one.<\/p>\n<h4 id=\"homogeneous-pedestrian\">Homogeneous Pedestrian<\/h4>\n<p>Homogeneous pedestrians are a particular type of <em>Node<\/em> which have no peculiar characteristic each other.\nIt is the most common type of pedestrian which can be load in a simulation.<\/p>\n<pre><code class=\"language-yaml\">displacements:\n  - in:\n      type: Circle\n      parameters: [100, 0, 0, 20]\n    nodes:\n      type: HomogeneousPedestrian2D\n<\/code><\/pre>\n<h4 id=\"heterogeneous-pedestrian\">Heterogeneous Pedestrian<\/h4>\n<p>Heterogeneous pedestrians are <em>Nodes<\/em> who have a given age and gender, based on which their speed, compliance\nand social attitudes are computed.\nThe kinds of age which can be used are: <em>child<\/em>, <em>adult<\/em>, <em>elderly<\/em>; alternatively you can specify the exact age as a number.\nThe kinds of sex available are: <em>male<\/em>, <em>female<\/em>.<\/p>\n<pre><code class=\"language-yaml\">displacements:\n  - in:\n      type: Circle\n      parameters: [50, 0, 0, 20]\n    nodes:\n      type: HeterogeneousPedestrian2D\n      parameters: [&quot;elderly&quot;, &quot;female&quot;]\n  - in:\n      type: Circle\n      parameters: [50, 0, 0, 20]\n    nodes:\n      type: HeterogeneousPedestrian2D\n      parameters: [&quot;child&quot;, &quot;male&quot;]\n<\/code><\/pre>\n<h4 id=\"cognitive-pedestrian\">Cognitive Pedestrian<\/h4>\n<p>A cognitive pedestrian is a heterogeneous pedestrian with cognitive capabilities. It has an emotional state and is able to influence and to be influenced by other people with the same capabilities. For instance, cognitive pedestrians can perceive fear, not just directly but also by contagion (e.g. seeing other people fleeing may cause them flee as well).<\/p>\n<pre><code class=\"language-yaml\">reactions: &amp;behavior\n  - time-distribution:\n      type: DiracComb\n      parameters: [1.0]\n    type: CognitiveBehavior\n\ndisplacements:\n  - in:\n      type: Circle\n      parameters: [50, 0, 0, 20]\n    nodes:\n      type: CognitivePedestrian2D\n      parameters: [&quot;adult&quot;, &quot;male&quot;]\n    programs:\n      - *behavior\n  - in:\n      type: Circle\n      parameters: [50, 0, 0, 20]\n    nodes:\n      type: CognitivePedestrian2D\n      parameters: [&quot;adult&quot;, &quot;female&quot;]\n    programs:\n      - *behavior\n<\/code><\/pre>\n<h3 id=\"groups\">Groups<\/h3>\n<p>It is likely that a pedestrian doesn't move on its own, but there is a group consisting of multiple people\nwhich are related each other and whose behaviors are strictly dependant on that structure.\nThe only way you can currently assign a group to a pedestrian is by creating it as a variable and passing it\nas a parameter when the <em>Nodes<\/em> created are of pedestrian type. If you don't specify any group in this phase,\nautomatically a new group of type Alone is assigned.<\/p>\n<p>The following simulation example loads two groups of homogeneous pedestrians representing friends around the center of the scene, one having 10 members and the other 15.<\/p>\n<pre><code class=\"language-yaml\">incarnation: protelis\n\nvariables:\n  group1: &amp;group1\n    formula: it.unibo.alchemist.model.implementations.groups.Friends&lt;Any&gt;()\n    language: kotlin\n  group2: &amp;group2\n    formula: it.unibo.alchemist.model.implementations.groups.Friends&lt;Any&gt;()\n    language: kotlin\n\ndisplacements:\n  - in:\n      type: Circle\n      parameters: [10, 0, 0, 20]\n    nodes:\n      type: HomogeneousPedestrian2D\n      parameters: [*group1]\n  - in:\n      type: Circle\n      parameters: [15, 0, 0, 20]\n    nodes:\n      type: HomogeneousPedestrian2D\n      parameters: [*group2]\n<\/code><\/pre>\n<h3 id=\"steering-actions\">Steering Actions<\/h3>\n<p>A pedestrian that doesn't move is not a pedestrian. The need of <em>Actions<\/em> which can make it move in a realistic way\ninside the environment lead to the creation of particular behaviors such as <em>Flee<\/em>, <em>Wander<\/em>, <em>FollowFlowField<\/em>, <em>ObstacleAvoidance<\/em>... <br />\nAs a potential part of a group, there must exist also some attitudes typical of this sort of formation such as <em>Cohesion<\/em> and <em>Separation<\/em>.\nThe creation of complex movements can be accomplished by combining different steering actions together. <br />\nThe only way currently available to do so, it is to use some <em>SteeringBehavior<\/em> extending <em>Reaction<\/em>, which can recognize, across all the actions specified, the steering ones\nto trait them in a separate way.<\/p>\n<p>In this simulation 50 people wander around the environment and if they are approaching an obstacle they avoid it.<\/p>\n<pre><code class=\"language-yaml\">incarnation: protelis\n\nenvironment:\n  type: ImageEnvironment\n  parameters: [...]\n\nreactions: &amp;behavior\n  - time-distribution:\n      type: DiracComb\n      parameters: [3.0]\n    type: PrioritySteering\n    actions:\n      - type: RandomRotate\n      - type: Wander\n        parameters: [6, 4]\n      - type: ObstacleAvoidance\n        parameters: [4]\n\ndisplacements:\n  - in:\n      type: Circle\n      parameters: [50, 0, 0, 25]\n    nodes:\n      type: HomogeneousPedestrian2D\n<\/code><\/pre>\n<h3 id=\"steering-strategies\">Steering Strategies<\/h3>\n<p>In order to decide the logic according to which the different steering actions must be combined,\nthe concept of steering strategy has been introduced and related to it different reactions are available to be used\nwith the aim of computing the desired route for the pedestrians.\nIf you want a pedestrian to execute a single steering action at a time, <em>PrioritySteering<\/em> is a reaction\nwhich gives relevance only to the steering action whose target point is the nearest to the current pedestrian position.\nIf you want a pedestrian to execute a movement considering multiple actions at a time, <em>BlendedSteering<\/em> weights them\nconsidering their target distance to the current pedestrian position.\nThere is no limit to the number of steering actions which can be used together but some messy compositions\ncan result in unpredictable behaviors, so pay attention.<\/p>\n<p>In the example below a pedestrian reaches a point of interest, avoiding in the meantime to approach another position.<\/p>\n<pre><code class=\"language-yaml\">incarnation: protelis\n\nenvironment:\n  type: Continuous2DEnvironment\n\nreactions: &amp;behavior\n  - time-distribution:\n      type: DiracComb\n      parameters: [1.0]\n    type: BlendedSteering\n    actions:\n      - type: Seek\n        parameters: [1000, 500]\n      - type: Flee\n        parameters: [500, -500]\n\ndisplacements:\n  - in:\n      type: Point\n      parameters: [0, 0]\n    nodes:\n      type: HomogeneousPedestrian2D\n    programs:\n      - *behavior\n<\/code><\/pre>\n<h3 id=\"orienting-abilities\">Orienting abilities<\/h3>\n<p>As showed in the animation on the top of the page, pedestrians can be equipped with orienting abilities and different knowledge degrees of the environment. Of the types of pedestrians described above, only homogeneous and cognitive pedestrians can be equipped with orienting abilities.<\/p>\n<h4 id=\"homogeneous-orienting-pedestrians\">Homogeneous orienting pedestrians<\/h4>\n<p>First of all, orienting pedestrians can only be placed in an <code>ImageEnvironmentWithGraph<\/code>, which is a type of environment providing a navigation graph (see <a href=\"navigation-graphs.md\">how to generate navigation graphs<\/a>). Additionally, in order for orienting pedestrians to be able to navigate the environment, you need to provide them with the orienting behavior. Such object is a <em>reaction<\/em> that will exploit the spatial information available to a pedestrian in order to navigate the environment towards (or in search of) a destination. It will also register new information gained by the pedestrian during the simulation. Once you instanced the two objects described above, the only parameter you need to specify when declaring a homogeneous orienting pedestrian is its knowledge degree:<\/p>\n<pre><code class=\"language-yaml\">environment:\n  type: ImageEnvironmentWithGraph\n  parameters: [path/to/image.png, 1.0, 50, 50]\n\nreactions: &amp;behavior\n  - time-distribution:\n      type: DiracComb\n      parameters: [1.0]\n    type: OrientingBehavior2D\n\ndisplacements:\n  - in:\n      type: Point\n      parameters: [15, 15]\n    nodes:\n      type: OrientingHomogeneousPedestrian2D\n      parameters: [0.5]\n    programs:\n      - *behavior\n<\/code><\/pre>\n<p>The knowledge degree is a <code>Double<\/code> value in [0,1] describing the percentage of the environment the pedestrian is familiar with prior to the start of the simulation (thus it does not take into account the knowledge the pedestrian will gain during it). Note that despite their name, the knowledge degree of different homogeneous orienting pedestrians may differ, and even pedestrians with the same knowledge degree can be different as each one can be familiar with different portions of the environment.<\/p>\n<h4 id=\"cognitive-orienting-pedestrian\">Cognitive orienting pedestrian<\/h4>\n<p>Cognitive orienting pedestrians can be instanced providing their knowledge degree before all the other parameters needed. Remember to provide them with cognitive behavior as well or their emotions won't evolve at all:<\/p>\n<pre><code class=\"language-yaml\">reactions: &amp;behavior\n  - time-distribution:\n      type: DiracComb\n      parameters: [1.0]\n    type: CognitiveBehavior\n  - time-distribution:\n        type: DiracComb\n        parameters: [1.0]\n    type: OrientingBehavior2D\n\ndisplacements:\n  - in:\n      type: Point\n      parameters: [0, 0]\n    nodes:\n      type: OrientingCognitivePedestrian2D\n      parameters: [0.5, &quot;adult&quot;, &quot;male&quot;]\n    programs:\n      - *behavior\n<\/code><\/pre>\n<p>As you may have noted, no destination is specified when instancing orienting pedestrians and the associated behavior. This is because the navigation graph provided by the environment contains a set of destinations that will be used by the orienting behavior. These can be specified in the constructor of <code>ImageEnvironmentWithGraph<\/code>, for more information see <a href=\"navigation-graphs.md\">how to generate navigation graphs<\/a>.<\/p>\n<h3 id=\"evacuation-scenarios\">Evacuation Scenarios<\/h3>\n<p>Pedestrians can be loaded in any kind of <em>Environment<\/em> but it is recommended to use <em>PhysicsEnvironments<\/em> since they\nhave properties such as non-overlapping shapes which are advisable to be taken into consideration\nwhen working with a crowd.\nTo specify the existence of a potential danger or a significative zone in general inside the environment you can use <em>Layers<\/em>.\nEach layer is associated to a <em>Molecule<\/em> different from the one of all the others.\nYou must specify to any cognitive pedestrian the <em>Molecule<\/em> representing danger in the <em>Environment<\/em>,\notherwise it won't have the ability to recognize the presence of it.<\/p>\n<p>In the following example 100 adult females with cognitive capabilities get away from a zone in the environment where\nthere is a potential danger.<\/p>\n<pre><code class=\"language-yaml\">incarnation: protelis\n\nvariables:\n  danger: &amp;danger\n    formula: &quot;\\&quot;danger\\&quot;&quot;\n\nenvironment:\n  type: Continuous2DEnvironment\n\nlayers:\n  - type: BidimensionalGaussianLayer\n    molecule: *danger\n    parameters: [0.0, 0.0, 20.0, 15.0]\n\nreactions: &amp;behavior\n  - time-distribution:\n      type: DiracComb\n      parameters: [1.0]\n    type: PrioritySteering\n    actions:\n      - type: AvoidFlowField\n        parameters: [*danger]\n\ndisplacements:\n  - in:\n      type: Circle\n      parameters: [100, 0, 0, 50]\n    nodes:\n      type: CognitivePedestrian2D\n      parameters: [&quot;adult&quot;, &quot;female&quot;, *danger]\n    programs:\n      - *behavior\n<\/code><\/pre>\n<h3 id=\"further-references\">Further references<\/h3>\n<p><a href=\"https://doi.org/10.1007/978-3-319-70647-4_11\">C. Natalie van der Wal, Daniel Formolo, Mark A. Robinson, Michael Minkov, Tibor Bosse<br />\nSimulating Crowd Evacuation with Socio-Cultural, Cognitive, and Emotional Elements<br />\nTransactions on Computational Collective Intelligence XXVII. 2017.<\/a><\/p>\n<p><a href=\"http://citeseer.ist.psu.edu/viewdoc/summary?doi=10.1.1.16.8035\">Craig W. Reynolds<br />\nSteering Behaviors for Autonomous Characters. 1999.<\/a><\/p>\n<p><a href=\"https://www.tandfonline.com/doi/full/10.1080/23249935.2018.1432717\">Erik Andresen, Mohcine Chraibi &amp; Armin Seyfried<br />\nA representation of partial spatial knowledge: a cognitive map approach for evacuation simulations<\/a><\/p>\n"
              }]
            },
            "run-stand-alone": {
              "ownKey": "run-stand-alone",
              "ownPages": [{
                "reference": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "run-stand-alone",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/run-stand-alone"
                },
                "next": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "gui",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/gui"
                },
                "previous": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "run-gradle",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/run-gradle"
                },
                "description": "",
                "title": "Running Alchemist stand-alone",
                "content": "<p>Another way of running Alchemist is by using the redistributable jar file. However, using the simulator via <a href=\"https://gradle.org\">Gradle<\/a> is recommended. For further information, see how to <a href=\"run-gradle.md\">Run Alchemist via Gradle<\/a>.<\/p>\n<p>Such jar file can be downloaded from the <a href=\"https://github.com/AlchemistSimulator/Alchemist/releases\">releases section on github<\/a>.<\/p>\n<h2 id=\"running-alchemist\">Running Alchemist<\/h2>\n<p>If you got the redistributable, runnable Alchemist jar file, launching the simulator is straightforward. Open a terminal and move to the folder where the jar is located, then issue:<\/p>\n<pre><code class=\"language-bash\">java -jar alchemist-redist-VERSION.jar\n<\/code><\/pre>\n<p>Remember to substitute <code>VERSION<\/code> with the Alchemist version you actually have downloaded.<\/p>\n<h3 id=\"using-the-command-line-interface\">Using the Command Line Interface<\/h3>\n<p>To make the simulator do something for you (for instance, to make it run your own simulation) you can rely on the <a href=\"quickstart.md#command-line-interface\">command line interface<\/a>. Try to run the simulator with <code>-h<\/code> or <code>--help<\/code> option in order to get a list of the supported options:<\/p>\n<pre><code class=\"language-bash\">java -jar alchemist-redist-VERSION.jar -h\n<\/code><\/pre>\n<p>The most common case is you want to run your own simulation. To do so, you can rely on the <code>-y<\/code> option followed by the path to the simulation file. Alchemist simulations are contained in *.yml files, more information about how to write such simulations can be found <a href=\"yaml.md\">here<\/a>. So a typical command would be:<\/p>\n<pre><code class=\"language-bash\">java -jar alchemist-redist-VERSION.jar -y path/to/your/simulation.yml\n<\/code><\/pre>\n<h2 id=\"how-to-export-the-jar\">How to export the jar<\/h2>\n<p>Alchemist executable jar files can be generated at need, let's see how. As first step, use git to locally clone the <a href=\"https://github.com/AlchemistSimulator/Alchemist\">Alchemist repository<\/a>. Then, to generate the jar file you can rely on the <code>fatJar<\/code> gradle task. To run the task, point a terminal on the alchemist project's root, then on UNIX:<\/p>\n<pre><code class=\"language-bash\">./gradlew fatJar\n<\/code><\/pre>\n<p>On Windows:<\/p>\n<pre><code>gradlew.bat fatJar\n<\/code><\/pre>\n<p>As a result, an <code>alchemist-redist-{version}.jar<\/code> file will be generated in <code>build/libs/<\/code>. You can use it as described above.<\/p>\n"
              }]
            },
            "issues": {
              "ownKey": "issues",
              "ownPages": [{
                "reference": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "issues",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/issues"
                },
                "next": {
                  "path": "wiki",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "examples",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/examples"
                },
                "previous": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "faq",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/faq"
                },
                "description": "",
                "title": "Troubleshooting and known issues",
                "content": "<p>A list of known issues which we are aiming to resolve is tracked <a href=\"https://github.com/AlchemistSimulator/Alchemist/issues\">on the Alchemist Github issue tracker<\/a>.\nOf course, contributions are welcome.<\/p>\n<p>Other issues you may experience are listed below.\nIf you run into other issues yourself, please report them.<\/p>\n<h3 id=\"graphical-glitches-on-the-swing-graphical-interface\">Graphical glitches on the Swing graphical interface<\/h3>\n<h4 id=\"problem-description\">Problem description<\/h4>\n<p>Under some combination of hardware and drivers, the Swing interface may render uncorrectly.\nThis is due to Alchemist using OpenGL as rendering backend for Swing, in order to increase performance.<\/p>\n<p>Examples of graphical glitches are the following:<\/p>\n<p><img src=\"https://alchemistsimulator.github.io/latest/assets/media/issues/vbox-glitch-1.png\" alt=\"Graphical glitch example\" />\n<img src=\"https://alchemistsimulator.github.io/latest/assets/media/issues/vbox-glitch-2.png\" alt=\"Graphical glitch example\" />\n<img src=\"https://alchemistsimulator.github.io/latest/assets/media/issues/vbox-glitch-3.png\" alt=\"Graphical glitch example\" /><\/p>\n<p>The issue has been reproduced on:<\/p>\n<ul>\n<li>Virtualbox-virtualized Ubuntu installation<\/li>\n<li>Old AMD APU for notebooks with open source radeon driver<\/li>\n<\/ul>\n<h4 id=\"solution\">Solution<\/h4>\n<p>In case you are using a virtualized environment, if you can do so, switch to the &quot;bare metal&quot; operating system.\nOtherwise, you can try to disable Swing OpenGL support by <a href=\"https://alchemistsimulator.github.io/latest/wiki/usage/customization\">writing a custom component<\/a>\nwhich sets Swing non-accelerated mode, by invoking the following Java code:<\/p>\n<pre><code class=\"language-java\">System.setProperty(&quot;sun.java2d.opengl&quot;,&quot;false&quot;);\n<\/code><\/pre>\n<h3 id=\"writing-simulations\">Writing simulations<\/h3>\n<h4 id=\"use-of-formula-based-vars-as-the-basis-for-other-vars\">Use of formula-based vars as the basis for other vars<\/h4>\n<h4 id=\"can-i-use-formula-based-variables-for-other-variables\">Can I use formula-based variables for other variables?<\/h4>\n<p>Problem<\/p>\n<pre><code class=\"language-yaml\">variables:\n  episodes: &amp;episodes\n    formula: 5\n  episode: &amp;episode\n    min: 0\n    max: *episodes\n    step: 1\n    default: 0\n  learn: &amp;learn\n    formula: 'episode==episodes'\n<\/code><\/pre>\n<p>Error: <code>Exception in thread &quot;main&quot; java.lang.IllegalArgumentException: Unable to convert {formula=5, name=episodes} to class java.lang.Number<\/code><\/p>\n<p>Solution<\/p>\n<pre><code class=\"language-yaml\">episodes: &amp;episodes 5\n\nvariables:\n  episodes:\n    formula: *episodes\n  episode: &amp;episode\n    min: 0\n    max: *episodes\n    step: 1\n    default: 0\n  learn: &amp;learn\n    formula: 'episode==episodes'\n<\/code><\/pre>\n"
              }]
            },
            "grid": {
              "ownKey": "grid",
              "ownPages": [{
                "reference": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "grid",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/grid"
                },
                "next": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "customization",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/customization"
                },
                "previous": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "batch",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/batch"
                },
                "description": "",
                "title": "Grid computing support",
                "content": "<p>Grid computing support<\/p>\n"
              }]
            },
            "installation": {
              "ownKey": "installation",
              "ownPages": [{
                "reference": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "installation",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/installation"
                },
                "next": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "quickstart",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/quickstart"
                },
                "previous": {
                  "path": "wiki",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "usage",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage"
                },
                "description": "",
                "title": "Requirements and installation",
                "content": "<h2 id=\"requirements\">Requirements<\/h2>\n<p>Alchemist requires java 11 or later, if you don't have a Java Development Kit version 11+ installed we may recommend you to install the version of AdoptOpenJDK, which can be found <a href=\"https://adoptopenjdk.net/index.html?variant=openjdk11&amp;jvmVariant=hotspot\">here<\/a>. If you prefer, you can install it via <a href=\"https://github.com/shyiko/jabba\">Jabba<\/a> - a cross-platform Java Version Manager.<\/p>\n<p>For further information, the JDKs and environments tested <a href=\"https://travis-ci.org/AlchemistSimulator/Alchemist\">here<\/a> are those for which executing Alchemist is supported.<\/p>\n<h2 id=\"importing-alchemist\">Importing Alchemist<\/h2>\n<p>In this section you will be given information about how to import the Alchemist project in <a href=\"https://www.jetbrains.com/idea/\">IntelliJ IDEA<\/a> and <a href=\"https://www.eclipse.org/eclipseide/\">Eclipse<\/a>.<\/p>\n<h3 id=\"importing-in-intellij\">Importing in IntelliJ<\/h3>\n<h4 id=\"recommended-configuration\">Recommended configuration<\/h4>\n<p>Install the following plugins (use <kbd>Ctrl<\/kbd>+<kbd>Shift<\/kbd>+<kbd>A<\/kbd>, then search for &quot;Plugins&quot;):<\/p>\n<ul>\n<li>From the main list:\n<ul>\n<li>Scala<\/li>\n<li>Kotlin<\/li>\n<\/ul>\n<\/li>\n<li>From &quot;Browse Repositories&quot;:\n<ul>\n<li><a href=\"https://plugins.jetbrains.com/plugin/7358-antlr-v4-grammar-plugin\">ANTLR v4 grammar plugin<\/a><\/li>\n<li><a href=\"https://plugins.jetbrains.com/plugin/1065-checkstyle-idea\">Checkstyle-IDEA<\/a><\/li>\n<li><a href=\"https://plugins.jetbrains.com/plugin/3847-findbugs-idea\">FindBugs-IDEA<\/a><\/li>\n<li><a href=\"https://plugins.jetbrains.com/plugin/1137-pmdplugin\">PMDPlugin<\/a><\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<h4 id=\"import-procedure\">Import procedure<\/h4>\n<ol start=\"0\">\n<li>Windows user should perform an additional first step: before cloning the repository, make sure that the autocrlf feature of git is disabled, by issuing <code>git config --global core.autocrlf false<\/code>. If the step is not performed, git will automatically insert CRLF line endings, violating the project's Checkstyle rules (which are rather strict, and prevent the build from succeeding).<\/li>\n<li>Clone this repository in a folder of your preference using <code>git clone<\/code> appropriately<\/li>\n<li>Open IntellJ. If a project opens automatically, select &quot;Close project&quot;. You should be on the welcome screen of IntelliJ idea.<\/li>\n<li>Select &quot;Import Project&quot;<\/li>\n<li>Navigate your file system and find the folder where you cloned the repository. <strong>Do not select it<\/strong>. Open the folder, and you should find a lowercase <code>alchemist<\/code> folder. That is the correct project folder, not the outermost <code>Alchemist<\/code> folder (created by <code>git<\/code> in case you cloned without specifying a different folder name). Once the correct folder has been selected, click <kbd>Ok<\/kbd><\/li>\n<li>Select &quot;Import Project from external model&quot;<\/li>\n<li>Make sure &quot;Gradle&quot; is selected as external model tool<\/li>\n<li>Click <kbd>Finish<\/kbd><\/li>\n<li>If prompted to override any .idea file, try to answer <kbd>No<\/kbd>. It's possible that IntelliJ refuses to proceed, in which case click <kbd>Finish<\/kbd> again, then select <kbd>Yes<\/kbd>.<\/li>\n<li>A dialog stating that &quot;IntelliJ IDEA found a Gradle build script&quot; may appear, in such case answer <kbd>Import Gradle Project<\/kbd>.<\/li>\n<li>Wait for the IDE to import the project from Gradle. The process may take several minutes, due to the amount of dependencies. Should the synchronization fail, make sure that the IDE's Gradle is configured correctly:<\/li>\n<li>In 'Settings -&gt; Build, Execution, Deployment -&gt; Build Tools &gt; Gradle', for the option 'Use Gradle from' select 'gradle-wrapper.properties file'. Enabling auto-import is also recommended.<\/li>\n<li><strong>Important:<\/strong> Alchemist requires java 11+, so make sure the 'Gradle JVM' option points to such a version (if you don't have a JDK 11+ installed make sure to get one).<\/li>\n<li>Once imported, the project may still be unable to compile, due to missing sources in incarnation-biochemistry. This problem can be solved by opening the IntelliJ terminal (e.g. with <kbd>Ctrl<\/kbd>+<kbd>Shift<\/kbd>+<kbd>A<\/kbd>, typing &quot;terminal&quot; and pressing <kbd>Enter<\/kbd>), and issue:<\/li>\n<\/ol>\n<ul>\n<li>On Unix: <code>./gradlew alchemist-incarnation-biochemistry:generateGrammarSource<\/code><\/li>\n<li>On Windows: <code>gradlew.bat alchemist-incarnation-biochemistry:generateGrammarSource<\/code><\/li>\n<\/ul>\n<h3 id=\"importing-in-eclipse\">Importing in Eclipse<\/h3>\n<h4 id=\"recommended-configuration-1\">Recommended configuration<\/h4>\n<ul>\n<li>Download [the latest Eclipse for Java][eclipse]. For a smooth import, Gradle Buildship is needed (starting from Eclipse Mars.1, it is included by default)\n<ul>\n<li>Arch Linux users can use the package <code>eclipse-java<\/code><\/li>\n<li>Ubuntu-based Linux users can install it using <a href=\"https://wiki.ubuntu.com/ubuntu-make\">ubuntu-make<\/a>:\n<pre><code class=\"language-bash\">sudo apt-add-repository ppa:ubuntu-desktop/ubuntu-make\nsudo apt-get update\nsudo apt-get install ubuntu-make\numake ide eclipse \n<\/code><\/pre>\n<\/li>\n<\/ul>\n<\/li>\n<li>Install the Scala interpreter:\n<ul>\n<li>Arch Linux users can use the package <code>scala<\/code><\/li>\n<li>Ubuntu-based Linux users can use the package scala:\n<pre><code class=\"language-bash\">sudo apt-get update\nsudo apt-get install scala\n<\/code><\/pre>\n<\/li>\n<li>Users of other OS can follow the <a href=\"https://www.scala-lang.org/download/install.html\">official installation guide<\/a><\/li>\n<\/ul>\n<\/li>\n<li>Install the required eclipse plugins:\n<ul>\n<li>In Eclipse, click &quot;Help&quot; -&gt; &quot;Eclipse Marketplace...&quot;<\/li>\n<li>In the search field enter &quot;findbugs&quot;, then press Enter<\/li>\n<li>One of the retrieved entries should be &quot;FindBugs Eclipse Plugin&quot;, click Install<\/li>\n<li>Click &quot;&lt; Install More&quot;<\/li>\n<li>In the search field enter &quot;checkstyle&quot;, then press Enter<\/li>\n<li>One of the retrieved entries should be &quot;Checkstyle Plug-in&quot; with a written icon whose text is &quot;eclipse-cs&quot;, click Install<\/li>\n<li>Click &quot;&lt; Install More&quot;<\/li>\n<li>In the search field enter &quot;xtext&quot;, then press Enter<\/li>\n<li>One of the retrieved entries should be &quot;Eclipse Xtext&quot;, click Install<\/li>\n<li>Click &quot;&lt; Install More&quot;<\/li>\n<li>In the search field enter &quot;scala&quot;, then press Enter<\/li>\n<li>One of the retrieved entries should be &quot;Scala IDE 4.2.x&quot;, click Install<\/li>\n<li>Click &quot;Install Now &gt;&quot;<\/li>\n<li>Wait for Eclipse to resolve all the features<\/li>\n<li>Click &quot;Confirm &gt;&quot;<\/li>\n<li>Follow the instructions, accept the license, wait for Eclipse to download and install the product, accept the installation and restart the IDE<\/li>\n<li>When restarted, click &quot;Help&quot; -&gt; &quot;Install New Software...&quot;<\/li>\n<li>Click &quot;Add...&quot;<\/li>\n<li>In &quot;Location&quot; field, enter <code>https://dl.bintray.com/pmd/pmd-eclipse-plugin/updates/<\/code><\/li>\n<li>The &quot;Name&quot; field is not mandatory (suggested: &quot;PMD&quot;)<\/li>\n<li>Click OK.<\/li>\n<li>If not already selected, in &quot;Work with:&quot; dropdown menu choose the just added update site<\/li>\n<li>Select &quot;PMD for Eclipse 4&quot; and click next<\/li>\n<li>Follow the instructions, accept the license, wait for Eclipse to download and install the product, accept the installation and restart the IDE.<\/li>\n<\/ul>\n<\/li>\n<li>Set the line delimiter to LF (only for Windows users)\n<ul>\n<li>In Eclipse, click window -&gt; preferences<\/li>\n<li>In the search form enter &quot;encoding&quot;, then press Enter<\/li>\n<li>Go to General -&gt; Workspace<\/li>\n<li>In the section &quot;New text file line delimiter&quot; check &quot;Other&quot; and choose Unix<\/li>\n<li>Apply<\/li>\n<\/ul>\n<\/li>\n<li>Use space instead of tabs\n<ul>\n<li>In Eclipse, click window -&gt; preferences<\/li>\n<li>Go to General -&gt; Editors -&gt; Text Editors<\/li>\n<li>Check &quot;insert spaces for tabs&quot; option.<\/li>\n<li>Apply.<\/li>\n<li>Go to Java -&gt; Code style -&gt; Formatter<\/li>\n<li>Click Edit button<\/li>\n<li>In Indentation tab, under &quot;General Settings&quot;, set &quot;tab policy&quot; to &quot;Spaces only&quot;<\/li>\n<li>Apply (you should probably rename the formatter settings).<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<h4 id=\"import-procedure-1\">Import Procedure<\/h4>\n<ul>\n<li>\n<p>Install git on your system, if you haven't yet<\/p>\n<\/li>\n<li>\n<p>Pull up a terminal, and <code>cd<\/code> to the folder where you want the project to be cloned (presumably, your Eclipse workspace)<\/p>\n<\/li>\n<li>\n<p>Clone the project with <code>git clone git@github.com:AlchemistSimulator/alchemist.git<\/code><\/p>\n<ul>\n<li>If you are a Windows user, you might find easier to import via HTTPS: <code>git clone https://github.com/AlchemistSimulator/Alchemist.git<\/code><\/li>\n<li>If the cloning ends with <code>Permission denied (publickey)<\/code> error, please, follow <a href=\"https://help.github.com/articles/error-permission-denied-publickey/\">this<\/a> guide.<\/li>\n<\/ul>\n<\/li>\n<li>\n<p>In terminal type <code>git branch<\/code>. This shows you all the branches. If you only have the master branch type <code>git branch -a<\/code> to see local and remote branches. For add a remote branch to your local repository type <code>git checkout -b &lt;branch-name&gt; origin/&lt;branch-name&gt;<\/code>. For switch between branches use <code>git checkout &lt;branch-name&gt;<\/code>.<\/p>\n<\/li>\n<li>\n<p>Open Eclipse<\/p>\n<\/li>\n<li>\n<p>Click File -&gt; Import -&gt; Gradle -&gt; Gradle Project -&gt; Next<\/p>\n<\/li>\n<li>\n<p>Select the project root directory, namely, the <code>alchemist<\/code> folder located inside the folder where you have cloned the repository. Do not point to the folder containing this <code>README.md<\/code> file, but to the <code>alchemist<\/code> folder on the same level.<\/p>\n<\/li>\n<li>\n<p>Next<\/p>\n<\/li>\n<li>\n<p>Make sure that &quot;Gradle wrapper (recommended)&quot; is selected<\/p>\n<\/li>\n<li>\n<p>Next<\/p>\n<\/li>\n<li>\n<p>Wait for Eclipse to scan the project, then make sure that the Gradle project structure can be expanded, and contains an external <code>alchemist<\/code> project and many <code>alchemist-*<\/code> subprojects. If it does not, you have pointed to the wrong folder while importing, go back and select the correct one.<\/p>\n<\/li>\n<li>\n<p>Finish<\/p>\n<\/li>\n<li>\n<p>When asked about the existing Eclipse configuration, select &quot;Keep&quot; (so that all the default development options are imported)<\/p>\n<\/li>\n<li>\n<p>The projects will appear in your projects list.<\/p>\n<\/li>\n<li>\n<p>Checkstyle, PMD and FindBugs should be pre-configured.<\/p>\n<\/li>\n<li>\n<p>If you have errors in <code>alchemist-incarnation-biochemistry<\/code> project open a terminal in alchemist folder (do not point to the folder containing this <code>README.md<\/code> file, but to the <code>alchemist<\/code> folder on the same level) and run:<\/p>\n<ul>\n<li>If you are a Linux or Mac user <code>./gradlew alchemist-incarnation-biochemistry:generateGrammarSource<\/code><\/li>\n<li>If you are a Windows user: <code>gradlew.bat alchemist-incarnation-biochemistry:generateGrammarSource<\/code><\/li>\n<\/ul>\n<p>Go to Eclipse, right click on <code>alchemist-incarnation-biochemistry<\/code> project -&gt; Refresh<\/p>\n<\/li>\n<li>\n<p>If you have errors in <code>alchemist-projectview<\/code> project, make sure Eclipse Xtext plugin is correctly installed<\/p>\n<\/li>\n<\/ul>\n"
              }]
            },
            "biochemistry": {
              "ownKey": "biochemistry",
              "ownPages": [{
                "reference": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "biochemistry",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/biochemistry"
                },
                "next": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "protelis",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/protelis"
                },
                "previous": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "yaml",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/yaml"
                },
                "description": "",
                "title": "Alchemist biochemistry incarnation",
                "content": "<p>Biochemistry is an incarnation of Alchemist developed to provide support for biochemical reactions that take place inside a biological cell or a group of those surrounded by a common environment.<\/p>\n<h3 id=\"the-biochemistry-incarnation\">The Biochemistry Incarnation<\/h3>\n<p>The Biochemistry incarnation provides a way to:<\/p>\n<ul>\n<li>Manage the creation, destruction and relocation of a molecule (which can be either a simple atom or a complex protein) inside a cell or from a cell to another<\/li>\n<li>Create junctions between cells using a specified amount of molecules. The junctions are modeled in a general way, but with a simple use of actions and conditions it will be possible to create tight junctions, anchoring junctions, gap junctions and even customized one<\/li>\n<li>Move a cell inside its environment in different ways, handling collisions between two ore more of them in a simplistic but effective way<\/li>\n<\/ul>\n<h3 id=\"how-to-run-a-simulation\">How To Run A Simulation<\/h3>\n<p>As first step, it is required to add this line of code in order to notice Alchemist to use the Biochemistry Incarnation:<\/p>\n<pre><code class=\"language-yaml\">incarnation: biochemistry\n<\/code><\/pre>\n<h2 id=\"the-biochemistry-dsl\">The Biochemistry DSL<\/h2>\n<p>Biochemistry programs are encapsulated inside the YAML configuration file with a simple and human-readable syntax.\nThose simple reactions can be written in the section <code>programs<\/code> of the configuration file, as value of the <code>program<\/code> key:<\/p>\n<pre><code class=\"language-yaml\">programs:\n  -\n    - time-distribution: 1\n      program: &quot;[ATP] --&gt; [ADP] + [P]&quot;\n<\/code><\/pre>\n<h3 id=\"reactions\">Reactions<\/h3>\n<p>A reaction rule can be set using the symbol <code>--&gt;<\/code> according to chemistry equations, and placing both the molecules and the actions inside two square brackets (ex. <code>[OH]<\/code>, <code>[H2O]<\/code>, <code>[BrownianMove(0.1)]<\/code>)<\/p>\n<p>The following line, so, represents a basic chemical reaction that happens inside a cell: <code>[H] + [OH] --&gt; [H2O]<\/code><\/p>\n<p>However, reactions can also take place outside the cell itself. Biological cells, indeed, can swap molecules with its neighbour or the surrounding environment, and this is possible in Alchemist too, using the keywords: <code>in cell<\/code>, <code>in neighbour<\/code> and <code>in env<\/code>.<\/p>\n<p>The reaction <code>[A in env] --&gt; [A in cell]<\/code> moves the molecule A from the environement inside the cell.<\/p>\n<p>If the location is not explicit, it is assumed the molecule to be inside the cell.<\/p>\n<h3 id=\"junctions\">Junctions<\/h3>\n<p>A junction can be created just with a neighbor of the programmed cell.<\/p>\n<p>The way to create it is with the syntax <code>[X] + [Y in neighbor] --&gt; [junction X-Y]<\/code>, which means that when this reaction happens a junction using the molecule <code>X<\/code> from the cell and the molecule <code>Y<\/code> from the neighbor will be created.<\/p>\n<p>The junction can also be destroyed using the syntax <code>[junction X-Y] --&gt; []<\/code>, causing the reintroduction of the molecule <code>X<\/code> inside the cell and the molecule <code>Y<\/code> inside the neighbor.<\/p>\n<p>Also, the junction will be automatically removed if, because of their movement, the cells will stop being in a neighborhood.<\/p>\n<h3 id=\"custom-conditions\">Custom Conditions<\/h3>\n<p>Any custom condition must be placed after the reaction products following an <code>if<\/code> clause.<\/p>\n<p>For example, to create a molecule if the cell has at least three neighbor you would write:<\/p>\n<p><code>[] --&gt; [X] if NumberOfNeighborsGreaterThan(5)<\/code><\/p>\n<h3 id=\"movement\">Movement<\/h3>\n<p>A movement can be performed in the same way of a reaction, using the function as it is a product of the reaction itself.<\/p>\n<p>This program constantly moves a cell without any other condition:<\/p>\n<p><code>[] --&gt; [BrownianMove(0.1)]<\/code><\/p>\n<h3 id=\"collisions\">Collisions<\/h3>\n<p>The Biochemistry Incarnation supports cell collisions and deformations too.<\/p>\n<p>In order to do that, however, you must set this environment:<\/p>\n<pre><code class=\"language-yaml\">environment:\n  type: BioRect2DEnvironmentNoOverlap\n<\/code><\/pre>\n<p>Then, when creating the cells, you must use these specific implementations:<\/p>\n<pre><code class=\"language-yaml\">nodes:\n  type: CircularDeformableCellImpl\n  parameters: [max-radius, rigidity]\n<\/code><\/pre>\n<p>The minimum radius of the cell is so that <code>min-radius = rigidity * max-radius<\/code> and the two parameters are used to compute collisions and impacts between the cells.<\/p>\n"
              }]
            },
            "scafi": {
              "ownKey": "scafi",
              "ownPages": [{
                "reference": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "scafi",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/scafi"
                },
                "next": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "indoor",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/indoor"
                },
                "previous": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "sapere",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/sapere"
                },
                "description": "",
                "title": "Scafi",
                "content": "<p>Scafi<\/p>\n"
              }]
            },
            "smartcam": {
              "ownKey": "smartcam",
              "ownPages": [{
                "reference": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "smartcam",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/smartcam"
                },
                "next": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "maps",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/maps"
                },
                "previous": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "cognitive-pedestrians",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/cognitive-pedestrians"
                },
                "description": "",
                "title": "With Smart Cameras",
                "content": "<h3 id=\"prerequisites\">Prerequisites<\/h3>\n<p>This guide assumes you already know <a href=\"https://alchemistsimulator.github.io/latest/wiki/simulator/metamodel\">the Alchemist metamodel<\/a> and <a href=\"https://alchemistsimulator.github.io/latest/wiki/usage/yaml\">how to write simulations in YAML<\/a>.<\/p>\n<h3 id=\"smartcam\">Smartcam<\/h3>\n<p>A smartcam is a camera able to detect objects of interest and to communicate with other smartcameras.\nIn many cases it is also assumed to be mounted on a drone as to be able to freely move around in the environment.\nIn Alchemist smartcams are simulated as <em>Nodes<\/em> equipped with specific <em>Reactions<\/em> defining their capabilities and behaviour.\nSingle capabilities are expressed as <em>Actions<\/em>.<\/p>\n<h4 id=\"vision\">Vision<\/h4>\n<p>The most basic example of a camera is a <em>Node<\/em> containing a <em>Reaction<\/em> with the <em>See<\/em> action. Note: the <em>See<\/em> action currently\nonly works in 2D environments supporting euclidean geometry, for example <em>Continuous2DEnvironment<\/em> and <em>Rectangular2DEnvironment<\/em>.\nThe <em>See<\/em> action requires 3 parameters to be defined in this order: the distance of the field of view, its angle in degrees,\nand the name of the <em>Molecule<\/em> which will contain the ouput, namely a list of the nodes contained in the field of view which is updated\neach time the action is triggered. Optionally a fourth parameter can be defined in order to filter the output. Such parameter is expected to\nbe the name of a <em>Molecule<\/em> which has to be contained in a <em>Node<\/em> for it to be visible, e.g. if it is &quot;wanted&quot; then only nodes containing\na molecule named &quot;wanted&quot; will be seen.<\/p>\n<h4 id=\"movement\">Movement<\/h4>\n<p>The ability to move can be defined using movement actions such as <em>MoveToTarget<\/em> or <em>FollowAtDistance<\/em>.\n<em>MoveToTarget<\/em> expects 2 parameters such as the name of the molecule containing the target's position and the movement speed.\n<em>FollowAtDistance<\/em> requires the name of the molecule containing the target's position, the distance to mantain from the target,\nand the movement speed.<\/p>\n<h4 id=\"rotation\">Rotation<\/h4>\n<p>The action <em>HeadTowardTarget<\/em> can be used to instruct cameras to always face the specified target, it requires\n2 parameters such as the name of the molecule containing the target's position and the angular speed in degrees.\nThe <em>Spin<\/em> action only requires the angular speed and will make the camera spin around itself like a radar.<\/p>\n<h4 id=\"algorithm\">Algorithm<\/h4>\n<p>Without defining an algorithm the cameras wouldn't do anything interesting. Algorithms can be definied in a moltitude of different\nways. Below there's an example of a basic algorithm defined only with <em>Reactions<\/em>, <em>Conditions<\/em> and <em>Actions<\/em>.\nIt is advisable to use real programming languages such as <a href=\"https://alchemistsimulator.github.io/latest/wiki/usage/protelis\">Protelis<\/a> to write more elaborate algorithms.\nIn this regard you'd want to use the protelis incarnation, make cameras be <em>ProtelisNode<\/em>, and to make sure\nthat the input and output molecules' names of the actions match the ones used by the protelis program.<\/p>\n<h3 id=\"complete-example-of-a-simulation\">Complete example of a simulation<\/h3>\n<p>We start by writing a basic yaml configuration to place 20 potential targets and 10 cameras in a 400 x 400 rectangular environment:<\/p>\n<pre><code class=\"language-yaml\">incarnation: protelis\n\nvariables:\n  NumHumans: &amp;NumHumans\n    formula: 20\n  NumCameras: &amp;NumCameras\n    formula: 10\n  EnvironmentSize: &amp;EnvironmentSize\n    formula: 400\n  HalfEnvironmentSize: &amp;HalfEnvironmentSize\n    formula: EnvironmentSize / 2\n  EnvironmentOrigin: &amp;EnvironmentOrigin\n    formula: -HalfEnvironmentSize\n\n\nenvironment:\n  type: Rectangular2DEnvironment\n  parameters: [*EnvironmentSize, *EnvironmentSize]\n\ndisplacements:\n  - in: # possible targets\n      type: Rectangle\n      parameters: [*NumHumans, *EnvironmentOrigin, *EnvironmentOrigin, *EnvironmentSize, *EnvironmentSize]\n    nodes:\n      type: CircleNode\n      parameters: [1]\n  - in: # cameras\n      type: Rectangle\n      parameters: [*NumCameras, *EnvironmentOrigin, *EnvironmentOrigin, *EnvironmentSize, *EnvironmentSize]\n    nodes:\n      type: ProtelisNode\n<\/code><\/pre>\n<p>Then we give cameras the ability to see other nodes. The <em>See<\/em> action requires the distance and angle of the field of view. Each time it is triggered, it writes all the nodes seen in the molecule <em>vision<\/em>.<\/p>\n<pre><code class=\"language-yaml\">incarnation: protelis\n\nvariables:\n  NumHumans: &amp;NumHumans\n    formula: 20\n  NumCameras: &amp;NumCameras\n    formula: 10\n  EnvironmentSize: &amp;EnvironmentSize\n    formula: 400\n  HalfEnvironmentSize: &amp;HalfEnvironmentSize\n    formula: EnvironmentSize / 2\n  EnvironmentOrigin: &amp;EnvironmentOrigin\n    formula: -HalfEnvironmentSize\n  CameraFoVAngle: &amp;CameraFoVAngle\n    formula: 60\n  CameraFoVDistance: &amp;CameraFoVDistance\n    formula: 20\n\nenvironment:\n  type: Rectangular2DEnvironment\n  parameters: [*EnvironmentSize, *EnvironmentSize]\n\nprograms:\n  - &amp;Camera\n    - time-distribution: 1\n      type: ChemicalReaction\n      actions:\n        - type: See\n          parameters: [*CameraFoVDistance, *CameraFoVAngle, vision]\n\ndisplacements:\n  - in: # possible targets\n      type: Rectangle\n      parameters: [*NumHumans, *EnvironmentOrigin, *EnvironmentOrigin, *EnvironmentSize, *EnvironmentSize]\n    nodes:\n      type: CircleNode\n      parameters: [1]\n  - in: # cameras\n      type: Rectangle\n      parameters: [*NumCameras, *EnvironmentOrigin, *EnvironmentOrigin, *EnvironmentSize, *EnvironmentSize]\n    nodes:\n      type: ProtelisNode\n    programs:\n      - *Camera\n<\/code><\/pre>\n<p>In this example we make humans move randomly. We also want to randomly toggle a <em>wanted<\/em> molecule in them, as to have a way to mark interesting targets that needs to be followed by the cameras. Every 50 seconds each human has a 1% probability to become <em>wanted<\/em>.<\/p>\n<pre><code class=\"language-yaml\">incarnation: protelis\n\nvariables:\n  HumanSpeed: &amp;HumanSpeed\n    formula: 1\n  NumHumans: &amp;NumHumans\n    formula: 20\n  NumCameras: &amp;NumCameras\n    formula: 10\n  EnvironmentSize: &amp;EnvironmentSize\n    formula: 400\n  HalfEnvironmentSize: &amp;HalfEnvironmentSize\n    formula: EnvironmentSize / 2\n  EnvironmentOrigin: &amp;EnvironmentOrigin\n    formula: -HalfEnvironmentSize\n  CameraFoVAngle: &amp;CameraFoVAngle\n    formula: 60\n  CameraFoVDistance: &amp;CameraFoVDistance\n    formula: 20\n\nenvironment:\n  type: Rectangular2DEnvironment\n  parameters: [*EnvironmentSize, *EnvironmentSize]\n\nprograms:\n  - &amp;Human\n    - time-distribution: 1\n      type: ChemicalReaction\n      actions:\n        - type: ZigZagMove\n          parameters: [*HalfEnvironmentSize, *HumanSpeed]\n    - time-distribution: 0.02\n      type: ChemicalReaction\n      actions:\n        - type: RandomlyToggleMolecule\n          parameters: [wanted, true, 0.01]\n  - &amp;Camera\n    - time-distribution: 1\n      type: ChemicalReaction\n      actions:\n        - type: See\n          parameters: [*CameraFoVDistance, *CameraFoVAngle, vision]\n\ndisplacements:\n  - in: # possible targets\n      type: Rectangle\n      parameters: [*NumHumans, *EnvironmentOrigin, *EnvironmentOrigin, *EnvironmentSize, *EnvironmentSize]\n    nodes:\n      type: CircleNode\n      parameters: [1]\n    programs:\n      - *Human\n  - in: # cameras\n      type: Rectangle\n      parameters: [*NumCameras, *EnvironmentOrigin, *EnvironmentOrigin, *EnvironmentSize, *EnvironmentSize]\n    nodes:\n      type: ProtelisNode\n    programs:\n      - *Camera\n<\/code><\/pre>\n<p>It is time for cameras to identify <em>wanted<\/em> targets so we add a <em>ExtractClosestVisibleNodeAtDistance<\/em> action in order to select the closest node to the center of the field of view.\nWe also specify the <em>wanted<\/em> molecule in the <em>See<\/em> action in order to filter only the interesting nodes.\nThen, at the condition that a <em>target<\/em> is found, we want the cameras to start following it, so we add the actions <em>FollowAtDistance<\/em> and <em>HeadTowardTarget<\/em>.<\/p>\n<pre><code class=\"language-yaml\">incarnation: protelis\n\nvariables:\n  HumanSpeed: &amp;HumanSpeed\n    formula: 1\n  NumHumans: &amp;NumHumans\n    formula: 20\n  NumCameras: &amp;NumCameras\n    formula: 10\n  EnvironmentSize: &amp;EnvironmentSize\n    formula: 400\n  HalfEnvironmentSize: &amp;HalfEnvironmentSize\n    formula: EnvironmentSize / 2\n  EnvironmentOrigin: &amp;EnvironmentOrigin\n    formula: -HalfEnvironmentSize\n  CameraFoVAngle: &amp;CameraFoVAngle\n    formula: 60\n  CameraFoVDistance: &amp;CameraFoVDistance\n    formula: 20\n  CameraSpeed: &amp;CameraSpeed\n    formula: 1\n  CameraAngularSpeed: &amp;CameraAngularSpeed\n    formula: 3\n  CameraDistanceFromTarget: &amp;CameraDistanceFromTarget\n    formula: 2 * CameraFoVDistance / 3\n\nenvironment:\n  type: Rectangular2DEnvironment\n  parameters: [*EnvironmentSize, *EnvironmentSize]\n\nprograms:\n  - &amp;Human\n    - time-distribution: 1\n      type: ChemicalReaction\n      actions:\n        - type: ZigZagMove\n          parameters: [*HalfEnvironmentSize, *HumanSpeed]\n    - time-distribution: 0.02\n      type: ChemicalReaction\n      actions:\n        - type: RandomlyToggleMolecule\n          parameters: [wanted, true, 0.01]\n  - &amp;Camera\n    - time-distribution: 1\n      type: ChemicalReaction\n      actions:\n        - type: See\n          parameters: [*CameraFoVDistance, *CameraFoVAngle, vision, wanted]\n        - type: ExtractClosestVisibleNodeAtDistance\n          parameters: [*CameraDistanceFromTarget, vision, target]\n    - time-distribution: 1\n      type: ChemicalReaction\n      conditions:\n        - type: ContainsMolecule\n          parameters: [target]\n      actions:\n        - type: HeadTowardTarget\n          parameters: [target, *CameraAngularSpeed]\n        - type: FollowAtDistance\n          parameters: [target, *CameraDistanceFromTarget, *CameraSpeed]\n\ndisplacements:\n  - in: # possible targets\n      type: Rectangle\n      parameters: [*NumHumans, *EnvironmentOrigin, *EnvironmentOrigin, *EnvironmentSize, *EnvironmentSize]\n    nodes:\n      type: CircleNode\n      parameters: [1]\n    programs:\n      - *Human\n  - in: # cameras\n      type: Rectangle\n      parameters: [*NumCameras, *EnvironmentOrigin, *EnvironmentOrigin, *EnvironmentSize, *EnvironmentSize]\n    nodes:\n      type: ProtelisNode\n    programs:\n      - *Camera\n<\/code><\/pre>\n<p>To conclude, we want the cameras to explore randomly and spin when no targets are detected. For this purpose we add another reaction with a <em>Spin<\/em> and <em>ZigZagMove<\/em> and with an <em>Else<\/em> condition which will be triggered when the conditions of the other reactions are not valid.<\/p>\n<pre><code class=\"language-yaml\">incarnation: protelis\n\nvariables:\n  HumanSpeed: &amp;HumanSpeed\n    formula: 1\n  NumHumans: &amp;NumHumans\n    formula: 20\n  NumCameras: &amp;NumCameras\n    formula: 10\n  EnvironmentSize: &amp;EnvironmentSize\n    formula: 400\n  HalfEnvironmentSize: &amp;HalfEnvironmentSize\n    formula: EnvironmentSize / 2\n  EnvironmentOrigin: &amp;EnvironmentOrigin\n    formula: -HalfEnvironmentSize\n  CameraFoVAngle: &amp;CameraFoVAngle\n    formula: 60\n  CameraFoVDistance: &amp;CameraFoVDistance\n    formula: 20\n  CameraSpeed: &amp;CameraSpeed\n    formula: 1\n  CameraAngularSpeed: &amp;CameraAngularSpeed\n    formula: 3\n  CameraDistanceFromTarget: &amp;CameraDistanceFromTarget\n    formula: 2 * CameraFoVDistance / 3\n\nenvironment:\n  type: Rectangular2DEnvironment\n  parameters: [*EnvironmentSize, *EnvironmentSize]\n\nprograms:\n  - &amp;Human\n    - time-distribution: 1\n      type: ChemicalReaction\n      actions:\n        - type: ZigZagMove\n          parameters: [*HalfEnvironmentSize, *HumanSpeed]\n    - time-distribution: 0.02\n      type: ChemicalReaction\n      actions:\n        - type: RandomlyToggleMolecule\n          parameters: [wanted, true, 0.01]\n  - &amp;Camera\n    - time-distribution: 1\n      type: ChemicalReaction\n      actions:\n        - type: See\n          parameters: [*CameraFoVDistance, *CameraFoVAngle, vision, wanted]\n        - type: ExtractClosestVisibleNodeAtDistance\n          parameters: [*CameraDistanceFromTarget, vision, target]\n    - time-distribution: 1\n      type: ChemicalReaction\n      conditions:\n        - type: ContainsMolecule\n          parameters: [target]\n      actions:\n        - type: HeadTowardTarget\n          parameters: [target, *CameraAngularSpeed]\n        - type: FollowAtDistance\n          parameters: [target, *CameraDistanceFromTarget, *CameraSpeed]\n    - time-distribution: 1\n      type: ChemicalReaction\n      conditions:\n        - type: Else\n          parameters:\n      actions:\n        - type: Spin\n          parameters: [*CameraAngularSpeed]\n        - type: ZigZagMove\n          parameters: [*HalfEnvironmentSize, *CameraSpeed]\n\ndisplacements:\n  - in: # possible targets\n      type: Rectangle\n      parameters: [*NumHumans, *EnvironmentOrigin, *EnvironmentOrigin, *EnvironmentSize, *EnvironmentSize]\n    nodes:\n      type: CircleNode\n      parameters: [1]\n    programs:\n      - *Human\n  - in: # cameras\n      type: Rectangle\n      parameters: [*NumCameras, *EnvironmentOrigin, *EnvironmentOrigin, *EnvironmentSize, *EnvironmentSize]\n    nodes:\n      type: ProtelisNode\n    programs:\n      - *Camera\n<\/code><\/pre>\n<h3 id=\"further-references\">Further references<\/h3>\n<p><a href=\"https://doi.org/10.1145/3131885.3131909\">Lukas Esterle, Peter R. Lewis<br />\nOnline Multi-object k-coverage with Mobile Smart Cameras<br />\nIn Proceedings of the International Conference on Distributed Smart Cameras (ICDSC). Nominated for best paper. 2017.<\/a><\/p>\n"
              }]
            },
            "faq": {
              "ownKey": "faq",
              "ownPages": [{
                "reference": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "faq",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/faq"
                },
                "next": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "issues",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/issues"
                },
                "previous": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "customization",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/customization"
                },
                "description": "",
                "title": "Frequently Asked Questions",
                "content": "<h5 id=\"where-does-alchemist-find-stuff\">Where does Alchemist find stuff?<\/h5>\n<p>It uses <strong>default packages<\/strong>; e.g., for actions, it is <strong><code>it.unibo.alchemist.model.implementations.actions<\/code><\/strong>.\nIf you need to provide a type in the YAML and use another package, you must provide the FQCNs.<\/p>\n"
              }]
            },
            "indoor": {
              "ownKey": "indoor",
              "ownPages": [{
                "reference": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "indoor",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/indoor"
                },
                "next": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "navigation-graphs",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/navigation-graphs"
                },
                "previous": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "scafi",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/scafi"
                },
                "description": "",
                "title": "Simulation of indoor environments",
                "content": "<p>In order to load map of indoor environment, you can use <a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/environments/ImageEnvironment\">ImageEnvironment<\/a>.<\/p>\n<p>ImageEnvironment loads the map as raster image from file, interpreting the black pixels as obstacles\n(wall-like areas not accessible to nodes). Color of pixels that represents obstacles can be set to\nevery color with relative constructor's parameter, black is default.<\/p>\n<p>By default, each pixel is considered as a 1x1 block.\nAs a consequence, a 1200x600 image with a vertical line of black pixels at coordinate 500 will be interpreted as a single\nobstacle of size 1x600 starting at coordinate (500, 0).\nIt is possible to scale up or down the size of the environment by acting on the zoom parameter of <a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/environments/ImageEnvironment\">ImageEnvironment<\/a>,\nas well as changing the initial coordinates.<\/p>\n<p>In this example the image with the map is in the classpath in the folder <code>images<\/code>. Using a network-model\nlike <a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/linkingrules/ObstaclesBreakConnection\">ObstaclesBreakConnection<\/a> the connections between nodes are created only if there\naren't obstacles between them. The nodes moves with a brownian move and never they moves across the walls.<\/p>\n<pre><code class=\"language-yaml\">incarnation: protelis\nenvironment:\n  type: ImageEnvironment\n  parameters: [images/foo.png]\n  \n  network-model: { type: ObstaclesBreakConnection, parameters: [100] }\n  \n  program-pools:\n    - move: &amp;move\n      - time-distribution: { type: ExponentialTime, parameters: [1] }\n        type: Event\n        actions:\n          - { type: BrownianMove, parameters: [1] }\n  displacements:\n    - in: { type: Circle, parameters: [100, 700, 700, 300] }\n      programs: \n        - *move\n<\/code><\/pre>\n<p>The following image is a snapshot of the previous simulation. It is possible see how there aren't link\nbetween nodes across walls.<\/p>\n<p><img src=\"https://alchemistsimulator.github.io/latest/assets/media/usage/indoor_simulation.png\" alt=\"Simulation result\" /><\/p>\n"
              }]
            },
            "gui": {
              "ownKey": "gui",
              "ownPages": [{
                "reference": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "gui",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/gui"
                },
                "next": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "yaml",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/yaml"
                },
                "previous": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "run-stand-alone",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/run-stand-alone"
                },
                "description": "",
                "title": "Alchemist graphical interface",
                "content": "<p>The current, Swing-based graphical interface for Alchemist is being replaced by a new, JavaFX-based interface.\nThis page currently hosts minimal information on how to use such legacy GUI.<\/p>\n<h3 id=\"shortcuts\">Shortcuts<\/h3>\n<table>\n<thead>\n<tr><th>Key binding<\/th><th>Active<\/th><th>Effect<\/th><\/tr>\n<\/thead>\n<tbody>\n<tr><td><kbd>L<\/kbd><\/td><td>always<\/td><td>(En/Dis)ables the painting of links between nodes<\/td><\/tr>\n<tr><td><kbd>M<\/kbd><\/td><td>always<\/td><td>(En/Dis)ables the painting of a marker on the closest node<\/td><\/tr>\n<tr><td><kbd>Mouse pan<\/kbd><\/td><td>in normal mode<\/td><td>Moves around<\/td><\/tr>\n<tr><td><kbd>Mouse wheel<\/kbd><\/td><td>in normal mode<\/td><td>Zooms in/out<\/td><\/tr>\n<tr><td><kbd>Double click<\/kbd><\/td><td>in normal mode<\/td><td>Opens a frame with the closest node information<\/td><\/tr>\n<tr><td><kbd>Right click<\/kbd><\/td><td>in normal mode<\/td><td>Enters screen rotation mode<\/td><\/tr>\n<tr><td><kbd>P<\/kbd><\/td><td>always<\/td><td>Plays/pauses the simulation<\/td><\/tr>\n<tr><td><kbd>R<\/kbd><\/td><td>always<\/td><td>Enables the real-time mode<\/td><\/tr>\n<tr><td><kbd>Left arrow<\/kbd><\/td><td>always<\/td><td>Speeds the simulation down (more calls to the graphics)<\/td><\/tr>\n<tr><td><kbd>Right arrow<\/kbd><\/td><td>always<\/td><td>Speeds the simulation up (less calls to the graphics)<\/td><\/tr>\n<tr><td><kbd>S<\/kbd><\/td><td>always<\/td><td>Enters / exits the select mode (nodes can be selected with the mouse)<\/td><\/tr>\n<tr><td><kbd>O<\/kbd><\/td><td>in select mode<\/td><td>Selected nodes can be moved by drag and drop<\/td><\/tr>\n<tr><td><kbd>E<\/kbd><\/td><td>in select mode<\/td><td>Enters edit mode (to manually change node contents)<\/td><\/tr>\n<\/tbody>\n<\/table>\n"
              }]
            },
            "navigation-graphs": {
              "ownKey": "navigation-graphs",
              "ownPages": [{
                "reference": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "navigation-graphs",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/navigation-graphs"
                },
                "next": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "cognitive-pedestrians",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/cognitive-pedestrians"
                },
                "previous": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "indoor",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/indoor"
                },
                "description": "",
                "title": "Generating navigation graphs",
                "content": "<p>A navigation graph of an environment is a graph whose nodes are convex shapes representing portions of the environment which are traversable by agents (namely, walkable areas), and edges represent connections between them. The image below shows a bidimensional environment with obstacles on the left and the associated navigation graph on the right (nodes are painted blue whereas edges are represented as line segments connecting the centroid of the node to the associated crossing, which is painted green).<\/p>\n<p><img src=\"../../assets/media/usage/navigation-graph.jpeg\" alt=\"alt text\" /><\/p>\n<p>Navigation graphs are mainly used for navigation purposes (e.g. in pathfinding algorithms): the advantage of decomposing the environment into convex regions lies in the fact that agents can freely walk around within a convex region, as it is guaranteed that no obstacle will be found (remember that a shape is convex when no line segment between any two points on its boundary ever goes outside the shape).<\/p>\n<p>Alchemist is capable of generating navigation graphs of bidimensional environments featuring euclidean geometry and double precision coordinates. Before diving into the topic, please be aware that the algorithm implemented in Alchemist for the generation of navigation graphs:<\/p>\n<ul>\n<li>Does not guarantee the coverage of 100% of the walkable area (as the image above shows).<\/li>\n<li>Is only capable to detect axis-aligned crossings.<\/li>\n<li>Is only capable to deal with convex polygonal obstacles. Concave ones can be decomposed into convex meshes, whereas for curves bounding boxes can be used, eventually arbitrarily-oriented minimum bounding boxes.<\/li>\n<\/ul>\n<h3 id=\"navigator\">NaviGator<\/h3>\n<p>The algorithm implemented in Alchemist is called NaviGator (Navigation Graphs generAtor), here's a brief description of how it operates: firstly, a certain number of seeds is planted in the environment. Each seed is a square-shaped region of unitary side that will grow maintaining a convex shape. Secondly, planted seeds are extended until possible (i.e. until they are in contact with an obstacle or another seed on each side). Finally, crossings are found between the grown seeds. NaviGator is derived from the <a href=\"https://www.researchgate.net/profile/G_Youngblood/publication/220978343_Automatically-generated_Convex_Region_Decomposition_for_Real-time_Spatial_Agent_Navigation_in_Virtual_Worlds/links/54510d020cf24884d886f643/Automatically-generated-Convex-Region-Decomposition-for-Real-time-Spatial-Agent-Navigation-in-Virtual-Worlds.pdf\">DEACCON algorithm<\/a> for the generation of navigation meshes.<\/p>\n<h3 id=\"generating-navigation-graphs-from-images\">Generating navigation graphs from images<\/h3>\n<p>If your environment is codified as an image (such as the planimetry showed above), generating a navigation graph is straight-forward. All you have to do is mark the areas of the environment where to plant initial seeds in blue (RGB #0000FF). In the image below you can see the generation of the navigation graph showed on the top of the page. The blue regions in the original image indicate where to plant initial seeds. These are then grown and crossings are found between them.<\/p>\n<p><img src=\"../../assets/media/usage/navigation-graph-generation.jpeg\" alt=\"alt text\" /><\/p>\n<p>Once you have your image ready for the generation of the navigation graph, you can exploit the <code>ImageEnvironmentWithGraph<\/code> class to produce it for you. This will read your image, extract the positions you marked blue and pass them to the NaviGator algorithm. In other words, that class is capable of reading the visual format we defined in the previous paragraph. Assuming you already know <a href=\"yaml.md\">how to write simulations in YAML<\/a>, instancing an <code>ImageEnvironmentWithGraph<\/code> in a simulation file is straight-forward:<\/p>\n<pre><code class=\"language-yaml\">environment:\n  type: ImageEnvironmentWithGraph\n  parameters: [path/to/image.png, 1.0]\n<\/code><\/pre>\n<p>The second parameter is the zoom level. As you may see in the API documentation, the <code>ImageEnvironmentWithGraph<\/code> class exposes a method that will allow you to obtain the generated graph.<\/p>\n<h4 id=\"destinations\">Destinations<\/h4>\n<p>In Alchemist, navigation graphs can store a set of positions of interest that may be used during navigation (e.g. destinations in an evacuation scenario). You can specify one or more positions of interest providing the coordinates in the constructor of <code>ImageEnvironmentWithGraph<\/code>:<\/p>\n<pre><code class=\"language-yaml\">environment:\n  type: ImageEnvironmentWithGraph\n  parameters: [path/to/image.png, 1.0, 50, 50]\n<\/code><\/pre>\n<p>The code above will place a position of interest in (50, 50).<\/p>\n<h4 id=\"drawing-navigation-graphs\">Drawing navigation graphs<\/h4>\n<p>A simple effect capable to draw the navigation graph of an <code>ImageEnvironmentWithGraph<\/code> in the gui is available as well. Its name is <code>DrawNavigationGraph<\/code>, you can just select it from the available effects in the gui to have your graph drawn.<\/p>\n<h3 id=\"using-navigator\">Using NaviGator<\/h3>\n<p>If your environment is not codified as an image, you can still generate a navigation graph by directly using the NaviGator algorithm. This is contained in the <code>NaviGator.kt<\/code> file whose only public function is <code>generateNavigationGraph<\/code>. Let us look at its signature:<\/p>\n<pre><code class=\"language-kotlin\">fun generateNavigationGraph(\n    origin: Euclidean2DPosition = Euclidean2DPosition(0.0, 0.0),\n    width: Double,\n    height: Double,\n    obstacles: Collection&lt;Shape&gt;,\n    rooms: Collection&lt;Euclidean2DPosition&gt;,\n    unity: Double = 1.0,\n    destinations: List&lt;Euclidean2DPosition&gt;\n): Euclidean2DNavigationGraph\n<\/code><\/pre>\n<p>Here's a brief description of each parameter:<\/p>\n<ul>\n<li><code>origin<\/code>: the origin of the environment, defaults to (0,0).<\/li>\n<li><code>width<\/code>: the width of the environment (only positive).<\/li>\n<li><code>height<\/code>: the height of the environment (only positive).<\/li>\n<li><code>obstacles<\/code>: the obstacles of the environment (only convex polygonal obstacles are supported).<\/li>\n<li><code>rooms<\/code>: a collection of positions where to plant initial seeds. In indoor environments, these positions are usually located inside rooms (and corridors), hence the name of the parameter.<\/li>\n<li><code>unity<\/code>: the quantity considered to be a unit in the environment (defaults to 1.0 because this algorithm works best with environments featuring integer coordinates). In the growing phase, each side of each seed will be advanced of a quantity equal to unity iteratively, hence the smaller this value is the slower the algorithm will be.<\/li>\n<li><code>destinations<\/code>: a collection of positions of interest that will be stored in the navigation graph and may be used during navigation (e.g. destinations in an evacuation scenario).<\/li>\n<\/ul>\n"
              }]
            },
            "export": {
              "ownKey": "export",
              "ownPages": [{
                "reference": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "export",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/export"
                },
                "next": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "batch",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/batch"
                },
                "previous": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "maps",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/maps"
                },
                "description": "",
                "title": "Exporting data",
                "content": "<h2 id=\"defining-exported-data\">Defining exported data<\/h2>\n<p>Data expected as output can be exported by telling Alchemist what to log, and by passing to the executable information\non where to export.<\/p>\n<p>The <code>export<\/code> section lists which simulation values are exported into the <code>folder<\/code> specified with the <code>-e path/to/folder<\/code>\nargument.<\/p>\n<h3 id=\"aggregating-data\">Aggregating data<\/h3>\n<p>Data aggregators are statistically univariate.\nValid aggregation functions must extend <a href=\"http://commons.apache.org/proper/commons-math/javadocs/api-3.4/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.html\">AbstractStorelessUnivariateStatistic<\/a>.<\/p>\n<p><strong>Examples<\/strong><\/p>\n<pre><code class=\"language-yaml\">export:\n  # Time step of the simulation\n  - time\n  # Number of nodes involved in the simulation\n  - number-of-nodes\n  # Molecule representing an aggregated value\n  - molecule: danger\n    aggregators: [sum]\n<\/code><\/pre>\n<h3 id=\"filtering-unwanted-values\">Filtering unwanted values<\/h3>\n<p>TODO<\/p>\n"
              }]
            },
            "protelis": {
              "ownKey": "protelis",
              "ownPages": [{
                "reference": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "protelis",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/protelis"
                },
                "next": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "sapere",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/sapere"
                },
                "previous": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "biochemistry",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/biochemistry"
                },
                "description": "",
                "title": "Alchemist Protelis incarnation",
                "content": "<p>[Protelis][Protelis], from the Latin word figuratively meaning &quot;regarding a team&quot;, is a language targeting the aggregate of devices rather than the single one.\nIt has been developed on the solid foundation of [Field Calculus][Field Calculus], a theoretical model of aggregate programming, and it is written and interoperable with Java.<\/p>\n<h3 id=\"learning-protelis\">Learning Protelis<\/h3>\n<p>The language and all the machinery of Protelis are out of the scope of this tutorial. However, we warmly recommend to read [this paper][protelis paper] first, and then to deepen your knowledge of Protelis by reading the resources available in [the official Protelis website][Protelis].<\/p>\n"
              }]
            },
            "sapere": {
              "ownKey": "sapere",
              "ownPages": [{
                "reference": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "sapere",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/sapere"
                },
                "next": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "scafi",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/scafi"
                },
                "previous": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "protelis",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/protelis"
                },
                "description": "",
                "title": "Alchemist SAPERE incarnation",
                "content": "<p>The SAPERE incarnation for Alchemist was the first stable incarnation produced for the simulator.\nIt was developed in the context of the <a href=\"http://archive.ph/umlcC\">SAPERE EU project<\/a>.<\/p>\n<p>At the core of <a href=\"https://doi.org/10.1016/j.pmcj.2014.12.002\">SAPERE<\/a> was the concept of <em>Live Semantic Annotation<\/em> (LSA),\nnamely a description of a resource (sensor, service, actuator...) always mapping the current resource status\n(somewhat a prelude to the currently famous <a href=\"http://archive.ph/YR1v9\">digital twin<\/a> concept).<\/p>\n<p>These annotations evolve following so-called <em>Eco-Laws<\/em>,\nmimicking the complex behaviours of natural ecosystems.<\/p>\n<p>The SAPERE approach fostered subsequent approaches, such as <a href=\"https://doi.org/10.1109/MC.2015.261\">aggregate computing<\/a>.<\/p>\n<h2 id=\"live-semantic-annotations\">Live Semantic Annotations<\/h2>\n<p>An LSA as modeled in Alchemist is a tuple of values.\nThese tuples can be injected in nodes as data items.\nFrom the point of view of <a href=\"https://alchemistsimulator.github.io/latest/wiki/simulator/metamodel\">the Alchemist metamodel<\/a>,\nthe concept of <a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/Molecule\">Molecule<\/a> is mapped to <a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/molecules/LsaMolecule\">LSA<\/a>.\nAs a consequence, LSAs can be inserted in nodes.\nFor instance, the following code creates an irregular grid of devices,\nof which those located around the center of such grid contain the tuple <code>{ token }<\/code>:<\/p>\n<script src=\"https://gist-it.appspot.com/github/AlchemistSimulator/SAPERE-incarnation-tutorial/blob/master/src/main/yaml/05-content.yml\"><\/script>\n<p>The relevant part here is <code>molecule: token<\/code>.\nIf we wanted to inject the tuple <code>{ foo, 1, bar, 2 }<\/code>, we could have written <code>molecule: foo, 1, bar, 2<\/code>.<\/p>\n<h3 id=\"ground-lsa-syntax\">Ground LSA syntax<\/h3>\n<pre><code>GroundLSA ::= GroundArgument (',' GroundArgument)*\nGroundArgument ::= Number | Atom | Set\nAtom ::= [a-z]([a-z]|[A-Z]|[0-9])*\nNumber ::= [0-9]+('.'[0-9]*)\nSet ::= '[' ((Atom | Number)';')* ']'\n<\/code><\/pre>\n<p>LSAs, similarly to Prolog terms, support <a href=\"http://archive.ph/oLSpq\">unification and substitution<\/a>:\nit is possible to create tuple templates,\nmatch them against sets of ground tuples,\nand obtain a matching ground tuple as result.<\/p>\n<p>A tuple argument is considered a variable if it begins with an uppercase letter.\nAdditionally, it is possible to discard some matches by expressing constraints on values.<\/p>\n<h3 id=\"lsa-syntax\">LSA Syntax<\/h3>\n<pre><code>LSA ::= '{' GroundLSA | TemplateLSA '}'\nTemplateLSA ::= Argument (',' Argument)*\nArgument ::= GroundArgument | Variable | Constraint\nVariable ::= [A-Z]([a-z]|[A-Z]|[0-9])*\nConstraint ::= 'def:' Variable Operation\nOperation ::= ('&gt;'|'&gt;'|'='|'!=') Number | 'add ' Variable | 'del ' Variable\n<\/code><\/pre>\n<h2 id=\"eco-laws\">Eco-Laws<\/h2>\n<p>Tuple matching is used to define <em><a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/reactions/SAPEREReaction\">Eco-Laws<\/a><\/em>.\nAn Eco-Law is a rewriting rule very similar in concept to chemical reactions:\nelements on the left-hand side of the reaction are removed from the container,\nelements on the right hand side are inserted instead.<\/p>\n<p>The following program matches LSAs with two arguments, the former must be <code>foo<\/code>,\nthe latter a number greater than <code>30<\/code>, and produces in a new tuple having as first element <code>bar<\/code> and as second\nthe opposite of the matched number:<\/p>\n<p><code>{ foo, def: N &gt; 30 } --&gt; { bar, -N }<\/code><\/p>\n<p>Nodes can be programmed with Eco-Laws as follows:<\/p>\n<script src=\"https://gist-it.appspot.com/github/AlchemistSimulator/SAPERE-incarnation-tutorial/blob/master/src/main/yaml/06-send.yml\"><\/script>\n<h3 id=\"sharing\">Sharing<\/h3>\n<p>Eco-Laws can be programmed to send LSAs to neighbors, as well as to look into neighboring nodes for getting LSAs.\nIn order to do so, the LSA template in the Eco-Law must be preceded by a neighbor operator, either <code>+<\/code> or <code>*<\/code>.<\/p>\n<p><code>+<\/code> means <em>in a neighbor<\/em>:\nif used on the left hand side,\nit considers the condition satisfied if at least one neighbor has at least one LSA matching the provided template;\nif used on the right hand side,\nsends the LSA to one random neighbor.<\/p>\n<p><code>*<\/code> means <em>in all neighbors<\/em>:\nif used on the left hand side,\nit considers the condition satisfied if all neighbors have at least one LSA matching the provided template;\nif used on the right hand side,\nsends a copy of the LSA to all neighbors.<\/p>\n<p>The following code exemplifies a diffusion program:\nwhen <code>{ token }<\/code> is present locally, it is copied into neighboring nodes once per second;\nand as soon as two copies of <code>{ token }<\/code> are present, one gets removed.<\/p>\n<script src=\"https://gist-it.appspot.com/github/AlchemistSimulator/SAPERE-incarnation-tutorial/blob/master/src/main/yaml/09-diffuse.yml\"><\/script>\n<h3 id=\"eco-laws-syntax\">Eco-Laws syntax<\/h3>\n<h3 id=\"rates\">Rates<\/h3>\n<p>The time distribution with which reactions should get scheduled can be controlled by thinkering with the yaml specification\nas per every reaction in Alchemist.\nIf no <a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/TimeDistribution\">time distribution<\/a> is specified,\nthe Eco-Law is assumed to run &quot;as soon as possible&quot; (ASAP).<\/p>\n<p>This may lead to unwanted behaviour.\nFor instance, programming a single node with:\n<code>--&gt; { foo }<\/code>\nwill cause the simulation to schedule a reaction producing <code>{ foo }<\/code> at time zero,\nand at each execution the time will remain zero:\nthe simulator will be producing copies over copies of the tuple,\nnever advancing in time (Alchemist is a discrete event simulator),\nand possibly going on until the JVM memory limit is reached.<\/p>\n<p>If a number is specified as time distribution, using the <code>time-distribution<\/code> key,\nthen it will be interpreted as the <a href=\"https://en.wikipedia.org/wiki/Markov_chain\">Markovian rate<\/a>\nof an <a href=\"https://en.wikipedia.org/wiki/Exponential_distribution\">exponentially distributed time<\/a>.<\/p>\n<p><a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/timedistributions\">Other distributions<\/a> can be used leveraging the <code>type<\/code>/<code>parameters<\/code> syntax.<\/p>\n<p>In the following example, two Eco-Laws are configured, and one of them is bound to an\n<a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/timedistributions/ExponentialTime\">exponentially distributed time<\/a> with rate 1, namely, such reaction,\nwhen executable (the left hand LSAs have local matches), will execute at an average of once per second\n(with a variance of 1 s²).<\/p>\n<script src=\"https://gist-it.appspot.com/github/AlchemistSimulator/SAPERE-incarnation-tutorial/blob/master/src/main/yaml/06-send.yml\"><\/script>\n<h2 id=\"tutorial-and-exercises\">Tutorial and exercises<\/h2>\n<p>To better grasp details of the incarnation, we recommend looking at the examples available on\n<a href=\"https://github.com/AlchemistSimulator/SAPERE-incarnation-tutorial\">the Alchemist SAPERE Incarnation tutorial on GitHub<\/a>.<\/p>\n<p>Besides examples with growing complexity,\nthere are a number of proposed exercises that should help you getting acquainted with the SAPERE way of writing self-organizing behaviors.<\/p>\n"
              }]
            },
            "yaml": {
              "ownKey": "yaml",
              "ownPages": [{
                "reference": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "yaml",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/yaml"
                },
                "next": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "biochemistry",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/biochemistry"
                },
                "previous": {
                  "path": "wiki/usage",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "gui",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/wiki/usage/gui"
                },
                "description": "",
                "title": "Writing Alchemist simulations",
                "content": "<p>As a first step, we recommend learning the YAML basics.\nThe language is so simple and human readable that there is probably no better way to learn it than to read it directly.\nMy suggestion is to use the tutorial &quot;<a href=\"https://learnxinyminutes.com/docs/yaml/\">Learn X in Y minutes where X = YAML<\/a>&quot;,\nit should provide a good YAML guide (surely sufficient to follow the tutorial).<\/p>\n<p>Alchemist expects a YAML map as input. In the following section, we'll discuss which keys it expects.\nOf course, users are free to use all the YAML features (e.g. anchors) to organize their code and reduce duplication.<\/p>\n<h2 id=\"choosing-an-incarnation\">Choosing an incarnation<\/h2>\n<p>The <code>incarnation<\/code> key is mandatory.\nActually, it's the only mandatory key.\nThe YAML parser expects a string value.\nSuch string will be used to get the most similarly named incarnation, namely the subclass of Incarnation whose simple\nname is closest to the string.<\/p>\n<p><strong>Examples<\/strong><\/p>\n<pre><code class=\"language-yaml\">incarnation: sapere\n<\/code><\/pre>\n<pre><code class=\"language-yaml\">incarnation: protelis\n<\/code><\/pre>\n<pre><code class=\"language-yaml\">incarnation: biochemistry\n<\/code><\/pre>\n<p><em>Note:<\/em> this is also the most minimal valid alchemist specification<\/p>\n<h2 id=\"loading-arbitrary-java-classes-with-the-typeparameters-syntax\">Loading arbitrary Java classes with the <code>type<\/code>/<code>parameters<\/code> syntax<\/h2>\n<p>One important aspect of the Alchemist YAML is the ability to let the user control which actual Java classes should be\nloaded inside a simulation, and which constructor should be used to do so.\nAlmost every entity of an Alchemist simulation can be instanced using arbitrary Java classes that implement the required\ninterfaces.\nWhen the alchemist YAML parser encounters a YAML Map providing the keys <code>type<\/code> and <code>parameters<\/code>, it tries to resolve the\nvalue of the value associated to <code>type<\/code> to a class name, then tries to create the object by calling the constructor with\nparameters most suited to the value of <code>parameters<\/code>.<\/p>\n<p><strong>Class name resolution<\/strong><\/p>\n<p>The value associated with <code>type<\/code> must be a string representing a valid Java identifier.\nIf the value contains one or more <code>.<\/code> characters, then it will be interpreted as a fully qualified name.\nIf no such character is included, then <em>the default package for the desired alchemist entity will be prefixed<\/em>.\nAlchemist won't ever attempt to load a class situated in the default package (so don't put your classes there, it's a\nbad practice anyway).<\/p>\n<p><strong>Object instancing<\/strong><\/p>\n<p>If the class gets loaded correctly (meaning if a class is present in the classpath with the fully qualified name,\nwhether it was passed or guessed by Alchemist), then its constructors get sorted based on the number and type of\nparameters.\nThe system tries to build an object with all the available constructors until one of them provides an instanced object,\nin an order that considers both the current context (namely, the entities that have already been instanced) and the\nvalue of <code>parameters<\/code>.<\/p>\n<p>For instance, imagine that you are trying to build an instance of a <a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/Reaction\">Reaction<\/a>, whose only constructor requires an\n<a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/Environment\">Environment<\/a>, a <a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/Node\">Node<\/a>, an <code>int<\/code> and a <code>String<\/code>.\nIn this case, an Environment and a Node must have already been created (or the YAML loader won't be at this point).\nAs a consequence, the first two parameters are automatically inferred by the current context and passed to the constructor.\nThe other two parameters can not be inferred this way; instead, the value associated to <code>parameters<\/code> is used to extract the proper values (if possible).\nIn this case, this would have been a valid <code>parameters<\/code> entry:<\/p>\n<pre><code class=\"language-yaml\">type: my.package.MyCustomReaction\nparameters: [4, foo]\n<\/code><\/pre>\n<p>As you can easily infer, the value of <code>parameters<\/code> must be a YAML list.<\/p>\n<p>Don't despair if the class loading system is still unclear: it is used pervasively and it will become clearer with the examples in the next sections.<\/p>\n<h2 id=\"setting-up-the-environment\">Setting up the environment<\/h2>\n<p>The <code>environment<\/code> key is used to load the <a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/Environment\">Environment<\/a> implementation.\nIt is optional and it defaults to a <a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/environments/Continuous2DEnvironment\">continuous bidimensional space<\/a>.\nIf no fully qualified environment name is provided for class loading, Alchemist uses the package\n<a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/environments\">it.unibo.alchemist.model.implementations.environments<\/a> to search for the class.<\/p>\n<h3 id=\"examples\">Examples<\/h3>\n<p>The following simulations are equivalent, and load the default environment (which is incarnation independent, here\n<code>protelis<\/code> is picked, but it works for any other incarnation as well):<\/p>\n<pre><code class=\"language-yaml\">incarnation: protelis\n<\/code><\/pre>\n<pre><code class=\"language-yaml\">incarnation: protelis\nenvironment:\n  type: Continuous2DEnvironment\n<\/code><\/pre>\n<pre><code class=\"language-yaml\">incarnation: protelis\nenvironment:\n  type: it.unibo.alchemist.model.implementations.environments.Continuous2DEnvironment\n<\/code><\/pre>\n<pre><code class=\"language-yaml\">incarnation: protelis\nenvironment:\n  type: Continuous2DEnvironment\n  parameters: []\n<\/code><\/pre>\n<p><a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/environments/OSMEnvironment\">OSMEnvironment<\/a> allows for running simulations over real world maps. The following simulation\nloads data from an Openstreetmap file (OSM, XML and PBF formats are supported) located in the classpath in the folder\n<code>maps<\/code>:<\/p>\n<pre><code class=\"language-yaml\">incarnation: protelis\nenvironment:\n  type: OSMEnvironment\n  parameters: [maps/foo.pbf]\n<\/code><\/pre>\n<p><a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/environments/ImageEnvironment\">ImageEnvironment<\/a> loads data from a black and white raster image file (in this example, located in the\nclasspath in the folder <code>images<\/code>), interpreting the black pixels as obstacles (areas that cannot be accessed by nodes):<\/p>\n<pre><code class=\"language-yaml\">incarnation: protelis\nenvironment:\n  type: ImageEnvironment\n  parameters: [images/foo.png]\n<\/code><\/pre>\n<p>Finally, if you write your own custom class named <code>my.package.FooEnv<\/code> implementing <a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/Environment\">Environment<\/a>, whose\nconstructor requires a String and a double, you can use it in the simulator by writing, for instance:<\/p>\n<pre><code class=\"language-yaml\">incarnation: protelis\nenvironment:\n  type: my.package.FooEnv\n  parameters: [bar, 2.2]\n<\/code><\/pre>\n<p>The environments shipped with the distribution can be found in the package\n<a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/environments\">it.unibo.alchemist.model.implementations.environments<\/a>.<\/p>\n<h2 id=\"declaring-variables\">Declaring variables<\/h2>\n<p>The <code>variables<\/code> section lists variable simulation values.\nA variable defines some kind of value that can be referenced in the simulation file.<\/p>\n<p>There are two kinds of variables: free and dependent variables.\nThe difference is that variables of the latter kind can always be computed given the values of all the other variables.<\/p>\n<h3 id=\"free-variables\">Free variables<\/h3>\n<p>Free variables define a set of values and a default.\nTheir main scope is enabling Alchemist to run a set of simulations with different parameters (values of variables)\nwithout the need to duplicate the simulation code.\nWhen used in this mode (called &quot;batch mode&quot;),\nAlchemist by default produces the cartesian product of all the variables values' selected for the batch,\nand runs a simulation for each combination.\nIf the simulation is not executed as batch, then the default value is used.<\/p>\n<h4 id=\"linear-variables\">Linear variables<\/h4>\n<h4 id=\"geometric-variables\">Geometric variables<\/h4>\n<h4 id=\"arbitrary-valued-variables\">Arbitrary-valued variables<\/h4>\n<pre><code class=\"language-yaml\">variables:\n  myvar: &amp;myvar\n    type: ArbitraryVariable\n    parameters: [&quot;defaultValue&quot;, [&quot;value1&quot;,&quot;value2&quot;,&quot;value3&quot;]]\n<\/code><\/pre>\n<h3 id=\"dependent-variables\">Dependent variables<\/h3>\n<p>Some variables are combination of free parameters.\nLet's suppose that we want to deploy on a circle, but for some reason (e.g. because it is required by the constructor of some action) we need to compute and have available radius and perimeter.\nWe don't need to control both of them: the perimeter can be computed.\nAlchemist provides support for performing computation over variables.\nLet's first define our radius.\nWe want it to be a free variable, ranging geometrically from 0.1 to 10 in nine steps, and defaulting to 1.<\/p>\n<pre><code class=\"language-yaml\">variables:\n  radius: &amp;radius\n    type: GeometricVariable\n    parameters: [1, 0.1, 10, 9]\n<\/code><\/pre>\n<p>Now we want to compute the diameter.\nWe can do so by using the <code>formula<\/code> syntax:<\/p>\n<pre><code class=\"language-yaml\">variables:\n  radius: &amp;radius\n    type: GeometricVariable\n    parameters: [1, 0.1, 10, 9]\n  diameter: &amp;diam\n    formula: Math.PI * 2 * radius\n<\/code><\/pre>\n<p>How does it work?\nAlchemist feeds the formula String to an interpreter and takes the result of the interpretation.\nBy default, <a href=\"https://groovy-lang.org/\">Groovy<\/a> is used as language to interpret the formula, but other languages can be used.<\/p>\n<p>Variables can be defined in any order.\nAlchemist figures out the dependencies automatically, as far as there are no cyclic dependencies (e.g. variable <code>a<\/code> requires <code>b<\/code>, and <code>b<\/code> requires <code>a<\/code>).\nPlease note that the simulator variable dependency resolution system is not designed to solve mathematical systems,\nso even though the problem has a well formed mathematical solution the actual variable resolution may fail;\ne.g. if <code>a<\/code> is defined as <code>2 * b + 1<\/code>, and <code>b<\/code> is defined as <code>4 - a<\/code>, the system <strong>won't<\/strong> bind <code>a<\/code> to <code>3<\/code> and <code>b<\/code> to <code>1<\/code>,\nbut will simply fail complaining about circular dependencies.<\/p>\n<h3 id=\"using-different-languages\">Using different languages<\/h3>\n<p>In order to use a language different than Groovy, the user may specify it explicitly by using the <code>language<\/code> keyword.\nFor example, Scala can be used:<\/p>\n<pre><code class=\"language-yaml\">variables:\n  radius: &amp;radius\n    type: GeometricVariable\n    parameters: [1, 0.1, 10, 9]\n  diameter: &amp;diam\n    formula: Math.PI * 2 * radius\n    language: scala\n<\/code><\/pre>\n<p>Or Kotlin:<\/p>\n<pre><code class=\"language-yaml\">variables:\n  radius: &amp;radius\n    type: GeometricVariable\n    parameters: [1, 0.1, 10, 9]\n  diameter: &amp;diam\n    formula: listOf(Math.PI, 2.0, 0.3).fold(1.0) { a, b -&gt; a * b  }\n    language: kotlin\n<\/code><\/pre>\n<p>The system is <a href=\"http://archive.fo/PGdk8\">JSR-233<\/a>-compatible, as such, every language with a valid JSR-233 implementation could be used.\nThe only requirement for the language to be available is the availability in the runtime classpath of a JSR-233 compatible version of the desired language.\nIf Alchemist is being used (as recommended) in conjunction with Gradle,\nand you want to embed your favorite JSR-233 compatible scripting language, you should have a dependency declaration similar to:<\/p>\n<pre><code class=\"language-kotlin\">dependencies {\n    ...\n    runtimeOnly(&quot;my.favorite.scripting.language:supporting-jsr233:0.1.0&quot;)\n    ...\n}\n<\/code><\/pre>\n<p>For instance, Alchemist supports Kotlin and Groovy natively by simply providing in its <code>build.gradle.kts<\/code> something similar to:<\/p>\n<pre><code class=\"language-kotlin\">dependencies {\n    ...\n    runtimeOnly(&quot;org.codehaus.groovy:groovy-jsr223:2.5.7&quot;)\n    runtimeOnly(&quot;org.jetbrains.kotlin:kotlin-scripting-jsr223-embeddable:1.3.40&quot;)\n    runtimeOnly(&quot;org.jetbrains.kotlin:kotlin-script-runtime:1.3.40&quot;)\n    runtimeOnly(&quot;org.jetbrains.kotlin:kotlin-script-util:1.3.40&quot;)}\n    ...\n<\/code><\/pre>\n<p>Alchemist provides a number of ready-to use interpreters. Besides Groovy (used by default) it includes:<\/p>\n<ul>\n<li><a href=\"https://www.scala-lang.org/\">Scala<\/a><\/li>\n<li><a href=\"https://kotlinlang.org/\">Kotlin<\/a><\/li>\n<\/ul>\n<p>Moreover, several implementations of the Java Virtual Machine feature internal interpreters for\n<a href=\"https://www.ecma-international.org/publications/standards/Ecma-262.htm\">ECMAScript<\/a>/\n<a href=\"https://en.wikipedia.org/wiki/JavaScript\">Javascript<\/a>.\nIn case they are provided, such engines can be used without any additional effort.\nJavascript used to be the default for Alchemist, but it has been replaced by Groovy since\n<a href=\"https://openjdk.java.net/jeps/335\">Nashorn, the interpreter embedded in OpenJDK, is deprecated<\/a>.<\/p>\n<h4 id=\"multiline-programs\">Multiline programs<\/h4>\n<p>Sometimes data manipulation can get tricky and trivial scripting may no longer be enough.\nIn such cases, and especially with modern languages that allow for a reduced usage of cerimonial semicolons (such as Kotlin and Scala), it can be useful to write multiline programs.\nThis can be achieved in YAML by using the pipe <code>|<\/code> operator, as exemplified in the following snippet:<\/p>\n<pre><code class=\"language-yaml\">variables:\n  a:\n    formula: 22 + 1\n    language: kt\n  test:\n    formula: |\n      import com.google.common.reflect.TypeToken\n      import com.google.gson.Gson\n      Gson().fromJson&lt;Map&lt;String, List&lt;List&lt;List&lt;Double&gt;&gt;&gt;&gt;&gt;(\n          ClassLoader.getSystemResourceAsStream(&quot;explorable-area.json&quot;)?.reader(),\n          object: TypeToken&lt;Map&lt;String, List&lt;List&lt;List&lt;Double&gt;&gt;&gt;&gt;&gt;() {}.type\n      )\n      .get(&quot;coordinates&quot;)!!\n      .first()\n      .map { Pair(it.last(), it.first()) }\n    language: kotlin\n<\/code><\/pre>\n<p>If the string begins with a <code>|<\/code>, its contents preserve newlines, thus allowing for multiline scripts of arbitrary complexity.<\/p>\n<h3 id=\"using-variables\">Using variables<\/h3>\n<h2 id=\"controlling-the-reproducibility\">Controlling the reproducibility<\/h2>\n<p>Alchemist simulations can be reproduced by feeding them the same random number generator.\nThis assumption is true as far as the custom component in use:<\/p>\n<ul>\n<li>do not use any other random generator but the one provided by the simulation framework<\/li>\n<li>do not iterate over collections with no predicible iteration order (i.e., <code>Set<\/code> and <code>Map<\/code>) containing elements (or\nkeys) whose <code>hashCode()<\/code> has not been overridden to return the same value regardless of the specific JVM in use.<\/li>\n<li>do not run operations in parallel<\/li>\n<\/ul>\n<p>The <code>seeds<\/code> section may contain two optional values: <code>scenario<\/code> and <code>simulation<\/code>.\nThe former is the seed of the pseudo-random generator used during the creation of the simulation, e.g. for displacing\nnodes in random arrangements.\nThe latter is the seed of the pseudo-random generator used during the simulation, e.g. for computing time distributions\nor generating random positions.\nA typical example in which one may want to have different values, is to keep the same random displacement of devices in\nsome scenario but allow events to happen with different timings.<\/p>\n<p>A typical <code>seed<\/code> section may look like:<\/p>\n<pre><code class=\"language-yaml\">seeds:\n  scenario: 0\n  simulation: 1\n<\/code><\/pre>\n<p>Usually, in batches, you wan to run multiple runs per experiment, varying the simulation seed, in order to get more\nreliable data (and appropriate error bars).\nAs per any other value, variables can be feeded as random generator seeds.\nIn the following example, 100 simulations are generated with different seeds (both for environment configuration and\nsimulation execution)<\/p>\n<pre><code class=\"language-yaml\">variables:\n  random: &amp;random\n    min: 0\n    max: 9\n    step: 1\n    default: 0\nseeds:\n  # reference to the `random` variable\n  scenario: *random\n  simulation: *random\n<\/code><\/pre>\n<h2 id=\"defining-the-network\">Defining the network<\/h2>\n<p>The <code>network-model<\/code> key is used to load the implementation of <a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/LinkingRule\">LinkingRule<\/a> to be used in the simulation,\nwhich determines the neighborhood of every node.\nThe key is optional, but defaults to <a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/linkingrules/NoLinks\">NoLinks<\/a>, so if unspecified nodes in the environment don't get\nconnected.\nOmitting such key is equivalent to writing any of the following:<\/p>\n<pre><code class=\"language-yaml\">network-model:\n  type: NoLinks\n<\/code><\/pre>\n<pre><code class=\"language-yaml\">network-model:\n  type: it.unibo.alchemist.model.implementations.linkingrules.NoLinks\n  parameters: []\n<\/code><\/pre>\n<pre><code class=\"language-yaml\">network-model:\n  type: NoLinks\n  parameters: []\n<\/code><\/pre>\n<p>If no fully qualified linking rule name is provided for class loading, Alchemist uses the package\n<a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/linkingrules\">it.unibo.alchemist.model.implementations.linkingrules<\/a> to search for the class.<\/p>\n<h3 id=\"linking-nodes-based-on-distance\">Linking nodes based on distance<\/h3>\n<p>One of the most common ways of linking nodes is to connect those which are close enough to each other. To do so, you can\nuse the class <a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/linkingrules/ConnectWithinDistance\">ConnectWithinDistance<\/a>, passing a parameter representing the maximum connection distance.\nNote that such distance depends on the environment: while the definition of distance is straightforward for euclidean\nspaces, it's not so for <a href=\"https://en.wikipedia.org/wiki/Riemannian_geometry\">Riemannian manifolds<\/a>, which is a fancy\nname to define geometries such as the one typical of a urban map (you can roughly interpret it as a euclidean space\n&quot;with holes&quot;).\nFor instance, in case of environments using <a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/GeoPosition\">GeoPosition<\/a>, the distance is computed in meters, so the\ndistance between <code>[44.133254, 12.237770]<\/code> and <code>[44.146680, 12.258627]<\/code> is about <code>2240<\/code> (meters).<\/p>\n<pre><code class=\"language-yaml\">network-model:\n  type: ConnectWithinDistance\n  # Link together all the nodes closer than 100 according to the distance function\n  parameters: [100]\n<\/code><\/pre>\n<h2 id=\"displacing-nodes\">Displacing nodes<\/h2>\n<p>The <code>displacements<\/code> section lists the node locations at the beginning of the simulation.\nEach displacement type extends the interface <a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/displacements/Displacement\">Displacement<\/a>. If no fully qualified displacement name is\nprovided for class loading,\nAlchemist uses the package <a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/displacements\">it.unibo.alchemist.loader.displacements<\/a> to search for the class.\nThe YAML key associated to displacements is <code>in<\/code>.<\/p>\n<h3 id=\"displacing-on-specific-positions\">Displacing on specific positions<\/h3>\n<p>The following example places a single node in the (0, 0) <a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/displacements/Point\">Point<\/a>.<\/p>\n<pre><code class=\"language-yaml\">displacements:\n  # &quot;in&quot; entries, where each entry defines a group of nodes\n  - in:\n      type: Point\n      # Using a constructor taking (x,y) coordinates\n      parameters: [0, 0]\n<\/code><\/pre>\n<h3 id=\"displacing-multiple-nodes-on-specific-positions\">Displacing multiple nodes on specific positions<\/h3>\n<pre><code class=\"language-yaml\">displacements:\n  - in:\n      type: SpecificPositions\n      parameters: [[0,1],[2,2],[3,4]]\n<\/code><\/pre>\n<h3 id=\"displacing-multiple-nodes-at-once\">Displacing multiple nodes at once<\/h3>\n<p>This example places 10000 nodes randomly in a <a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/shapes/Circle\">Circle<\/a> with center in (0, 0) and radius 10.<\/p>\n<pre><code class=\"language-yaml\">displacements:\n  - in:\n      type: Circle\n      parameters: [10000, 0, 0, 10]\n<\/code><\/pre>\n<p>Here instead nodes are located in a <a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/displacements/Grid\">Grid<\/a> centered in (0, 0), with nodes distanced of 0.25 both\nhorizontally and vertically, and whose position is not exact but randomly perturbed (±0.1 distance units).<\/p>\n<pre><code class=\"language-yaml\">displacements:\n  - in:\n      type: Grid\n      parameters: [-5, -5, 5, 5, 0.25, 0.25, 0.1, 0.1]\n<\/code><\/pre>\n<h3 id=\"customizing-the-node-type\">Customizing the node type<\/h3>\n<p>In order to specify a particular node implementation you want to put inside the environment you can use the <code>nodes<\/code> key\nfollowed by the name of the class and the parameters required to build it.<\/p>\n<p>100 <code>MyCustomNodeImpl<\/code> nodes, whose constructor needs only the environment, placed in a circle with center in (0, 0) and\nradius 20.<\/p>\n<pre><code class=\"language-yaml\">displacements:\n  - in:\n      type: Circle\n      parameters: [100, 0, 0, 20]\n    nodes:\n      type: MyCustomNodeImpl\n      parameters: []\n<\/code><\/pre>\n<p>The empty parameters section can be omitted (as per custom class loading mechanism):<\/p>\n<pre><code class=\"language-yaml\">displacements:\n  - in:\n      type: Circle\n      parameters: [100, 0, 0, 20]\n    nodes:\n      type: MyCustomNodeImpl\n<\/code><\/pre>\n<h3 id=\"customizing-the-nodes-content\">Customizing the nodes content<\/h3>\n<p>It is possible to set the content of the nodes in a deployment.\nNode contents are defined in terms of molecules and their corresponding concentration.\nAs such, they depend on the specific incarnation in use.<\/p>\n<p>In the following example, we inject in all the nodes of a <a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/displacements/Grid\">Grid<\/a> deployment a molecule called <code>foo<\/code>  with\nconcentration <code>1<\/code>.\nAs stated before, it would only make sense if the incarnation supports integer concentrations and it's able to produce\na valid molecule from the <code>&quot;foo&quot;<\/code> String.<\/p>\n<pre><code class=\"language-yaml\">displacements:\n  - in:\n      type: Grid\n      parameters: [-5, -5, 5, 5, 0.25, 0.25, 0.1, 0.1]\n    contents:\n      - molecule: foo\n        concentration: 1\n<\/code><\/pre>\n<p>Multiple contents can be listed, e.g.,\nif we want to also have a molecule named <code>bar<\/code> with value <code>0<\/code> along with <code>foo<\/code>,\nwe can just add another entry to the list:<\/p>\n<pre><code class=\"language-yaml\">displacements:\n  - in:\n      type: Grid\n      parameters: [-5, -5, 5, 5, 0.25, 0.25, 0.1, 0.1]\n    contents:\n      - molecule: foo\n        concentration: 1\n      - molecule: bar\n        concentration: 0\n<\/code><\/pre>\n<p>Molecules can be injected selectively inside a given <a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/shapes/Shape\">Shape<\/a>.\nTo do so, you can a filter with the <code>in keyword<\/code>.\nIn the following example, only the nodes inside the <a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/shapes/Rectangle\">Rectangle<\/a> area contain\nthe <code>source<\/code> molecule.<\/p>\n<pre><code class=\"language-yaml\">displacements:\n  - in:\n      type: Grid\n      parameters: [-5, -5, 5, 5, 0.25, 0.25, 0.1, 0.1]\n    contents:\n      - in:\n          type: Rectangle\n          parameters: [-6, -6, 2, 2]\n        molecule: source\n        concentration: true\n<\/code><\/pre>\n<h2 id=\"writing-behaviors-reactions\">Writing behaviors (Reactions)<\/h2>\n<p>Nodes can be programmed using reactions.\nReaction are usually highly dependent on the specific incarnation.<\/p>\n<pre><code class=\"language-yaml\"># Variable representing the program to be executed\ngradient: &amp;gradient\n  - time-distribution: 1\n    # Make sure that the program folder is part of the project classpath\n    program: program:package:distanceTo\n  - program: send\ndisplacements:\n  - in:\n      type: Grid\n      parameters: [-5, -5, 5, 5, 0.25, 0.25, 0.1, 0.1]\n    programs:\n      # Reference to the &quot;gradient&quot; list of programs. This program is executed in all\n      # the grid nodes\n      - *gradient\n<\/code><\/pre>\n<h3 id=\"triggers\">Triggers<\/h3>\n<pre><code class=\"language-yaml\">pools:\n  - pool:\n      - time-distribution:\n          type: Trigger\n          parameters: [0] # the param is the time step\n      type: Event\n      actions:\n        - type: MyActionType\n          parameters: [...] #\n<\/code><\/pre>\n<h2 id=\"layers\">Layers<\/h2>\n<p>It is possible to define overlays (layers) of data that can be sensed everywhere in the environment.\nLayers can be used to model physical properties, such as pollution, light, temperature, and so on.\nConversely than readings from nodes' contents, layers have no dependency optimization.\nThis implies that reactions that read values from layers should have special care in defining their <code>context<\/code> appropriately<\/p>\n<p>In order to create layer, the programmer must define the type of the layer, a molecule that will be used as identifier,\nand possibly the parameters needed for intializing the type of layer you have chosen, as per the <a href=\"#loading-arbitrary-java-classes-with-the-typeparameters-syntax\"><code>type/parameter<\/code> syntax<\/a>.<\/p>\n<p>The following example exemplifies the syntax for initializing two <a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/layers/BidimensionalGaussianLayer\">BidimensionalGaussianLayer<\/a>:<\/p>\n<pre><code class=\"language-yaml\">layers:\n  - type: BidimensionalGaussianLayer\n    molecule: foo\n    parameters: [0.0, 0.0, 2.0, 5.0]\n  - type: BidimensionalGaussianLayer\n    molecule: bar\n    parameters: [0.0, 0.0, 5.0, 10.0]\n<\/code><\/pre>\n<h2 id=\"terminating-the-simulation-if-a-condition-is-met\">Terminating the simulation if a condition is met<\/h2>\n<p>Alchemist supports the possibility to write termination conditions for any simulation.\nTermination conditions are checked after every event, and, if met, cause the immediate termination of a simulation.\nTermination conditions are expected to be found in the <a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/terminators\">it.unibo.alchemist.model.implementations.terminators<\/a> package.<\/p>\n<p>To load them, use the <code>terminators<\/code> keyword.\nMultiple terminators are allowed, the first terminator matching causes the termination of the simulation (they are in and).<\/p>\n<p>Here is an example:<\/p>\n<pre><code class=\"language-yaml\">terminate:\n  # Defines a new terminator which every 100 simulation steps for the environment to remain equal for the 10 subsequent\n  # simulation steps. If no change is detected, then the simulation is intended as concluded.\n  - type: StableForSteps\n    parameters: [100, 10]\n<\/code><\/pre>\n<h3 id=\"terminating-the-simulation-after-some-time\">Terminating the simulation after some time<\/h3>\n<p>One of the simplest terminators availables allows for declaring a simulation completed when a certain simulated time is reached.\nIn the following example, it is used in conjunction with a number of variables, showing how it's possible to use such\nvariables to produce batches of simulations terminating at different times.<\/p>\n<pre><code class=\"language-yaml\">variables:\n  stabilizationTime:\n    type: ArbitraryVariable\n    parameters: [10, [0, 1, 10, 100, 1000]]\n  simulationEnd: &amp;simulationEnd\n    formula: 150 + stabilizationTime\nterminate:\n  - type: AfterTime\n    parameters: [*simulationEnd]\n<\/code><\/pre>\n<h3 id=\"terminating-the-simulation-if-the-environment-is-not-changing\">Terminating the simulation if the environment is not changing<\/h3>\n<p>A terminator is provided for terminating when a simulation is &quot;stable&quot; (nothing changes in terms of positions and nodes' content).\nThe class implementing it is <a href=\"https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/terminators/StableForSteps\">StableForSteps<\/a>.\nThe following code snippet exemplifies its usage:<\/p>\n<pre><code class=\"language-yaml\">terminate:\n  # Defines a new terminator which every 100 simulation steps for the environment to remain equal for the 10 subsequent\n  # simulation steps. If no change is detected, then the simulation is intended as concluded.\n  - type: StableForSteps\n    parameters: [100, 10]\n<\/code><\/pre>\n"
              }]
            }
          },
          "ownPages": [{
            "reference": {
              "path": "wiki",
              "baseUrl": "https://alchemistsimulator.github.io/latest",
              "fileName": "usage",
              "extension": "html",
              "usePrettyUrl": true,
              "link": "https://alchemistsimulator.github.io/latest/wiki/usage"
            },
            "next": {
              "path": "wiki/usage",
              "baseUrl": "https://alchemistsimulator.github.io/latest",
              "fileName": "installation",
              "extension": "html",
              "usePrettyUrl": true,
              "link": "https://alchemistsimulator.github.io/latest/wiki/usage/installation"
            },
            "previous": {
              "path": "wiki/simulator",
              "baseUrl": "https://alchemistsimulator.github.io/latest",
              "fileName": "metamodel",
              "extension": "html",
              "usePrettyUrl": true,
              "link": "https://alchemistsimulator.github.io/latest/wiki/simulator/metamodel"
            },
            "description": "",
            "title": "Using Alchemist",
            "content": "<p>Using Alchemist<\/p>\n"
          }]
        }
      },
      "ownPages": [{
        "reference": {
          "path": "",
          "baseUrl": "https://alchemistsimulator.github.io/latest",
          "fileName": "wiki",
          "extension": "html",
          "usePrettyUrl": true,
          "link": "https://alchemistsimulator.github.io/latest/wiki"
        },
        "description": "",
        "title": "Wiki",
        "content": "<html>\n <head><\/head>\n <body>\n  <h1 id=\"alchemist-simulator-user-guide\">Alchemist simulator user guide<\/h1> \n  <ul> \n   <li><a href=\"https://alchemistsimulator.github.io/latest/wiki/simulator\">Understanding Alchemist<\/a> \n    <ul> \n     <li><a href=\"https://alchemistsimulator.github.io/latest/wiki/simulator/metamodel\">The metamodel<\/a><\/li> \n    <\/ul> <\/li> \n   <li><a href=\"https://alchemistsimulator.github.io/latest/wiki/usage\">Using Alchemist<\/a> \n    <ul> \n     <li><a href=\"https://alchemistsimulator.github.io/latest/wiki/usage/installation\">Requirements and installation<\/a><\/li> \n     <li><a href=\"https://alchemistsimulator.github.io/latest/wiki/usage/quickstart\">Quick start<\/a><\/li> \n     <li><a href=\"https://alchemistsimulator.github.io/latest/wiki/usage/run-gradle\">Running Alchemist via Gradle<\/a><\/li> \n     <li><a href=\"https://alchemistsimulator.github.io/latest/wiki/usage/run-stand-alone\">Running Alchemist stand-alone<\/a><\/li> \n     <li><a href=\"https://alchemistsimulator.github.io/latest/wiki/usage/gui\">Graphical interface<\/a><\/li> \n     <li><a href=\"https://alchemistsimulator.github.io/latest/wiki/usage/yaml\">How to write simulations<\/a><\/li> \n     <li><a href=\"https://alchemistsimulator.github.io/latest/wiki/usage/biochemistry\">Biology and Biochemistry<\/a><\/li> \n     <li><a href=\"https://alchemistsimulator.github.io/latest/wiki/usage/protelis\">Protelis<\/a><\/li> \n     <li><a href=\"https://alchemistsimulator.github.io/latest/wiki/usage/sapere\">SAPERE<\/a><\/li> \n     <li><a href=\"https://alchemistsimulator.github.io/latest/wiki/usage/scafi\">Scafi<\/a><\/li> \n     <li><a href=\"https://alchemistsimulator.github.io/latest/wiki/usage/indoor\">Indoor environments<\/a><\/li> \n     <li><a href=\"https://alchemistsimulator.github.io/latest/wiki/usage/navigation-graphs\">Generation of navigation meshes<\/a><\/li> \n     <li><a href=\"https://alchemistsimulator.github.io/latest/wiki/usage/cognitive-pedestrians\">Cognitive Pedestrians<\/a><\/li> \n     <li><a href=\"https://alchemistsimulator.github.io/latest/wiki/usage/smartcam\">Smart Cameras<\/a><\/li> \n     <li><a href=\"https://alchemistsimulator.github.io/latest/wiki/usage/maps\">Maps and GPS traces<\/a><\/li> \n     <li><a href=\"https://alchemistsimulator.github.io/latest/wiki/usage/export\">Exporting data<\/a><\/li> \n     <li><a href=\"https://alchemistsimulator.github.io/latest/wiki/usage/batch\">Executing batches<\/a><\/li> \n     <li><a href=\"https://alchemistsimulator.github.io/latest/wiki/usage/grid\">Grid computing support<\/a><\/li> \n     <li><a href=\"https://alchemistsimulator.github.io/latest/wiki/usage/customization\">Writing custom components<\/a><\/li> \n     <li><a href=\"https://alchemistsimulator.github.io/latest/wiki/usage/faq\">Frequently Asked Questions<\/a><\/li> \n     <li><a href=\"https://alchemistsimulator.github.io/latest/wiki/usage/issues\">Troubleshooting and known issues<\/a><\/li> \n    <\/ul> <\/li> \n   <li><a href=\"https://alchemistsimulator.github.io/latest/wiki/examples\">Simulation examples<\/a> \n    <ul> \n     <li><a href=\"https://alchemistsimulator.github.io/latest/wiki/examples/protelis\">With Protelis<\/a><\/li> \n     <li><a href=\"https://alchemistsimulator.github.io/latest/wiki/examples/scafi\">With Scafi<\/a><\/li> \n     <li><a href=\"https://alchemistsimulator.github.io/latest/wiki/examples/maps\">On maps<\/a><\/li> \n    <\/ul> <\/li> \n   <li><a href=\"https://alchemistsimulator.github.io/latest/wiki/license\">License<\/a><\/li> \n  <\/ul> \n <\/body>\n<\/html>\n"
      }]
    },
    "it": {
      "ownKey": "it",
      "childrenPages": {"unibo": {
        "ownKey": "unibo",
        "childrenPages": {"alchemist": {
          "ownKey": "alchemist",
          "childrenPages": {
            "boundary": {
              "ownKey": "boundary",
              "childrenPages": {
                "l10n": {
                  "ownKey": "l10n",
                  "childrenPages": {"LocalizedResourceBundle": {
                    "ownKey": "LocalizedResourceBundle",
                    "ownPages": [{
                      "reference": {
                        "path": "it/unibo/alchemist/boundary/l10n",
                        "baseUrl": "https://alchemistsimulator.github.io/latest",
                        "fileName": "LocalizedResourceBundle",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/l10n/LocalizedResourceBundle"
                      },
                      "description": "",
                      "title": "LocalizedResourceBundle",
                      "content": "<p>Shorthand for getting resources.<\/p>\n<p>get<\/p>\n<p>get<\/p>\n<p>getString\nLooks up on the property files and returns the correct String.<\/p>\n"
                    }]
                  }},
                  "ownPages": [{
                    "reference": {
                      "path": "it/unibo/alchemist/boundary",
                      "baseUrl": "https://alchemistsimulator.github.io/latest",
                      "fileName": "l10n",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/l10n"
                    },
                    "description": "",
                    "title": "it.unibo.alchemist.boundary.l10n",
                    "content": ""
                  }]
                },
                "interfaces": {
                  "ownKey": "interfaces",
                  "childrenPages": {
                    "OutputMonitor": {
                      "ownKey": "OutputMonitor",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/boundary/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "OutputMonitor",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/interfaces/OutputMonitor"
                        },
                        "description": "",
                        "title": "OutputMonitor",
                        "content": "<p>An interface for the visualization of the simulation.<\/p>\n<p>finished\nThis method will be called by the simulation once the whole simulation has finished, either because it reached its latest point or because the user stopped it. Thread safety note: no specific policy is defined for the control flow which will execute this method. A new thread could have been spawned or the same flow of the simulation may execute this method. This depends on the specific it.unibo.alchemist.core.interfaces.Simulation implementation.\ninitialized\nThis method will be called by the simulation as soon as the initialization phase is completed. Thread safety note: no specific policy is defined for the control flow which will execute this method. A new thread could have been spawned or the same flow of the simulation may execute this method. This depends on the specific it.unibo.alchemist.core.interfaces.Simulation implementation.\nstepDone\nThis method will be called by the simulation every time a simulation step is done. Thread safety note: no specific policy is defined for the control flow which will execute this method. A new thread could have been spawned or the same flow of the simulation may execute this method. This depends on the specific it.unibo.alchemist.core.interfaces.Simulation implementation.<\/p>\n"
                      }]
                    },
                    "Graphical2DOutputMonitor": {
                      "ownKey": "Graphical2DOutputMonitor",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/boundary/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Graphical2DOutputMonitor",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/interfaces/Graphical2DOutputMonitor"
                        },
                        "description": "",
                        "title": "Graphical2DOutputMonitor",
                        "content": "<p>An output monitor that supports zooming on bidimensional environments.<\/p>\n<p>zoomTo<\/p>\n"
                      }]
                    },
                    "GraphicalOutputMonitor": {
                      "ownKey": "GraphicalOutputMonitor",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/boundary/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "GraphicalOutputMonitor",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/interfaces/GraphicalOutputMonitor"
                        },
                        "description": "",
                        "title": "GraphicalOutputMonitor",
                        "content": "<p>setStep<\/p>\n<p>setEffectStack<\/p>\n<p>isRealTime<\/p>\n<p>getStep<\/p>\n<p>repaint<\/p>\n<p>setMarkCloserNode\nIf set, the node closer to the mouse will be put in evidence.\nsetRealTime\nIf enabled, the monitor tries to synchronize the simulation time with the real time, slowing down the simulator if needed. If the simulation is slower than the real time, then the display refreshes fast enough to keep the default frame rate.\nsetDrawLinks<\/p>\n"
                      }]
                    }
                  },
                  "ownPages": [{
                    "reference": {
                      "path": "it/unibo/alchemist/boundary",
                      "baseUrl": "https://alchemistsimulator.github.io/latest",
                      "fileName": "interfaces",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/interfaces"
                    },
                    "description": "",
                    "title": "it.unibo.alchemist.boundary.interfaces",
                    "content": ""
                  }]
                },
                "util": {
                  "ownKey": "util",
                  "childrenPages": {"InitMapsForge": {
                    "ownKey": "InitMapsForge",
                    "ownPages": [{
                      "reference": {
                        "path": "it/unibo/alchemist/boundary/util",
                        "baseUrl": "https://alchemistsimulator.github.io/latest",
                        "fileName": "InitMapsForge",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/util/InitMapsForge"
                      },
                      "description": "",
                      "title": "InitMapsForge",
                      "content": "<p>Static configurator for Mapsforge, providing a custom user-agent and referer to identify Alchemist\non the OpenStreetMaps side.<\/p>\n<p>initAgent<\/p>\n"
                    }]
                  }},
                  "ownPages": [{
                    "reference": {
                      "path": "it/unibo/alchemist/boundary",
                      "baseUrl": "https://alchemistsimulator.github.io/latest",
                      "fileName": "util",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/util"
                    },
                    "description": "",
                    "title": "it.unibo.alchemist.boundary.util",
                    "content": ""
                  }]
                },
                "gpsload": {
                  "ownKey": "gpsload",
                  "childrenPages": {
                    "impl": {
                      "ownKey": "impl",
                      "childrenPages": {
                        "GPXLoader": {
                          "ownKey": "GPXLoader",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/gpsload/impl",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "GPXLoader",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gpsload/impl/GPXLoader"
                            },
                            "description": "",
                            "title": "GPXLoader",
                            "content": "<p>Class that reads GPS tracks from gpx files.<init>\nClass that reads GPS tracks from gpx files.<\/p>\n<p>readTrace<\/p>\n<p>supportedExtensions<\/p>\n"
                          }]
                        },
                        "TraceLoader": {
                          "ownKey": "TraceLoader",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/gpsload/impl",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "TraceLoader",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gpsload/impl/TraceLoader"
                            },
                            "description": "",
                            "title": "TraceLoader",
                            "content": "<p><init><\/p>\n<p><init><\/p>\n<p><init><\/p>\n<p><init><\/p>\n<p>iterator<\/p>\n<p>size<\/p>\n"
                          }]
                        }
                      },
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/boundary/gpsload",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "impl",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gpsload/impl"
                        },
                        "description": "",
                        "title": "it.unibo.alchemist.boundary.gpsload.impl",
                        "content": ""
                      }]
                    },
                    "api": {
                      "ownKey": "api",
                      "childrenPages": {
                        "AbstractGPSTimeAlignment": {
                          "ownKey": "AbstractGPSTimeAlignment",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/gpsload/api",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "AbstractGPSTimeAlignment",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gpsload/api/AbstractGPSTimeAlignment"
                            },
                            "description": "",
                            "title": "AbstractGPSTimeAlignment",
                            "content": "<p>alignTime\n{@inheritDoc}<\/p>\n"
                          }]
                        },
                        "AlignToFirstTrace": {
                          "ownKey": "AlignToFirstTrace",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/gpsload/api",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "AlignToFirstTrace",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gpsload/api/AlignToFirstTrace"
                            },
                            "description": "",
                            "title": "AlignToFirstTrace",
                            "content": "<p>Aligns all traces at the start time of the first trace. If you have two traces, the first trace start with time = 2 and second point with time = 5, the second trace start with time = 4 and second point with time = 6, the result will be: - first trace start with time = 0 and second point with time = 3 - second trace start with time = 2 and second point with time = 4<init>\nDefault empty constructor, builds a AlignToFirstTrace with RETAIN_SINGLE_POINTS behavior for trace with single point.<\/p>\n"
                          }]
                        },
                        "GPSTimeAlignment": {
                          "ownKey": "GPSTimeAlignment",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/gpsload/api",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "GPSTimeAlignment",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gpsload/api/GPSTimeAlignment"
                            },
                            "description": "",
                            "title": "GPSTimeAlignment",
                            "content": "<p>Strategy to define how align the time of all trace.<\/p>\n<p>alignTime<\/p>\n"
                          }]
                        },
                        "AlignToSimulationTime": {
                          "ownKey": "AlignToSimulationTime",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/gpsload/api",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "AlignToSimulationTime",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gpsload/api/AlignToSimulationTime"
                            },
                            "description": "",
                            "title": "AlignToSimulationTime",
                            "content": "<p>Aligns all traces at the initial simulation time. If you have two traces, the first trace start with time = 2 and second point with time = 5, the second trace start with time = 4 and second point with time = 6, the result will be: - first trace start with time = 0 and second point with time = 3 - second trace start with time = 0 and second point with time = 2<init>\nDefault empty constructor, builds a AlignToSimulationTime with RETAIN_SINGLE_POINTS behavior for trace with single point.<\/p>\n"
                          }]
                        },
                        "NoAlignment": {
                          "ownKey": "NoAlignment",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/gpsload/api",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "NoAlignment",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gpsload/api/NoAlignment"
                            },
                            "description": "",
                            "title": "NoAlignment",
                            "content": "<p>No alignment is performed. If you have two traces, the first trace start with time = 2 and second point with time = 5, the second trace start with time = 4 and second point with time = 6, the result will be: - first trace start with time = 2 and second point with time = 5 - second trace start with time = 4 and second point with time = 6<init>\nDefault empty constructor, builds a NoAlignment with RETAIN_SINGLE_POINTS behavior for trace with single point.<\/p>\n"
                          }]
                        },
                        "GPSFileLoader": {
                          "ownKey": "GPSFileLoader",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/gpsload/api",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "GPSFileLoader",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gpsload/api/GPSFileLoader"
                            },
                            "description": "",
                            "title": "GPSFileLoader",
                            "content": "<p>Strategy to read GPSTrace from file.<\/p>\n<p>readTrace<\/p>\n<p>supportedExtensions<\/p>\n"
                          }]
                        },
                        "AlignToTime": {
                          "ownKey": "AlignToTime",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/gpsload/api",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "AlignToTime",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gpsload/api/AlignToTime"
                            },
                            "description": "",
                            "title": "AlignToTime",
                            "content": "<p>Alings the traces with the given time in seconds from Epoch. All points before such time will be discarded. All points after the provided time will be shifted back. Summarizing, the time that is provided represents in the real world the time zero of the simulation.<init><\/p>\n<p><init><\/p>\n"
                          }]
                        }
                      },
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/boundary/gpsload",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "api",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gpsload/api"
                        },
                        "description": "",
                        "title": "it.unibo.alchemist.boundary.gpsload.api",
                        "content": ""
                      }]
                    }
                  }
                },
                "gui": {
                  "ownKey": "gui",
                  "childrenPages": {
                    "AbstractMenu": {
                      "ownKey": "AbstractMenu",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/boundary/gui",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "AbstractMenu",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/AbstractMenu"
                        },
                        "description": "",
                        "title": "AbstractMenu",
                        "content": "<p><init><\/p>\n"
                      }]
                    },
                    "SimControlButton": {
                      "ownKey": "SimControlButton",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/boundary/gui",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "SimControlButton",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/SimControlButton"
                        },
                        "description": "",
                        "title": "SimControlButton",
                        "content": "<p><init>\nBuilds a new Button.<\/p>\n"
                      }]
                    },
                    "FileMenu": {
                      "ownKey": "FileMenu",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/boundary/gui",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "FileMenu",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/FileMenu"
                        },
                        "description": "",
                        "title": "FileMenu",
                        "content": "<p><init>\nBuilds the File menu.<\/p>\n<p>actionPerformed<\/p>\n"
                      }]
                    },
                    "AlchemistSwingUI": {
                      "ownKey": "AlchemistSwingUI",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/boundary/gui",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "AlchemistSwingUI",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/AlchemistSwingUI"
                        },
                        "description": "",
                        "title": "AlchemistSwingUI",
                        "content": "<p>The main frame for the standard Alchemist GUI.<init>\nThe main frame for the standard Alchemist GUI.\nDEFAULT_ICON_SIZE\nThe default icon size.\nloadScaledImage\nLoads an image and scales it to the default Alchemist's icon size.\nloadScaledImage\nLoads an image and scales it to the desired size.<\/p>\n"
                      }]
                    },
                    "SimControlCommand": {
                      "ownKey": "SimControlCommand",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/boundary/gui",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "SimControlCommand",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/SimControlCommand"
                        },
                        "description": "",
                        "title": "SimControlCommand",
                        "content": "<p>equalsToString\nCompares this enum to a String.\ncreateButton<\/p>\n"
                      }]
                    },
                    "ReactivityPanel": {
                      "ownKey": "ReactivityPanel",
                      "childrenPages": {"Status": {
                        "ownKey": "Status",
                        "ownPages": [{
                          "reference": {
                            "path": "it/unibo/alchemist/boundary/gui/ReactivityPanel",
                            "baseUrl": "https://alchemistsimulator.github.io/latest",
                            "fileName": "Status",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/ReactivityPanel/Status"
                          },
                          "description": "",
                          "title": "Status",
                          "content": ""
                        }]
                      }},
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/boundary/gui",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "ReactivityPanel",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/ReactivityPanel"
                        },
                        "description": "",
                        "title": "ReactivityPanel",
                        "content": "<p><init><\/p>\n<p>itemStateChanged<\/p>\n<p>setActionCommand\nSets the command name for the action event fired by this component.\naddActionListener\nSee <code>JToggleButton#addActionListener(ActionListener)<\/code>.\naddChangeLister<\/p>\n<p>getStatus<\/p>\n<p>getUserReactivity<\/p>\n"
                      }]
                    },
                    "SimControlPanel": {
                      "ownKey": "SimControlPanel",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/boundary/gui",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "SimControlPanel",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/SimControlPanel"
                        },
                        "description": "",
                        "title": "SimControlPanel",
                        "content": "<p>This class maintains multiple control panels for controlling a simulation, ensuring that they are coherently updated.<\/p>\n<p>setSimulation<\/p>\n<p>setButtonEnabled<\/p>\n<p>addActionListener\nSee <code>SimControlButton#addActionListener(ActionListener)<\/code>.\nisDown<\/p>\n<p>setEnabled<\/p>\n<p>getSimulation<\/p>\n<p>shutdown\nTo be called when this control panel will be no longer useful.\ntoString<\/p>\n<p>createControlPanel<\/p>\n"
                      }]
                    },
                    "StatusBar": {
                      "ownKey": "StatusBar",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/boundary/gui",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "StatusBar",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/StatusBar"
                        },
                        "description": "",
                        "title": "StatusBar",
                        "content": "<p><init><\/p>\n<p>setOK<\/p>\n<p>setNo<\/p>\n"
                      }]
                    },
                    "layouts": {
                      "ownKey": "layouts",
                      "childrenPages": {
                        "AFlowLayout": {
                          "ownKey": "AFlowLayout",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/gui/layouts",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "AFlowLayout",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/layouts/AFlowLayout"
                            },
                            "description": "",
                            "title": "AFlowLayout",
                            "content": "<p><init><\/p>\n<p>CENTER\nThe horizontal alignment constant that designates centering. Also used to designate center anchoring.\nRIGHT\nThe horizontal alignment constant that designates right justification.\nLEFT\nThe horizontal alignment constant that designates left justification.\nBOTH\nThe horizontal alignment constant that designates stretching the component horizontally.\nTOP\nThe anchoring constant that designates anchoring to the top of the display area.\ngetComponentOrder<\/p>\n<p>setComponentOrder<\/p>\n<p>getComponentsList<\/p>\n<p>toString\n{@inheritDoc}\nminimumLayoutSize<\/p>\n<p>removeLayoutComponent<\/p>\n<p>isOrdered<\/p>\n<p>layoutContainer<\/p>\n<p>preferredLayoutSize<\/p>\n<p>addLayoutComponent<\/p>\n"
                          }]
                        },
                        "HorizontalFlowLayout": {
                          "ownKey": "HorizontalFlowLayout",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/gui/layouts",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "HorizontalFlowLayout",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/layouts/HorizontalFlowLayout"
                            },
                            "description": "",
                            "title": "HorizontalFlowLayout",
                            "content": "<p>A vertical layout manager similar to java.awt.FlowLayout. Like FlowLayout components do not expand to fill available space except when the horizontal getAlignment() is <code>BOTH<\/code> in which case components are stretched horizontally. Unlike FlowLayout, components will not wrap to form another column if there isn't enough space vertically. VerticalLayout can optionally getAnchor() components to the top or bottom of the display area or center them between the top and bottom. Revision date 12th July 2001 Homepage:www.kagi.com/equitysoft - Based on 'FlexLayout' in Java class libraries Vol 2 Chan/Lee Addison-Wesley 1998<init>\nConstructs an instance of VerticalLayout with a vertical vgap of 5 pixels, horizontal centering and anchored to the top of the display area.\n<init>\nConstructs a VerticalLayout instance with horizontal centering, anchored to the top with the specified vgap.\n<init>\nConstructs a VerticalLayout instance anchored to the top with the specified hgap and horizontal alignment.\n<init>\nConstructs a VerticalLayout instance with the specified vgap, horizontal getAlignment() and anchoring.<\/p>\n<p>layoutContainer<\/p>\n"
                          }]
                        },
                        "VerticalFlowLayout": {
                          "ownKey": "VerticalFlowLayout",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/gui/layouts",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "VerticalFlowLayout",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/layouts/VerticalFlowLayout"
                            },
                            "description": "",
                            "title": "VerticalFlowLayout",
                            "content": "<p>A vertical layout manager similar to java.awt.FlowLayout. Like FlowLayout components do not expand to fill available space except when the horizontal alignment is <code>BOTH<\/code> in which case components are stretched horizontally. Unlike FlowLayout, components will not wrap to form another column if there isn't enough space vertically. VerticalLayout can optionally anchor components to the top or bottom of the display area or center them between the top and bottom. Revision date 12th July 2001 Homepage:www.kagi.com/equitysoft - Based on 'FlexLayout' in Java class libraries Vol 2 Chan/Lee Addison-Wesley 1998<init>\nConstructs an instance of VerticalLayout with a vertical vgap of 5 pixels, horizontal centering and anchored to the top of the display area.\n<init>\nConstructs a VerticalLayout instance with horizontal centering, anchored to the top with the specified vgap.\n<init>\nConstructs a VerticalLayout instance anchored to the top with the specified vgap and horizontal alignment.\n<init>\nConstructs a VerticalLayout instance with the specified vgap, horizontal alignment and anchoring.<\/p>\n<p>layoutContainer\nLays out the container.<\/p>\n"
                          }]
                        }
                      },
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/boundary/gui",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "layouts",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/layouts"
                        },
                        "description": "",
                        "title": "it.unibo.alchemist.boundary.gui.layouts",
                        "content": ""
                      }]
                    },
                    "isolines": {
                      "ownKey": "isolines",
                      "childrenPages": {
                        "IsolinesFinder": {
                          "ownKey": "IsolinesFinder",
                          "childrenPages": {"BidimensionalFunction": {
                            "ownKey": "BidimensionalFunction",
                            "ownPages": [{
                              "reference": {
                                "path": "it/unibo/alchemist/boundary/gui/isolines/IsolinesFinder",
                                "baseUrl": "https://alchemistsimulator.github.io/latest",
                                "fileName": "BidimensionalFunction",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/isolines/IsolinesFinder/BidimensionalFunction"
                              },
                              "description": "",
                              "title": "BidimensionalFunction",
                              "content": "<p>Defines a basic bidimensional function.<\/p>\n<p>apply<\/p>\n"
                            }]
                          }},
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/gui/isolines",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "IsolinesFinder",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/isolines/IsolinesFinder"
                            },
                            "description": "",
                            "title": "IsolinesFinder",
                            "content": "<p>Defines an object capable of finding isolines (i.e. an isolines finding algorithm).<\/p>\n<p>findIsolines\nFind the isolines of the given function. You can specify which isolines will be extracted with the levels parameter: for each value included in the collection, the corresponding isoline will be extracted. Isolines will be calculated within a rectangular region defined by two opposite vertexes. This means that the algorithm will not consider the space outside the given region at all.\nfindIsolines\nFind the isolines of the given function. This method is equivalent to <code>IsolinesFinder#findIsolines(BidimensionalFunction, Number, Number, Number, Number, Collection)<\/code>, with the difference that it allows you to specify the diagonal of the rectangular region, instead of the four vertexes separately.<\/p>\n"
                          }]
                        },
                        "ConrecIsolinesFinder": {
                          "ownKey": "ConrecIsolinesFinder",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/gui/isolines",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "ConrecIsolinesFinder",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/isolines/ConrecIsolinesFinder"
                            },
                            "description": "",
                            "title": "ConrecIsolinesFinder",
                            "content": "<p>Conrec algorithm adapter to IsolinesFinder interface.<init><\/p>\n<p>findIsolines\n{@inheritDoc}\nfindIsolines\n{@inheritDoc}<\/p>\n"
                          }]
                        },
                        "Isoline": {
                          "ownKey": "Isoline",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/gui/isolines",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "Isoline",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/isolines/Isoline"
                            },
                            "description": "",
                            "title": "Isoline",
                            "content": "<p>An isoline (also contour line, isopleth, or isarithm) of a function of two variables is a curve along which the function has a constant value, so that the curve joins points of equal value. Here the curve is approximated as a collection of 2D segments.<\/p>\n<p>getValue<\/p>\n<p>getSegments<\/p>\n"
                          }]
                        },
                        "IsolinesFactory": {
                          "ownKey": "IsolinesFactory",
                          "childrenPages": {"IsolineFinders": {
                            "ownKey": "IsolineFinders",
                            "ownPages": [{
                              "reference": {
                                "path": "it/unibo/alchemist/boundary/gui/isolines/IsolinesFactory",
                                "baseUrl": "https://alchemistsimulator.github.io/latest",
                                "fileName": "IsolineFinders",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/isolines/IsolinesFactory/IsolineFinders"
                              },
                              "description": "",
                              "title": "IsolineFinders",
                              "content": "<p>Enum containing all the available isolines finding algorithms.<\/p>\n"
                            }]
                          }},
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/gui/isolines",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "IsolinesFactory",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/isolines/IsolinesFactory"
                            },
                            "description": "",
                            "title": "IsolinesFactory",
                            "content": "<p>A factory for the creation of the basic astractions contained in this package.<\/p>\n<p>makeIsolinesFinder\nCreate an IsolinesFinder object, capable of finding isolines. As different finders could be available - each one extracting isolines in a different way - you can specify which one to use with the algorithm parameter.\nmakeIsoline\nCreate an Isoline.\nmakeSegment\nCreate a 2D segment.<\/p>\n"
                          }]
                        },
                        "Segment2D": {
                          "ownKey": "Segment2D",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/gui/isolines",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "Segment2D",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/isolines/Segment2D"
                            },
                            "description": "",
                            "title": "Segment2D",
                            "content": "<p>A basic 2-dimensional segment.<\/p>\n<p>getX2<\/p>\n<p>getX1<\/p>\n<p>getY2<\/p>\n<p>getY1<\/p>\n"
                          }]
                        },
                        "ConcreteIsolinesFactory": {
                          "ownKey": "ConcreteIsolinesFactory",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/gui/isolines",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "ConcreteIsolinesFactory",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/isolines/ConcreteIsolinesFactory"
                            },
                            "description": "",
                            "title": "ConcreteIsolinesFactory",
                            "content": "<p><init><\/p>\n<p>makeIsolinesFinder\n{@inheritDoc}\nmakeIsoline\n{@inheritDoc}\nmakeSegment\n{@inheritDoc}<\/p>\n"
                          }]
                        }
                      },
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/boundary/gui",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "isolines",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/isolines"
                        },
                        "description": "",
                        "title": "it.unibo.alchemist.boundary.gui.isolines",
                        "content": ""
                      }]
                    },
                    "effects": {
                      "ownKey": "effects",
                      "childrenPages": {
                        "DrawBidimensionalGaussianLayersGradient": {
                          "ownKey": "DrawBidimensionalGaussianLayersGradient",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/gui/effects",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "DrawBidimensionalGaussianLayersGradient",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/effects/DrawBidimensionalGaussianLayersGradient"
                            },
                            "description": "",
                            "title": "DrawBidimensionalGaussianLayersGradient",
                            "content": "<p>Draw a gradient in the background of the gui for it.unibo.alchemist.model.implementations.layers.BidimensionalGaussianLayers values. It ignores any other layer.<init>\nDraw a gradient in the background of the gui for it.unibo.alchemist.model.implementations.layers.BidimensionalGaussianLayers values. It ignores any other layer.<\/p>\n"
                          }]
                        },
                        "EffectBuilder": {
                          "ownKey": "EffectBuilder",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/gui/effects",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "EffectBuilder",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/effects/EffectBuilder"
                            },
                            "description": "",
                            "title": "EffectBuilder",
                            "content": "<p><init>\nDefault constructor.<\/p>\n<p>getResult<\/p>\n<p>actionPerformed<\/p>\n"
                          }]
                        },
                        "BidimensionalGaussianLayersMapper": {
                          "ownKey": "BidimensionalGaussianLayersMapper",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/gui/effects",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "BidimensionalGaussianLayersMapper",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/effects/BidimensionalGaussianLayersMapper"
                            },
                            "description": "",
                            "title": "BidimensionalGaussianLayersMapper",
                            "content": "<p>Maps BidimensionalGaussianLayers, it ignores any other layer.<p>This class also manages to infer optimal min and max layer values automatically\nso the user does not have to set them by hand.<\/p><init>\nMaps BidimensionalGaussianLayers, it ignores any other layer.<p>This class also manages to infer optimal min and max layer values automatically\nso the user does not have to set them by hand.<\/p><\/p>\n<p>prepare\nPrepare the mapping (if necessary).\nmap\nEffectively map the given layers, layers may be filtered too if the mapper is only able\nto map certain types of layers.\nmap\nsee LayerToFunctionMapper.map.<\/p>\n"
                          }]
                        },
                        "DrawBidimensionalGaussianLayersIsolines": {
                          "ownKey": "DrawBidimensionalGaussianLayersIsolines",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/gui/effects",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "DrawBidimensionalGaussianLayersIsolines",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/effects/DrawBidimensionalGaussianLayersIsolines"
                            },
                            "description": "",
                            "title": "DrawBidimensionalGaussianLayersIsolines",
                            "content": "<p>Draw isolines for it.unibo.alchemist.model.implementations.layers.BidimensionalGaussianLayers. It ignores any other layer.<init><\/p>\n"
                          }]
                        },
                        "DrawOnce": {
                          "ownKey": "DrawOnce",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/gui/effects",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "DrawOnce",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/effects/DrawOnce"
                            },
                            "description": "",
                            "title": "DrawOnce",
                            "content": "<p>Effects are normally applied for each node, this is a base class for effects that do not need to be redrawn for each node. In other words, this effect will be applied for a single node instead of redrawing for all of them.<init>\nEffects are normally applied for each node, this is a base class for effects that do not need to be redrawn for each node. In other words, this effect will be applied for a single node instead of redrawing for all of them.<\/p>\n<p>apply\n{@inheritDoc}\ngetMarkerNodeID<\/p>\n"
                          }]
                        },
                        "DrawCognitiveMap": {
                          "ownKey": "DrawCognitiveMap",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/gui/effects",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "DrawCognitiveMap",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/effects/DrawCognitiveMap"
                            },
                            "description": "",
                            "title": "DrawCognitiveMap",
                            "content": "<p>Draws an orienting pedestrian' cognitive map.<init>\nDraws an orienting pedestrian' cognitive map.<\/p>\n<p>getColorSummary\n{@inheritDoc}\ngetRed<\/p>\n<p>getGreen<\/p>\n<p>getBlue<\/p>\n<p>setBlue<\/p>\n<p>apply<\/p>\n<p>setGreen<\/p>\n<p>getAlpha<\/p>\n<p>setAlpha<\/p>\n<p>setRed<\/p>\n"
                          }]
                        },
                        "DrawLayersGradient": {
                          "ownKey": "DrawLayersGradient",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/gui/effects",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "DrawLayersGradient",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/effects/DrawLayersGradient"
                            },
                            "description": "",
                            "title": "DrawLayersGradient",
                            "content": "<p>Draw layers values as background in the gui. The higher is the layer concentration in a point, the higher is the alpha channel for the background in that point. The user must specify: - the number of samples for each side, basically more samples correspond to a smoother and more detailed background - the min layer value - the max layer value The purpose and structure of this class is similar to DrawLayersIsolines.<init>\nDraw layers values as background in the gui. The higher is the layer concentration in a point, the higher is the alpha channel for the background in that point. The user must specify: - the number of samples for each side, basically more samples correspond to a smoother and more detailed background - the min layer value - the max layer value The purpose and structure of this class is similar to DrawLayersIsolines.<\/p>\n<p>setSamples<\/p>\n<p>getSamples<\/p>\n<p>drawFunction\n{@inheritDoc}\nmap\nMap x from [xmin, xmax] to [ymin, ymax].<\/p>\n"
                          }]
                        },
                        "EffectFactory": {
                          "ownKey": "EffectFactory",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/gui/effects",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "EffectFactory",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/effects/EffectFactory"
                            },
                            "description": "",
                            "title": "EffectFactory",
                            "content": "<p>buildDefaultEffect<\/p>\n<p>buildEffect\nGiven a class, builds the corresponding effect.<\/p>\n"
                          }]
                        },
                        "JEffectRepresentation": {
                          "ownKey": "JEffectRepresentation",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/gui/effects",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "JEffectRepresentation",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/effects/JEffectRepresentation"
                            },
                            "description": "",
                            "title": "JEffectRepresentation",
                            "content": "<p>Representation of an Effect. Useful to let the user interact with an effect (create/edit). Effects are relative to a GraphicalOutputMonitor instance.<init>\nCreates a new representation for the effect and monitor in input.<\/p>\n<p>removeItemListener<\/p>\n<p>addItemListener<\/p>\n<p>getEffect\nGets the represented effects.\nisSelected\nCheck if the representation is selected.\ngetSelectedObjects<\/p>\n<p>setEnabled<\/p>\n<p>setSelected\n(Un)selects this representation.<\/p>\n"
                          }]
                        },
                        "DrawPedestrianPath": {
                          "ownKey": "DrawPedestrianPath",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/gui/effects",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "DrawPedestrianPath",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/effects/DrawPedestrianPath"
                            },
                            "description": "",
                            "title": "DrawPedestrianPath",
                            "content": "<p>Draws the paths took by pedestrians.<init>\nDraws the paths took by pedestrians.<\/p>\n<p>getColorSummary\n{@inheritDoc}\ngetRed<\/p>\n<p>isToBeDrawn<\/p>\n<p>getGreen<\/p>\n<p>getBlue<\/p>\n<p>setBlue<\/p>\n<p>setToBeDrawn<\/p>\n<p>setGreen<\/p>\n<p>getAlpha<\/p>\n<p>setAlpha<\/p>\n<p>setRed<\/p>\n"
                          }]
                        },
                        "DrawNavigationGraph": {
                          "ownKey": "DrawNavigationGraph",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/gui/effects",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "DrawNavigationGraph",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/effects/DrawNavigationGraph"
                            },
                            "description": "",
                            "title": "DrawNavigationGraph",
                            "content": "<p>Draws the navigation graph of an ImageEnvironmentWithGraph.<init>\nDraws the navigation graph of an ImageEnvironmentWithGraph.<\/p>\n<p>getColorSummary\n{@inheritDoc}\ngetRed<\/p>\n<p>getGreen<\/p>\n<p>getBlue<\/p>\n<p>setBlue<\/p>\n<p>setGreen<\/p>\n<p>getAlpha<\/p>\n<p>setAlpha<\/p>\n<p>setRed<\/p>\n"
                          }]
                        },
                        "DrawLayers": {
                          "ownKey": "DrawLayers",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/gui/effects",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "DrawLayers",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/effects/DrawLayers"
                            },
                            "description": "",
                            "title": "DrawLayers",
                            "content": "<p>Basic interface for every effect that draws something related to it.unibo.alchemist.model.interfaces.Layers. This class is a workaround: the Effect abstraction is meant to add effects to nodes, not to draw layers. At present, is the finest workaround available. This workaround has the following disadvantages: - when there aren't nodes visible in the gui the effects are not used at all, so this effect won't work.<\/p>\n<p>drawLayers\nEffectively draw the layers.<\/p>\n"
                          }]
                        },
                        "DrawLayersValues": {
                          "ownKey": "DrawLayersValues",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/gui/effects",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "DrawLayersValues",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/effects/DrawLayersValues"
                            },
                            "description": "",
                            "title": "DrawLayersValues",
                            "content": "<p>This is a basic class for all the effects meant to draw it.unibo.alchemist.model.interfaces.Layers values in different points of the view. One effect could draw isolines, whereas another could represent different values with a gradient. Normally, drawing a layer's values only makes sense for &quot;numerical&quot; layers (i.e. layers for which the values are Numbers). However, one could have a &quot;non-numerical&quot; layer whose <code>it.unibo.alchemist.model.interfaces.Layer#getValue(it.unibo.alchemist.model.interfaces.Position)<\/code> return type is an object from which a value can be extracted somehow. In the end, drawing a layer's values makes sense as long as there is a way to map those values to Numbers. More generally, a LayerToFunctionMapper is needed. As this class is not aware of which mapper to use, this responsibility is left to subclasses. When drawing layers values, it can be important to know the min and max layer values that will be drawn. This class declares gui controls that allow the user to specify such boundaries.<init>\nThis is a basic class for all the effects meant to draw it.unibo.alchemist.model.interfaces.Layers values in different points of the view. One effect could draw isolines, whereas another could represent different values with a gradient. Normally, drawing a layer's values only makes sense for &quot;numerical&quot; layers (i.e. layers for which the values are Numbers). However, one could have a &quot;non-numerical&quot; layer whose <code>it.unibo.alchemist.model.interfaces.Layer#getValue(it.unibo.alchemist.model.interfaces.Position)<\/code> return type is an object from which a value can be extracted somehow. In the end, drawing a layer's values makes sense as long as there is a way to map those values to Numbers. More generally, a LayerToFunctionMapper is needed. As this class is not aware of which mapper to use, this responsibility is left to subclasses. When drawing layers values, it can be important to know the min and max layer values that will be drawn. This class declares gui controls that allow the user to specify such boundaries.<\/p>\n<p>drawLayers\n{@inheritDoc}\ndrawFunction\n{@inheritDoc}\ngetMinLayerValue<\/p>\n<p>setMinLayerValue<\/p>\n<p>getMaxLayerValue<\/p>\n<p>setMaxLayerValue<\/p>\n"
                          }]
                        },
                        "EffectSerializationFactory": {
                          "ownKey": "EffectSerializationFactory",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/gui/effects",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "EffectSerializationFactory",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/effects/EffectSerializationFactory"
                            },
                            "description": "",
                            "title": "EffectSerializationFactory",
                            "content": "<p>Serialize Alchemist effects from/to file in human readable format.<\/p>\n<p>effectsFromFile\nGet a list of effects from the specified file. Try to deserialize a JSON file at first. If this operation is not successful (for the sake of backward compatibility) try to deserialize a binary file.\neffectToFile\nWrite the given effect to the destination file.\neffectsToFile\nWrite the given effects to the destination file.<\/p>\n"
                          }]
                        },
                        "LayerToFunctionMapper": {
                          "ownKey": "LayerToFunctionMapper",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/gui/effects",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "LayerToFunctionMapper",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/effects/LayerToFunctionMapper"
                            },
                            "description": "",
                            "title": "LayerToFunctionMapper",
                            "content": "<p>Defines an object capable of mapping a Layer&lt;T, P&gt; to a Function&lt;* in P, * out Number&gt;.<\/p>\n<p>prepare\nPrepare the mapping (if necessary).\nmap\nEffectively map the given layers, layers may be filtered too if the mapper is only able\nto map certain types of layers.\nmap\nsee LayerToFunctionMapper.map.<\/p>\n"
                          }]
                        },
                        "DrawLayersIsolines": {
                          "ownKey": "DrawLayersIsolines",
                          "childrenPages": {"Distribution": {
                            "ownKey": "Distribution",
                            "ownPages": [{
                              "reference": {
                                "path": "it/unibo/alchemist/boundary/gui/effects/DrawLayersIsolines",
                                "baseUrl": "https://alchemistsimulator.github.io/latest",
                                "fileName": "Distribution",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/effects/DrawLayersIsolines/Distribution"
                              },
                              "description": "",
                              "title": "Distribution",
                              "content": "<p>Distributions describing how values within an interval should be spaced.<\/p>\n<p>toString<\/p>\n"
                            }]
                          }},
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/gui/effects",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "DrawLayersIsolines",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/effects/DrawLayersIsolines"
                            },
                            "description": "",
                            "title": "DrawLayersIsolines",
                            "content": "<p>Draw layers isolines. The user must specify: - the number of isolines to draw - the min layer value - the max layer value - the distribution, used to space isoline values between min and max This class defines the <code>DrawLayersIsolines#drawFunction(Function, Environment, Graphics2D, IWormhole2D)<\/code> method, which is capable of drawing a layer's isolines given a function. The only responsibility left to subclasses is to provide a LayerToFunctionMapper.<init>\nEvery class extending this one should call this constructor.<\/p>\n<p>getNumberOfIsolines<\/p>\n<p>setDistribution<\/p>\n<p>drawFunction\n{@inheritDoc}\ngetDistribution<\/p>\n<p>setNumberOfIsolines<\/p>\n<p>logspace\ngenerates n logarithmically-spaced points between d1 and d2 using the provided base.\nlinspace\ngenerates n linearly-spaced points between d1 and d2.<\/p>\n"
                          }]
                        },
                        "Effect": {
                          "ownKey": "Effect",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/gui/effects",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "Effect",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/effects/Effect"
                            },
                            "description": "",
                            "title": "Effect",
                            "content": "<p>getColorSummary<\/p>\n<p>apply\nApplies the effect.\napply\nApplies the effect.<\/p>\n"
                          }]
                        },
                        "FunctionDrawer": {
                          "ownKey": "FunctionDrawer",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/gui/effects",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "FunctionDrawer",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/effects/FunctionDrawer"
                            },
                            "description": "",
                            "title": "FunctionDrawer",
                            "content": "<p>Defines an object capable of drawing functions that take a Position of type P as input and give a Number as output.<\/p>\n<p>drawFunction\nDraw the provided function.<\/p>\n"
                          }]
                        },
                        "AbstractDrawLayers": {
                          "ownKey": "AbstractDrawLayers",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/gui/effects",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "AbstractDrawLayers",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/effects/AbstractDrawLayers"
                            },
                            "description": "",
                            "title": "AbstractDrawLayers",
                            "content": "<p>This class collects the following responsibilities: - it manages to draw layers only when necessary (as the apply method will be called for every node). Every subclass must only define the <code>AbstractDrawLayers#drawLayers(Collection, Environment, Graphics2D, IWormhole2D)<\/code> method, which is guaranteed to be called only when necessary. - it declares gui controls for the selection of the color to use - it declares gui controls for the selection of a filter, used to filter the layers to draw. In particular, it allows the user to specify a molecule, meaning that only the layer containing such molecule will be drawn (otherwise the effect is applied to all layers)<init>\nThis class collects the following responsibilities: - it manages to draw layers only when necessary (as the apply method will be called for every node). Every subclass must only define the <code>AbstractDrawLayers#drawLayers(Collection, Environment, Graphics2D, IWormhole2D)<\/code> method, which is guaranteed to be called only when necessary. - it declares gui controls for the selection of the color to use - it declares gui controls for the selection of a filter, used to filter the layers to draw. In particular, it allows the user to specify a molecule, meaning that only the layer containing such molecule will be drawn (otherwise the effect is applied to all layers)<\/p>\n<p>getColorSummary\n{@inheritDoc}\ngetRed<\/p>\n<p>setLayerFilter<\/p>\n<p>setMolString<\/p>\n<p>getGreen<\/p>\n<p>getBlue<\/p>\n<p>drawLayers\n{@inheritDoc}\nsetBlue<\/p>\n<p>setGreen<\/p>\n<p>getMolString<\/p>\n<p>getAlpha<\/p>\n<p>isLayerFilter<\/p>\n<p>setAlpha<\/p>\n<p>setRed<\/p>\n"
                          }]
                        },
                        "DrawSmartcam": {
                          "ownKey": "DrawSmartcam",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/gui/effects",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "DrawSmartcam",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/effects/DrawSmartcam"
                            },
                            "description": "",
                            "title": "DrawSmartcam",
                            "content": "<p>Draws node's shapes and cameras' fields of view.<init>\nDraws node's shapes and cameras' fields of view.<\/p>\n<p>getColorSummary<\/p>\n<p>apply<\/p>\n"
                          }]
                        },
                        "JEffectsTab": {
                          "ownKey": "JEffectsTab",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/gui/effects",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "JEffectsTab",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/effects/JEffectsTab"
                            },
                            "description": "",
                            "title": "JEffectsTab",
                            "content": "<p>Graphic component to handle effects.<init>\nInitialize the component.<\/p>\n<p>setEffects\nSets a new effect stack.\nitemStateChanged<\/p>\n<p>addEffect\nAdds a new Effect to this stack.\naddActionListener\nSee <code>JToggleButton#addActionListener(ActionListener)<\/code>.\nsetEnabled<\/p>\n<p>getEffects<\/p>\n<p>clearEffects\nRemoves every effect.<\/p>\n"
                          }]
                        },
                        "DrawShape": {
                          "ownKey": "DrawShape",
                          "childrenPages": {"Mode": {
                            "ownKey": "Mode",
                            "ownPages": [{
                              "reference": {
                                "path": "it/unibo/alchemist/boundary/gui/effects/DrawShape",
                                "baseUrl": "https://alchemistsimulator.github.io/latest",
                                "fileName": "Mode",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/effects/DrawShape/Mode"
                              },
                              "description": "",
                              "title": "Mode",
                              "content": "<p>toString<\/p>\n"
                            }]
                          }},
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/gui/effects",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "DrawShape",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/effects/DrawShape"
                            },
                            "description": "",
                            "title": "DrawShape",
                            "content": "<p><init>\nBuilds a new DrawShape effect.<\/p>\n<p>getPropoom<\/p>\n<p>getRed<\/p>\n<p>setWritingPropertyValue<\/p>\n<p>getGreen<\/p>\n<p>setMolString<\/p>\n<p>getScaleFactor<\/p>\n<p>getBlue<\/p>\n<p>getSize<\/p>\n<p>isMolFilter<\/p>\n<p>getProperty<\/p>\n<p>setScaleFactor<\/p>\n<p>setMaxprop<\/p>\n<p>setMolPropertyFilter<\/p>\n<p>isMolPropertyFilter<\/p>\n<p>setIncarnation<\/p>\n<p>getMaxprop<\/p>\n<p>getMolecule<\/p>\n<p>getIncarnation<\/p>\n<p>getMode<\/p>\n<p>setMinprop<\/p>\n<p>setGreen<\/p>\n<p>getAlpha<\/p>\n<p>getMolString<\/p>\n<p>isReverse<\/p>\n<p>setAlpha<\/p>\n<p>getMinprop<\/p>\n<p>setPropoom<\/p>\n<p>setRed<\/p>\n<p>getColorSummary<\/p>\n<p>setMode<\/p>\n<p>setProperty<\/p>\n<p>setBlue<\/p>\n<p>setSize<\/p>\n<p>setReverse<\/p>\n<p>apply<\/p>\n<p>getColorChannel<\/p>\n<p>setC<\/p>\n<p>isWritingPropertyValue<\/p>\n<p>setMolFilter<\/p>\n"
                          }]
                        }
                      },
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/boundary/gui",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "effects",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/effects"
                        },
                        "description": "",
                        "title": "it.unibo.alchemist.boundary.gui.effects",
                        "content": ""
                      }]
                    },
                    "tape": {
                      "ownKey": "tape",
                      "childrenPages": {
                        "JTapeGroup": {
                          "ownKey": "JTapeGroup",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/gui/tape",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "JTapeGroup",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/tape/JTapeGroup"
                            },
                            "description": "",
                            "title": "JTapeGroup",
                            "content": "<p>A JTapeGroup is a set of JTapeSection identified by a common description.<init>\nInitializes a new JTapeGroup with the description in input.<\/p>\n<p>setDescription\nSets the description.\ngetDescription\nGets the description.\nregisterSection\nAdds a section to the current group.<\/p>\n"
                          }]
                        },
                        "JTape": {
                          "ownKey": "JTape",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/gui/tape",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "JTape",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/tape/JTape"
                            },
                            "description": "",
                            "title": "JTape",
                            "content": "<p>JTape is a container for a commands bar that should expose the whole set of features of an application that may concern the user.<init>\nJTape is a container for a commands bar that should expose the whole set of features of an application that may concern the user.<\/p>\n<p>deregisterTab\nRemoves a tab.\nregisterTab\nAdds a tab to the JTape instance.<\/p>\n"
                          }]
                        },
                        "JTapeFeatureStack": {
                          "ownKey": "JTapeFeatureStack",
                          "childrenPages": {"Type": {
                            "ownKey": "Type",
                            "ownPages": [{
                              "reference": {
                                "path": "it/unibo/alchemist/boundary/gui/tape/JTapeFeatureStack",
                                "baseUrl": "https://alchemistsimulator.github.io/latest",
                                "fileName": "Type",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/tape/JTapeFeatureStack/Type"
                              },
                              "description": "",
                              "title": "Type",
                              "content": ""
                            }]
                          }},
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/gui/tape",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "JTapeFeatureStack",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/tape/JTapeFeatureStack"
                            },
                            "description": "",
                            "title": "JTapeFeatureStack",
                            "content": "<p><init><\/p>\n<p><init><\/p>\n<p>unregisterFeature\n{@inheritDoc}\ngetOrderedComponents<\/p>\n<p>getLayout<\/p>\n<p>setComponentOrder<\/p>\n<p>remove\n{@inheritDoc}\nadd\n{@inheritDoc}\nregisterFeature\n{@inheritDoc}\ngetType<\/p>\n"
                          }]
                        },
                        "JTapeMainFeature": {
                          "ownKey": "JTapeMainFeature",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/gui/tape",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "JTapeMainFeature",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/tape/JTapeMainFeature"
                            },
                            "description": "",
                            "title": "JTapeMainFeature",
                            "content": "<p><init><\/p>\n<p>unregisterFeature<\/p>\n<p>registerFeature<\/p>\n"
                          }]
                        },
                        "JTapeTab": {
                          "ownKey": "JTapeTab",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/gui/tape",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "JTapeTab",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/tape/JTapeTab"
                            },
                            "description": "",
                            "title": "JTapeTab",
                            "content": "<p>A JTapeTab is composed of a title and a set of JTapeGroup. Each JTapeTab contains an hidden JProgressBar too. Features with a common context should appear into the same tab. E.g. Common operations like New, Open, Close, Save, etc. should stay togheter.<init>\nInitializes a new JTapeTab with the title in input.<\/p>\n<p>getTitle\nGets the title.\nregisterGroup\nAdds a group of features to the tab.\nsetTitle\nSets the title.<\/p>\n"
                          }]
                        },
                        "JTapeSection": {
                          "ownKey": "JTapeSection",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/gui/tape",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "JTapeSection",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/tape/JTapeSection"
                            },
                            "description": "",
                            "title": "JTapeSection",
                            "content": "<p>A JTapeSection is a set of one or more feature that should appear close to each other because of stylistic or semantic reasons.<init>\nA JTapeSection is a set of one or more feature that should appear close to each other because of stylistic or semantic reasons.<\/p>\n<p>unregisterFeature\nRemoves a feature from the current section.\nregisterFeature\nAdds a feature to the current section.<\/p>\n"
                          }]
                        }
                      },
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/boundary/gui",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "tape",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/tape"
                        },
                        "description": "",
                        "title": "it.unibo.alchemist.boundary.gui.tape",
                        "content": ""
                      }]
                    },
                    "ColorChannel": {
                      "ownKey": "ColorChannel",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/boundary/gui",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "ColorChannel",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/ColorChannel"
                        },
                        "description": "",
                        "title": "ColorChannel",
                        "content": "<p>alter\nGiven a color, modifies the channel setting the passed value.<\/p>\n"
                      }]
                    },
                    "SingleRunGUI": {
                      "ownKey": "SingleRunGUI",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/boundary/gui",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "SingleRunGUI",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/SingleRunGUI"
                        },
                        "description": "",
                        "title": "SingleRunGUI",
                        "content": "<p>Utility class for quickly creating non-reusable graphical interfaces.<\/p>\n<p>make\nBuilds a single-use graphical interface.\nmake<\/p>\n<p>make\nBuilds a single-use graphical interface.\nmake\nBuilds a single-use graphical interface.\nmake\nBuilds a single-use graphical interface.<\/p>\n"
                      }]
                    },
                    "NumericTextField": {
                      "ownKey": "NumericTextField",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/boundary/gui",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "NumericTextField",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/NumericTextField"
                        },
                        "description": "",
                        "title": "NumericTextField",
                        "content": "<p><init><\/p>\n"
                      }]
                    },
                    "monitors": {
                      "ownKey": "monitors",
                      "childrenPages": {
                        "ClassItem": {
                          "ownKey": "ClassItem",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/gui/monitors",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "ClassItem",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/monitors/ClassItem"
                            },
                            "description": "",
                            "title": "ClassItem",
                            "content": "<p>A simple Class wrapper exposing a better <code>Object#toString()<\/code>.<init><\/p>\n<p>hashCode<\/p>\n<p>getPayload<\/p>\n<p>equals<\/p>\n<p>toString<\/p>\n"
                          }]
                        },
                        "JOutputMonitorRepresentation": {
                          "ownKey": "JOutputMonitorRepresentation",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/gui/monitors",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "JOutputMonitorRepresentation",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/monitors/JOutputMonitorRepresentation"
                            },
                            "description": "",
                            "title": "JOutputMonitorRepresentation",
                            "content": "<p><init><\/p>\n<p>removeItemListener<\/p>\n<p>addItemListener<\/p>\n<p>isSelected<\/p>\n<p>getSelectedObjects<\/p>\n<p>getMonitor<\/p>\n<p>setSelected<\/p>\n"
                          }]
                        }
                      },
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/boundary/gui",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "monitors",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui/monitors"
                        },
                        "description": "",
                        "title": "it.unibo.alchemist.boundary.gui.monitors",
                        "content": ""
                      }]
                    }
                  },
                  "ownPages": [{
                    "reference": {
                      "path": "it/unibo/alchemist/boundary",
                      "baseUrl": "https://alchemistsimulator.github.io/latest",
                      "fileName": "gui",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/gui"
                    },
                    "description": "",
                    "title": "it.unibo.alchemist.boundary.gui",
                    "content": ""
                  }]
                },
                "wormhole": {
                  "ownKey": "wormhole",
                  "childrenPages": {
                    "interfaces": {
                      "ownKey": "interfaces",
                      "childrenPages": {
                        "IWormhole2D": {
                          "ownKey": "IWormhole2D",
                          "childrenPages": {"Mode": {
                            "ownKey": "Mode",
                            "ownPages": [{
                              "reference": {
                                "path": "it/unibo/alchemist/boundary/wormhole/interfaces/IWormhole2D",
                                "baseUrl": "https://alchemistsimulator.github.io/latest",
                                "fileName": "Mode",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/wormhole/interfaces/IWormhole2D/Mode"
                              },
                              "description": "",
                              "title": "Mode",
                              "content": "<p>Wormhole mode.<\/p>\n"
                            }]
                          }},
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/wormhole/interfaces",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "IWormhole2D",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/wormhole/interfaces/IWormhole2D"
                            },
                            "description": "",
                            "title": "IWormhole2D",
                            "content": "<p>A Wormhole (in this context) is an entity that &quot;connects&quot; two worlds: the &quot;environment&quot; and the &quot;view&quot;. Above all it provides services to convert coordinates from the &quot;environment-space&quot; to the &quot;view-space&quot;. <code>IWormhole2D<\/code> is the type of a wormhole whose both environment and view are bi-dimensional spaces. <br> <br> <b>Terminology:<\/b> <br> <br> - &quot;Environment&quot; is the 'rectangle' we need to render ON the view.<br> - &quot;View&quot; is a 'window' that let us see the environment.<br> - &quot;Environment-space&quot; is the algebraic space on which 'lies' the environment.<br> - &quot;View-space&quot; is the algebraic space on which 'lies' the view.<br> - &quot;Env&quot; before a point's name =&gt; it refers to a point into the environment-space.<br> - &quot;View&quot; before a point's name =&gt; it refers to a point into the view-space.<br> - &quot;Position&quot; is the point of the view-space every transformation applied to the environment refers to: e.g. if I want to move the environment, I have to change the position; it is also the point the environment rotates around.<br> - &quot;EnvOffset&quot; is the vector from (0; 0) into env-space to the left-bottom corner of the part of the environment we want to render. E.g. if I am representing a map with Earth-coordinates (16; 48), the intersection between the prime meridian and the equator is (0; 0), so I have to set the envOffset to (16; 48) in order to see the &quot;beginning&quot; of the map on the left-bottom corner of the view.<br><\/p>\n<p>rotateAroundPoint\nRotates around a point into the view-space.\nisInsideView\nCheck if a point of the view-space is &quot;visible&quot;, i.e. it is inside the view.\nsetRotation\nRotates the environment around the Position.\nzoomOnPoint\nZooms on a point into the view-space.\ncenter\nPoints the center of the view on the center of the environment.\ngetViewPosition\nGets the Position.\nsetEnvPosition\nSets the position to the view-point corresponding to <code>envPoint<\/code>.\ngetViewPoint\nConverts a point from the env-space to the view-space.\noptimalZoom\nAutomatically sets the zoom rate in order to make the environment entirely visible on the view.\ngetMode\nGets the rendering mode.\ngetEnvPoint\nConverts a point from the view-space to the env-space.\nsetViewPosition\nSets the Position to <code>viewPoint<\/code>.\ngetViewSize\nGets the view's size.\nsetZoom\nChanges the zoom factor.\ngetZoom\nGets the zoom factor.<\/p>\n"
                          }]
                        },
                        "ISlideInputManager": {
                          "ownKey": "ISlideInputManager",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/wormhole/interfaces",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "ISlideInputManager",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/wormhole/interfaces/ISlideInputManager"
                            },
                            "description": "",
                            "title": "ISlideInputManager",
                            "content": "<p><code>ISlideInputManager<\/code> is the base type for any class whose aim is to handle the the sliding of any physical/virtual device/control.<\/p>\n<p>dec\nDecreases the total amount of slides.\ninc\nIncreases the total amount of slides.<\/p>\n"
                          }]
                        },
                        "ZoomManager": {
                          "ownKey": "ZoomManager",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/wormhole/interfaces",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "ZoomManager",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/wormhole/interfaces/ZoomManager"
                            },
                            "description": "",
                            "title": "ZoomManager",
                            "content": "<p>A class that implements the <code>IZoomManager<\/code> interface is able to convert the sliding of any physical/virtual device/control into a positive <code>double<\/code> value that represents a zoom rate.<\/p>\n<p>setZoom\nSets the zoom rate.\ngetZoom\nGets the zoom rate.<\/p>\n"
                          }]
                        },
                        "AngleManager": {
                          "ownKey": "AngleManager",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/wormhole/interfaces",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "AngleManager",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/wormhole/interfaces/AngleManager"
                            },
                            "description": "",
                            "title": "AngleManager",
                            "content": "<p>A class that implements the <code>IAngleManager<\/code> interface is able to convert the sliding of any physical/virtual device/control into a positive <code>double<\/code> value that represents an angle.<\/p>\n<p>getAngle\nGets the angle.<\/p>\n"
                          }]
                        },
                        "PointerSpeed": {
                          "ownKey": "PointerSpeed",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/wormhole/interfaces",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "PointerSpeed",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/wormhole/interfaces/PointerSpeed"
                            },
                            "description": "",
                            "title": "PointerSpeed",
                            "content": "<p>Base type for any pointing device: it provides services to analyze the pointer's movement.<\/p>\n<p>getOldPosition\nGets the pointer's old position.\ngetVariation\nGets the vector [current position - old position].\nsetCurrentPosition\nSets the pointer's current position and, consequently, updates the old one.\ngetCurrentPosition\nGets the pointer's current position.<\/p>\n"
                          }]
                        }
                      },
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/boundary/wormhole",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "interfaces",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/wormhole/interfaces"
                        },
                        "description": "",
                        "title": "it.unibo.alchemist.boundary.wormhole.interfaces",
                        "content": ""
                      }]
                    },
                    "implementation": {
                      "ownKey": "implementation",
                      "childrenPages": {
                        "Wormhole2D": {
                          "ownKey": "Wormhole2D",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/wormhole/implementation",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "Wormhole2D",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/wormhole/implementation/Wormhole2D"
                            },
                            "description": "",
                            "title": "Wormhole2D",
                            "content": "<p>Partial implementation for the interface IWormhole2D.<br> I am considering the particular case of the view as an entity into the screen-space: the y-axis grows on the bottom side of the screen.<init>\nInitializes a new instance directly setting the size of both view and environment, and the offset too.<\/p>\n<p>rotateAroundPoint\n{@inheritDoc}\nisInsideView<\/p>\n<p>setRotation\n{@inheritDoc}\noptimalZoom\n{@inheritDoc}\ngetMode<\/p>\n<p>getEnvPoint\n{@inheritDoc}\nsetViewPosition\n{@inheritDoc}\nsetZoom\n{@inheritDoc}\ngetZoom<\/p>\n<p>zoomOnPoint\n{@inheritDoc}\ncenter<\/p>\n<p>getViewPosition\n{@inheritDoc}\nsetEnvPosition\n{@inheritDoc}\ngetViewPoint\n{@inheritDoc}\ngetViewSize<\/p>\n"
                          }]
                        },
                        "ExponentialZoomManager": {
                          "ownKey": "ExponentialZoomManager",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/wormhole/implementation",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "ExponentialZoomManager",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/wormhole/implementation/ExponentialZoomManager"
                            },
                            "description": "",
                            "title": "ExponentialZoomManager",
                            "content": "<p>An <code>ExpZoomManager<\/code> converts the sliding of any physical/virtual device/control into a zoom rate through an exponential function (in this way I am sure to not see negative values ;-).<br> Zoom = base ^ (amount of slides / normalization value).<init>\nSame of <code>#ExponentialZoomManager(double, double, double)<\/code> but normalization value is 1.\n<init>\nInitialize a new <code>ExpZoomManager<\/code> instance with the parameters in input.\nDEF_BASE\nDEF_BASE = &quot;DEFault BASE&quot;.<br> It is the default base for the exponential function. It is meant to be greater than 1. Currently its value is {@value #DEF_BASE} that seems pretty good to me.\nsetZoom<\/p>\n<p>getZoom<\/p>\n"
                          }]
                        },
                        "LinearZoomManager": {
                          "ownKey": "LinearZoomManager",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/wormhole/implementation",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "LinearZoomManager",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/wormhole/implementation/LinearZoomManager"
                            },
                            "description": "",
                            "title": "LinearZoomManager",
                            "content": "<p>A LinearZoomManager converts the sliding of any physical/virtual device/control into a zoom rate through a linear function.<br> Zoom = amount of slides * rate.<init>\nSame of <code>#LinearZoomManager(double, double, double, double)<\/code> but rate is 1, and minimum and maximum are +/- <code>Double#MAX_VALUE<\/code>.\n<init>\nInitialize a new LinearZoomManager instance with the parameters in input.<\/p>\n<p>setZoom<\/p>\n<p>getZoom<\/p>\n"
                          }]
                        },
                        "AbstractSlideInputManager": {
                          "ownKey": "AbstractSlideInputManager",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/wormhole/implementation",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "AbstractSlideInputManager",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/wormhole/implementation/AbstractSlideInputManager"
                            },
                            "description": "",
                            "title": "AbstractSlideInputManager",
                            "content": "<p><code>ASlideInputManager<\/code> is the base class for any class whose aim is to handle the the sliding of any physical/virtual device/control.<init>\nCreates a new <code>ASlideInputManager<\/code> with the value in input. <br> This is useful if you want to have an initial output.<\/p>\n<p>dec<\/p>\n<p>inc<\/p>\n"
                          }]
                        },
                        "PointerSpeedImpl": {
                          "ownKey": "PointerSpeedImpl",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/wormhole/implementation",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "PointerSpeedImpl",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/wormhole/implementation/PointerSpeedImpl"
                            },
                            "description": "",
                            "title": "PointerSpeedImpl",
                            "content": "<p>Implementation for PointerSpeed interface.<init>\nImplementation for PointerSpeed interface.<\/p>\n<p>getOldPosition<\/p>\n<p>getVariation<\/p>\n<p>setCurrentPosition<\/p>\n<p>getCurrentPosition<\/p>\n"
                          }]
                        },
                        "AngleManagerImpl": {
                          "ownKey": "AngleManagerImpl",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/wormhole/implementation",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "AngleManagerImpl",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/wormhole/implementation/AngleManagerImpl"
                            },
                            "description": "",
                            "title": "AngleManagerImpl",
                            "content": "<p>An <code>AngleManager<\/code> converts the sliding of any physical/virtual device/control into an angle expressed with radians.<init>\nInitializes a new <code>AngleManager<\/code> instance with <code>dUnit = 1<\/code> and <code>dPhase = 0<\/code>.\n<init>\nInitializes a new <code>AngleManager<\/code> instance with <code>dPhase = 0<\/code>.\n<init>\nInitializes a new <code>AngleManager<\/code> with the initial phase and unit in input.\nDEF_DEG_PER_PIXEL\n<code>DEF_DEG_PER_PIXEL<\/code> = &quot;DEFault amount of DEGrees PER PIXEL&quot;.<br> Currently set to <code>3 * 360 / screenWidth<\/code> i.e.: by sliding the mouse through the entire width of the screen you will obtain a 3 rounds rotation.<br> This constant is intended for an implementation that converts mouse motion over x axis into degrees.\ngetAngle<\/p>\n"
                          }]
                        },
                        "DoubleDimension": {
                          "ownKey": "DoubleDimension",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/wormhole/implementation",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "DoubleDimension",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/wormhole/implementation/DoubleDimension"
                            },
                            "description": "",
                            "title": "DoubleDimension",
                            "content": "<p>Implementation of the Dimension2D abstract class with double precision.<init>\nInitializes a new <code>DoubleDimension<\/code> instance with both width and height set to zero.\n<init>\nInitializes a new <code>DoubleDimension<\/code> instance using another Dimension2D object's data.<br> No side effects.\n<init>\nInitializes a new <code>DoubleDimension<\/code> using raw data.\n<init>\nInitializes a new <code>DoubleDimension<\/code> through an array of numbers.<br> d[0] is width, d[1] is height, other elements will be ignored.<\/p>\n<p>getHeight<\/p>\n<p>setSize<\/p>\n<p>getWidth<\/p>\n"
                          }]
                        },
                        "MapWormhole": {
                          "ownKey": "MapWormhole",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/wormhole/implementation",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "MapWormhole",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/wormhole/implementation/MapWormhole"
                            },
                            "description": "",
                            "title": "MapWormhole",
                            "content": "<p>Wormhole used for maps rendering.<init>\nInitializes a new MapWormhole copying the state of the one in input.\nMAX_ZOOM\nMaximum zoom.\nrotateAroundPoint<\/p>\n<p>optimalZoom<\/p>\n<p>getEnvPoint<\/p>\n<p>setViewPosition<\/p>\n<p>setZoom<\/p>\n<p>zoomOnPoint<\/p>\n<p>getViewPosition<\/p>\n<p>setEnvPosition<\/p>\n<p>getViewPoint<\/p>\n"
                          }]
                        },
                        "PointAdapter": {
                          "ownKey": "PointAdapter",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/boundary/wormhole/implementation",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "PointAdapter",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/wormhole/implementation/PointAdapter"
                            },
                            "description": "",
                            "title": "PointAdapter",
                            "content": "<p>Adapts various representations of bidimensional positions.<\/p>\n<p>hashCode<\/p>\n<p>sum<\/p>\n<p>getX<\/p>\n<p>equals<\/p>\n<p>getY<\/p>\n<p>toPoint<\/p>\n<p>toString<\/p>\n<p>toPosition<\/p>\n<p>diff<\/p>\n<p>toPoint2D<\/p>\n<p>from\nBuilds a PointAdapter from coordinates.\nfrom\nBuilds a PointAdapter.\nfrom\nBuilds a PointAdapter.<\/p>\n"
                          }]
                        }
                      },
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/boundary/wormhole",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "implementation",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/wormhole/implementation"
                        },
                        "description": "",
                        "title": "it.unibo.alchemist.boundary.wormhole.implementation",
                        "content": ""
                      }]
                    }
                  }
                },
                "monitors": {
                  "ownKey": "monitors",
                  "childrenPages": {
                    "MapDisplay": {
                      "ownKey": "MapDisplay",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/boundary/monitors",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "MapDisplay",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/monitors/MapDisplay"
                        },
                        "description": "",
                        "title": "MapDisplay",
                        "content": "<p><init><\/p>\n<p>finished<\/p>\n<p>initialized<\/p>\n<p>paint<\/p>\n"
                      }]
                    },
                    "TimeStepMonitor": {
                      "ownKey": "TimeStepMonitor",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/boundary/monitors",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "TimeStepMonitor",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/monitors/TimeStepMonitor"
                        },
                        "description": "",
                        "title": "TimeStepMonitor",
                        "content": "<p><init>\nConstructor.<\/p>\n<p>finished<\/p>\n<p>initialized<\/p>\n<p>stepDone<\/p>\n"
                      }]
                    },
                    "BoundariesDrawer": {
                      "ownKey": "BoundariesDrawer",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/boundary/monitors",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "BoundariesDrawer",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/monitors/BoundariesDrawer"
                        },
                        "description": "",
                        "title": "BoundariesDrawer",
                        "content": "<p>Draws it.unibo.alchemist.model.interfaces.environments.Boundaries.<init>\nDraws it.unibo.alchemist.model.interfaces.environments.Boundaries.<\/p>\n<p>visit<\/p>\n"
                      }]
                    },
                    "NodeTracker": {
                      "ownKey": "NodeTracker",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/boundary/monitors",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "NodeTracker",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/monitors/NodeTracker"
                        },
                        "description": "",
                        "title": "NodeTracker",
                        "content": "<p><init><\/p>\n<p>finished<\/p>\n<p>actionPerformed<\/p>\n<p>initialized<\/p>\n<p>stepDone<\/p>\n"
                      }]
                    },
                    "Generic2DDisplay": {
                      "ownKey": "Generic2DDisplay",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/boundary/monitors",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Generic2DDisplay",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/monitors/Generic2DDisplay"
                        },
                        "description": "",
                        "title": "Generic2DDisplay",
                        "content": "<p>Abstract base-class for each display able a graphically represent a 2D space and simulation.<init>\nInitializes a new display with out redrawing the first step.\n<init>\nInitializes a new display.\nDEFAULT_FRAME_RATE\nThe default frame rate.\nPAUSE_DETECTION_THRESHOLD<\/p>\n<p>setEffectStack<\/p>\n<p>setStep<\/p>\n<p>isRealTime<\/p>\n<p>setDrawLinks<\/p>\n<p>zoomTo<\/p>\n<p>getStep<\/p>\n<p>finished\nOverride to change or add operations to be done after a simulation is concluded.\ninitialized\nDefines what to do when the UI is initialized.\nsetMarkCloserNode<\/p>\n<p>setRealTime<\/p>\n<p>stepDone<\/p>\n"
                      }]
                    },
                    "MoleculeInjectorGUI": {
                      "ownKey": "MoleculeInjectorGUI",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/boundary/monitors",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "MoleculeInjectorGUI",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/monitors/MoleculeInjectorGUI"
                        },
                        "description": "",
                        "title": "MoleculeInjectorGUI",
                        "content": "<p>This class raises a new JPanel which allows to graphically inject a new molecule inside a node (or a group of nodes) or to modify the value of a certain molecule.<init><\/p>\n"
                      }]
                    }
                  },
                  "ownPages": [{
                    "reference": {
                      "path": "it/unibo/alchemist/boundary",
                      "baseUrl": "https://alchemistsimulator.github.io/latest",
                      "fileName": "monitors",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/boundary/monitors"
                    },
                    "description": "",
                    "title": "it.unibo.alchemist.boundary.monitors",
                    "content": ""
                  }]
                }
              }
            },
            "AlchemistUtil": {
              "ownKey": "AlchemistUtil",
              "ownPages": [{
                "reference": {
                  "path": "it/unibo/alchemist",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "AlchemistUtil",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/AlchemistUtil"
                },
                "description": "",
                "title": "AlchemistUtil",
                "content": "<p>Generic utilities.<\/p>\n<p>cast\nPerforms a cast operation, throwing a decent error message in case of failure.\ncast\nPerforms a cast operation, throwing a decent error message in case of failure.\ncast\nPerforms a cast operation, throwing a decent error message in case of failure.<\/p>\n"
              }]
            },
            "cli": {
              "ownKey": "cli",
              "childrenPages": {"CLIMaker": {
                "ownKey": "CLIMaker",
                "ownPages": [{
                  "reference": {
                    "path": "it/unibo/alchemist/cli",
                    "baseUrl": "https://alchemistsimulator.github.io/latest",
                    "fileName": "CLIMaker",
                    "extension": "html",
                    "usePrettyUrl": true,
                    "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/cli/CLIMaker"
                  },
                  "description": "",
                  "title": "CLIMaker",
                  "content": "<p>This support class generates a CLI interface backed by a property file.<\/p>\n<p>getOptions<\/p>\n"
                }]
              }},
              "ownPages": [{
                "reference": {
                  "path": "it/unibo/alchemist",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "cli",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/cli"
                },
                "description": "",
                "title": "it.unibo.alchemist.cli",
                "content": ""
              }]
            },
            "loader": {
              "ownKey": "loader",
              "childrenPages": {
                "variables": {
                  "ownKey": "variables",
                  "childrenPages": {
                    "LinearVariable": {
                      "ownKey": "LinearVariable",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/loader/variables",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "LinearVariable",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/variables/LinearVariable"
                        },
                        "description": "",
                        "title": "LinearVariable",
                        "content": "<p>This class represents a linear variable, namely a variable whose values span linearly between minimum and maximum.<init><\/p>\n<p>getDefault<\/p>\n<p>stream<\/p>\n<p>steps<\/p>\n"
                      }]
                    },
                    "Variable": {
                      "ownKey": "Variable",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/loader/variables",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Variable",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/variables/Variable"
                        },
                        "description": "",
                        "title": "Variable",
                        "content": "<p>A variable simulation value, that provides a range of values for batches, and a default value for single-shot runs.<\/p>\n<p>getDefault<\/p>\n<p>stream<\/p>\n<p>steps<\/p>\n<p>iterator<\/p>\n"
                      }]
                    },
                    "ArbitraryVariable": {
                      "ownKey": "ArbitraryVariable",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/loader/variables",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "ArbitraryVariable",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/variables/ArbitraryVariable"
                        },
                        "description": "",
                        "title": "ArbitraryVariable",
                        "content": "<p>A variable spanning over an arbitrary set of values.<init><\/p>\n<p><init><\/p>\n<p>getDefault<\/p>\n<p>stream<\/p>\n"
                      }]
                    },
                    "JSR223Variable": {
                      "ownKey": "JSR223Variable",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/loader/variables",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "JSR223Variable",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/variables/JSR223Variable"
                        },
                        "description": "",
                        "title": "JSR223Variable",
                        "content": "<p>This variable loads any <a href=\"http://archive.fo/PGdk8\">JSR-233<\/a> language available in the classpath.<init>\nbuilds a new JSR223Variable given a language name and a script.\nlanguage\ncan be the name of the language, the file extension, or its mime type\nformula\nthe script that will get interpreted\ngetWith\nGiven the current controlled variables, computes the current values for\nthis variable.<\/p>\n"
                      }]
                    },
                    "GeometricVariable": {
                      "ownKey": "GeometricVariable",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/loader/variables",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "GeometricVariable",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/variables/GeometricVariable"
                        },
                        "description": "",
                        "title": "GeometricVariable",
                        "content": "<p>A variable ranging geometrically (exponentially) in a range. Ideal for log-scale comparisons. e.g. a GeometricVariable with minimum = 1, maximum = 100 and samples = 5 will range over [1, ~3.16, 10, ~31.62 100]. Both min and max must be strictly bigger than 0.<init><\/p>\n<p>getDefault<\/p>\n<p>stream<\/p>\n<p>toString<\/p>\n"
                      }]
                    },
                    "NumericConstant": {
                      "ownKey": "NumericConstant",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/loader/variables",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "NumericConstant",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/variables/NumericConstant"
                        },
                        "description": "",
                        "title": "NumericConstant",
                        "content": "<p>A numeric constant.<init><\/p>\n<p>getWith<\/p>\n"
                      }]
                    },
                    "PrintableVariable": {
                      "ownKey": "PrintableVariable",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/loader/variables",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "PrintableVariable",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/variables/PrintableVariable"
                        },
                        "description": "",
                        "title": "PrintableVariable",
                        "content": "<p>A variable stub, with a default <code>#toString()<\/code> method.<init>\nA variable stub, with a default <code>#toString()<\/code> method.<\/p>\n<p>toString\n{@inheritDoc}<\/p>\n"
                      }]
                    },
                    "Flag": {
                      "ownKey": "Flag",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/loader/variables",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Flag",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/variables/Flag"
                        },
                        "description": "",
                        "title": "Flag",
                        "content": "<p>This variable is a flag. Being booleans not a valid data type in charts, this variable just outputs 0 and 1. This is equivalent to a LinearVariable with two samples ranging from 0 to 1.<init><\/p>\n<p>getDefault<\/p>\n<p>stream<\/p>\n"
                      }]
                    },
                    "DependentVariable": {
                      "ownKey": "DependentVariable",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/loader/variables",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "DependentVariable",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/variables/DependentVariable"
                        },
                        "description": "",
                        "title": "DependentVariable",
                        "content": "<p>A dependent variable, namely a variable whose value can be obtained given the values of other variables.<\/p>\n<p>getWith\nGiven the current controlled variables, computes the current values for this variable.<\/p>\n"
                      }]
                    }
                  },
                  "ownPages": [{
                    "reference": {
                      "path": "it/unibo/alchemist/loader",
                      "baseUrl": "https://alchemistsimulator.github.io/latest",
                      "fileName": "variables",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/variables"
                    },
                    "description": "",
                    "title": "it.unibo.alchemist.loader.variables",
                    "content": ""
                  }]
                },
                "shapes": {
                  "ownKey": "shapes",
                  "childrenPages": {
                    "Circle": {
                      "ownKey": "Circle",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/loader/shapes",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Circle",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/shapes/Circle"
                        },
                        "description": "",
                        "title": "Circle",
                        "content": "<p>A circle.<init><\/p>\n"
                      }]
                    },
                    "Shape": {
                      "ownKey": "Shape",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/loader/shapes",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Shape",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/shapes/Shape"
                        },
                        "description": "",
                        "title": "Shape",
                        "content": "<p>A Shape, representing an partition of the space where a Position may lie in.<\/p>\n<p>contains<\/p>\n"
                      }]
                    },
                    "Rectangle": {
                      "ownKey": "Rectangle",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/loader/shapes",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Rectangle",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/shapes/Rectangle"
                        },
                        "description": "",
                        "title": "Rectangle",
                        "content": "<p>A Rectangle.<init><\/p>\n"
                      }]
                    },
                    "Abstract2DShape": {
                      "ownKey": "Abstract2DShape",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/loader/shapes",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Abstract2DShape",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/shapes/Abstract2DShape"
                        },
                        "description": "",
                        "title": "Abstract2DShape",
                        "content": "<p>A bidimensional Alchemist Shape that relies on AWT java.awt.Shape.<\/p>\n<p>contains<\/p>\n<p>toString\n{@inheritDoc}<\/p>\n"
                      }]
                    }
                  },
                  "ownPages": [{
                    "reference": {
                      "path": "it/unibo/alchemist/loader",
                      "baseUrl": "https://alchemistsimulator.github.io/latest",
                      "fileName": "shapes",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/shapes"
                    },
                    "description": "",
                    "title": "it.unibo.alchemist.loader.shapes",
                    "content": ""
                  }]
                },
                "displacements": {
                  "ownKey": "displacements",
                  "childrenPages": {
                    "Circle": {
                      "ownKey": "Circle",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/loader/displacements",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Circle",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/displacements/Circle"
                        },
                        "description": "",
                        "title": "Circle",
                        "content": "<p><init><\/p>\n"
                      }]
                    },
                    "FromGPSTrace": {
                      "ownKey": "FromGPSTrace",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/loader/displacements",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "FromGPSTrace",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/displacements/FromGPSTrace"
                        },
                        "description": "",
                        "title": "FromGPSTrace",
                        "content": "<p>Distributes nodes in the first positions of it.unibo.alchemist.model.interfaces.GPSTrace.<init><\/p>\n<p>stream<\/p>\n"
                      }]
                    },
                    "Grid": {
                      "ownKey": "Grid",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/loader/displacements",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Grid",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/displacements/Grid"
                        },
                        "description": "",
                        "title": "Grid",
                        "content": "<p>A (possibly randomized) grid of nodes.<init>\nA (possibly randomized) grid of nodes.<\/p>\n<p>stream<\/p>\n<p>shuffled\n<a href=\"https://bit.ly/33Z3xFu\">Fisher\u2013Yates shuffle algorithm<\/a>\nusing Apache random number generator.\nMore information <a href=\"https://en.wikipedia.org/wiki/Fisher-Yates_shuffle\">on Wikipedia<\/a>.<\/p>\n"
                      }]
                    },
                    "Rectangle": {
                      "ownKey": "Rectangle",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/loader/displacements",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Rectangle",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/displacements/Rectangle"
                        },
                        "description": "",
                        "title": "Rectangle",
                        "content": "<p><init><\/p>\n"
                      }]
                    },
                    "Point": {
                      "ownKey": "Point",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/loader/displacements",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Point",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/displacements/Point"
                        },
                        "description": "",
                        "title": "Point",
                        "content": "<p>A single node in a single point.<init><\/p>\n<p>stream<\/p>\n"
                      }]
                    },
                    "CloseToAlreadyDisplaced": {
                      "ownKey": "CloseToAlreadyDisplaced",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/loader/displacements",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "CloseToAlreadyDisplaced",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/displacements/CloseToAlreadyDisplaced"
                        },
                        "description": "",
                        "title": "CloseToAlreadyDisplaced",
                        "content": "<p>This Displacement places new nodes in the proximity of those already included in the environment.\nBehaviour if there are no nodes already inserted is undefined.<init>\nThis Displacement places new nodes in the proximity of those already included in the environment.\nBehaviour if there are no nodes already inserted is undefined.\nsources<\/p>\n<p>shuffled\n<a href=\"https://bit.ly/33Z3xFu\">Fisher\u2013Yates shuffle algorithm<\/a>\nusing Apache random number generator.\nMore information <a href=\"https://en.wikipedia.org/wiki/Fisher-Yates_shuffle\">on Wikipedia<\/a>.<\/p>\n"
                      }]
                    },
                    "Displacement": {
                      "ownKey": "Displacement",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/loader/displacements",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Displacement",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/displacements/Displacement"
                        },
                        "description": "",
                        "title": "Displacement",
                        "content": "<p>stream<\/p>\n<p>iterator<\/p>\n"
                      }]
                    },
                    "AbstractRandomDisplacement": {
                      "ownKey": "AbstractRandomDisplacement",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/loader/displacements",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "AbstractRandomDisplacement",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/displacements/AbstractRandomDisplacement"
                        },
                        "description": "",
                        "title": "AbstractRandomDisplacement",
                        "content": "<p><init><\/p>\n<p>environment\nthe Environment\nrandomGenerator\nthe <a href=\"#\">RandomGenerator<\/a>\nnodeCount\nthe number of nodes\nstream<\/p>\n<p>makePosition\nBuilds a position, relying on the internal Environment.\nrandomDouble<\/p>\n<p>randomDouble<\/p>\n<p>randomInt<\/p>\n<p>indexToPosition<\/p>\n<p>shuffled\n<a href=\"https://bit.ly/33Z3xFu\">Fisher\u2013Yates shuffle algorithm<\/a>\nusing Apache random number generator.\nMore information <a href=\"https://en.wikipedia.org/wiki/Fisher-Yates_shuffle\">on Wikipedia<\/a>.<\/p>\n"
                      }]
                    },
                    "GeometricGradientRectangle": {
                      "ownKey": "GeometricGradientRectangle",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/loader/displacements",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "GeometricGradientRectangle",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/displacements/GeometricGradientRectangle"
                        },
                        "description": "",
                        "title": "GeometricGradientRectangle",
                        "content": "<p>Distributes nodes geometrically within a rectangular shape.<init>\nUse this constructor to displace multiple groups of devices with exponentially varied density along an axis.\n<init>\nUse this constructor to displace devices with an exponentially varied density along an axis.<\/p>\n"
                      }]
                    },
                    "AbstractCloseTo": {
                      "ownKey": "AbstractCloseTo",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/loader/displacements",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "AbstractCloseTo",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/displacements/AbstractCloseTo"
                        },
                        "description": "",
                        "title": "AbstractCloseTo",
                        "content": "<p>A generic Displacement that displaces a certain nodeCount of nodes in the proximity of a number of sources.\nHigher variance implies higher dispersion.\nSubclasses must identify the sources<init>\nA generic Displacement that displaces a certain nodeCount of nodes in the proximity of a number of sources.\nHigher variance implies higher dispersion.\nSubclasses must identify the sources\nsources<\/p>\n<p>randomGenerator<\/p>\n<p>environment<\/p>\n<p>nodeCount<\/p>\n<p>variance<\/p>\n<p>covarianceMatrix<\/p>\n<p>stream<\/p>\n<p>shuffled\n<a href=\"https://bit.ly/33Z3xFu\">Fisher\u2013Yates shuffle algorithm<\/a>\nusing Apache random number generator.\nMore information <a href=\"https://en.wikipedia.org/wiki/Fisher-Yates_shuffle\">on Wikipedia<\/a>.<\/p>\n"
                      }]
                    },
                    "Point2D": {
                      "ownKey": "Point2D",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/loader/displacements",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Point2D",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/displacements/Point2D"
                        },
                        "description": "",
                        "title": "Point2D",
                        "content": "<p>Alias for using pairs as bidimensional points.<\/p>\n"
                      }]
                    },
                    "CloseToGPSTrace": {
                      "ownKey": "CloseToGPSTrace",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/loader/displacements",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "CloseToGPSTrace",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/displacements/CloseToGPSTrace"
                        },
                        "description": "",
                        "title": "CloseToGPSTrace",
                        "content": "<p>This Displacement displaces nodes in the proximity of a GPS trace.\nGiven a time interval from some time to another,\nit creates a TraceLoader, then uses the points in the interval to generate the sources for a\nGaussian bivariate function and uses its probability density to deploy.\nHigher variance spreads nodes farther away from the trace with higher probability.<init>\nThis Displacement displaces nodes in the proximity of a GPS trace.\nGiven a time interval from some time to another,\nit creates a TraceLoader, then uses the points in the interval to generate the sources for a\nGaussian bivariate function and uses its probability density to deploy.\nHigher variance spreads nodes farther away from the trace with higher probability.\nsources<\/p>\n<p>to<\/p>\n<p>shuffled\n<a href=\"https://bit.ly/33Z3xFu\">Fisher\u2013Yates shuffle algorithm<\/a>\nusing Apache random number generator.\nMore information <a href=\"https://en.wikipedia.org/wiki/Fisher-Yates_shuffle\">on Wikipedia<\/a>.<\/p>\n"
                      }]
                    },
                    "Polygon": {
                      "ownKey": "Polygon",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/loader/displacements",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Polygon",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/displacements/Polygon"
                        },
                        "description": "",
                        "title": "Polygon",
                        "content": "<p>Creates a new Polygon with the given points.<init>\nCreates a new Polygon with the given points.\npolygon\nThe polygon in which positions are generated.\nbounds\nThe rectangular bounds of the polygon.\nisOnMaps\nTrue if this environment works with GeoPosition.\ntoPosition\nConverts a Point2D to a P.\nindexToPosition<\/p>\n<p>moveTo\nMoves the path to the specified Position2D.\nlineTo\nAdds a line to the path, connecting it to the specified Position2D.\ncontains\nChecks if a Position2D is inside the Polygon.\nshuffled\n<a href=\"https://bit.ly/33Z3xFu\">Fisher\u2013Yates shuffle algorithm<\/a>\nusing Apache random number generator.\nMore information <a href=\"https://en.wikipedia.org/wiki/Fisher-Yates_shuffle\">on Wikipedia<\/a>.<\/p>\n"
                      }]
                    },
                    "SpecificPositions": {
                      "ownKey": "SpecificPositions",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/loader/displacements",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "SpecificPositions",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/displacements/SpecificPositions"
                        },
                        "description": "",
                        "title": "SpecificPositions",
                        "content": "<p>Given an environment and a list of list of numbers, it creates a list of the right position type for the environment.<init>\nGiven an environment and a list of list of numbers, it creates a list of the right position type for the environment.<\/p>\n<p>stream<\/p>\n<p>shuffled\n<a href=\"https://bit.ly/33Z3xFu\">Fisher\u2013Yates shuffle algorithm<\/a>\nusing Apache random number generator.\nMore information <a href=\"https://en.wikipedia.org/wiki/Fisher-Yates_shuffle\">on Wikipedia<\/a>.<\/p>\n"
                      }]
                    }
                  },
                  "ownPages": [{
                    "reference": {
                      "path": "it/unibo/alchemist/loader",
                      "baseUrl": "https://alchemistsimulator.github.io/latest",
                      "fileName": "displacements",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/displacements"
                    },
                    "description": "",
                    "title": "it.unibo.alchemist.loader.displacements",
                    "content": ""
                  }]
                },
                "IllegalAlchemistYAMLException": {
                  "ownKey": "IllegalAlchemistYAMLException",
                  "ownPages": [{
                    "reference": {
                      "path": "it/unibo/alchemist/loader",
                      "baseUrl": "https://alchemistsimulator.github.io/latest",
                      "fileName": "IllegalAlchemistYAMLException",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/IllegalAlchemistYAMLException"
                    },
                    "description": "",
                    "title": "IllegalAlchemistYAMLException",
                    "content": "<p>This exception is thrown when the Alchemist YAML does not conform to the specification.<init><\/p>\n<p><init><\/p>\n"
                  }]
                },
                "Loader": {
                  "ownKey": "Loader",
                  "ownPages": [{
                    "reference": {
                      "path": "it/unibo/alchemist/loader",
                      "baseUrl": "https://alchemistsimulator.github.io/latest",
                      "fileName": "Loader",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/Loader"
                    },
                    "description": "",
                    "title": "Loader",
                    "content": "<p>An entity which is able to produce an Alchemist Environment, possibly with user defined variable values.<\/p>\n<p>getDefault<\/p>\n<p>getVariables<\/p>\n<p>getWith<\/p>\n<p>getConstants\nAllows to access the currently defined constants, namely variables defined in the simulation file whose value is constant and does not depend on the value of any free variable (directly or indirectly).\ngetDependencies<\/p>\n<p>getDependentVariables\nAllows to access the currently defined dependent variable (those variables whose value can be determined given a valid set of values for the free variables).\ngetDataExtractors<\/p>\n"
                  }]
                },
                "YamlLoader": {
                  "ownKey": "YamlLoader",
                  "ownPages": [{
                    "reference": {
                      "path": "it/unibo/alchemist/loader",
                      "baseUrl": "https://alchemistsimulator.github.io/latest",
                      "fileName": "YamlLoader",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/YamlLoader"
                    },
                    "description": "",
                    "title": "YamlLoader",
                    "content": "<p>Loads a properly formatted YAML file and provides method for instancing a batch of scenarios.<init><\/p>\n<p><init><\/p>\n<p><init><\/p>\n<p>getVariables<\/p>\n<p>getDefault<\/p>\n<p>getWith<\/p>\n<p>getConstants<\/p>\n<p>getDependencies<\/p>\n<p>getDependentVariables<\/p>\n<p>getDataExtractors<\/p>\n"
                  }]
                },
                "export": {
                  "ownKey": "export",
                  "childrenPages": {
                    "ExecutionTime": {
                      "ownKey": "ExecutionTime",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/loader/export",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "ExecutionTime",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/export/ExecutionTime"
                        },
                        "description": "",
                        "title": "ExecutionTime",
                        "content": "<p>An extractor which provides informations about the running time of the simulation.<init>\nAn extractor which provides informations about the running time of the simulation.<\/p>\n<p>extractData<\/p>\n<p>getNames<\/p>\n"
                      }]
                    },
                    "statistic": {
                      "ownKey": "statistic",
                      "childrenPages": {"CountDistinct": {
                        "ownKey": "CountDistinct",
                        "ownPages": [{
                          "reference": {
                            "path": "it/unibo/alchemist/loader/export/statistic",
                            "baseUrl": "https://alchemistsimulator.github.io/latest",
                            "fileName": "CountDistinct",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/export/statistic/CountDistinct"
                          },
                          "description": "",
                          "title": "CountDistinct",
                          "content": "<p>Counts the number of distinct entries.<init>\nCounts the number of distinct entries.<\/p>\n<p>evaluate<\/p>\n<p>copy<\/p>\n<p>toString<\/p>\n"
                        }]
                      }},
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/loader/export",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "statistic",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/export/statistic"
                        },
                        "description": "",
                        "title": "it.unibo.alchemist.loader.export.statistic",
                        "content": ""
                      }]
                    },
                    "StatUtil": {
                      "ownKey": "StatUtil",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/loader/export",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "StatUtil",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/export/StatUtil"
                        },
                        "description": "",
                        "title": "StatUtil",
                        "content": "<p>Utility to translate statistics names into a UnivariateStatistic.<\/p>\n<p>makeUnivariateStatistic<\/p>\n"
                      }]
                    },
                    "MeanSquaredError": {
                      "ownKey": "MeanSquaredError",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/loader/export",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "MeanSquaredError",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/export/MeanSquaredError"
                        },
                        "description": "",
                        "title": "MeanSquaredError",
                        "content": "<p>Exports the Mean Squared Error for the concentration of some molecule, given another molecule that carries the correct result. The correct value is extracted from every node, then the provided UnivariateStatistic is applied to get a single, global correct value. Then, the actual value is extracted from every node, its value is compared (subtracted) to the computed correct value, it gets squared, and then logged.<init><\/p>\n<p>extractData<\/p>\n<p>getNames<\/p>\n"
                      }]
                    },
                    "MoleculeReader": {
                      "ownKey": "MoleculeReader",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/loader/export",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "MoleculeReader",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/export/MoleculeReader"
                        },
                        "description": "",
                        "title": "MoleculeReader",
                        "content": "<p>Reads the value of a molecule and logs it.<init><\/p>\n<p>extractData<\/p>\n<p>getNames<\/p>\n"
                      }]
                    },
                    "NumberOfNodes": {
                      "ownKey": "NumberOfNodes",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/loader/export",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "NumberOfNodes",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/export/NumberOfNodes"
                        },
                        "description": "",
                        "title": "NumberOfNodes",
                        "content": "<p>Logs the number of nodes in the scenario.<init>\nLogs the number of nodes in the scenario.<\/p>\n<p>extractData<\/p>\n<p>getNames<\/p>\n"
                      }]
                    },
                    "Time": {
                      "ownKey": "Time",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/loader/export",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Time",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/export/Time"
                        },
                        "description": "",
                        "title": "Time",
                        "content": "<p>Exports a column with the current time.<init>\nExports a column with the current time.<\/p>\n<p>extractData<\/p>\n<p>getNames<\/p>\n"
                      }]
                    },
                    "filters": {
                      "ownKey": "filters",
                      "childrenPages": {"CommonFilters": {
                        "ownKey": "CommonFilters",
                        "ownPages": [{
                          "reference": {
                            "path": "it/unibo/alchemist/loader/export/filters",
                            "baseUrl": "https://alchemistsimulator.github.io/latest",
                            "fileName": "CommonFilters",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/export/filters/CommonFilters"
                          },
                          "description": "",
                          "title": "CommonFilters",
                          "content": "<p>Utilities with the most common filtering operations on values.<\/p>\n<p>getFilteringPolicy<\/p>\n<p>fromString<\/p>\n"
                        }]
                      }},
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/loader/export",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "filters",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/export/filters"
                        },
                        "description": "",
                        "title": "it.unibo.alchemist.loader.export.filters",
                        "content": ""
                      }]
                    },
                    "Extractor": {
                      "ownKey": "Extractor",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/loader/export",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Extractor",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/export/Extractor"
                        },
                        "description": "",
                        "title": "Extractor",
                        "content": "<p>An object that is able to extract numeric informations from an Alchemist Environment, given the current it.unibo.alchemist.core.interfaces.Simulation Time, the last Reaction executed and the current simulation step.<\/p>\n<p>extractData\nExtracts numeric properties from an environment.\ngetNames<\/p>\n"
                      }]
                    },
                    "Exporter": {
                      "ownKey": "Exporter",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/loader/export",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Exporter",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/export/Exporter"
                        },
                        "description": "",
                        "title": "Exporter",
                        "content": "<p>Writes on file data provided by a number of Extractors. Produces a CSV with '#' as comment character. Even though this class implements OutputMonitor, it is not java.io.Serializable.<init><\/p>\n<p>finished<\/p>\n<p>initialized<\/p>\n<p>stepDone<\/p>\n"
                      }]
                    },
                    "FilteringPolicy": {
                      "ownKey": "FilteringPolicy",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/loader/export",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "FilteringPolicy",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/export/FilteringPolicy"
                        },
                        "description": "",
                        "title": "FilteringPolicy",
                        "content": "<p>Expresses a flat map operation over a double.<\/p>\n<p>apply\nFrom a single value, builds a stream of values.<\/p>\n"
                      }]
                    },
                    "EnvPerformanceStats": {
                      "ownKey": "EnvPerformanceStats",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/loader/export",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "EnvPerformanceStats",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/export/EnvPerformanceStats"
                        },
                        "description": "",
                        "title": "EnvPerformanceStats",
                        "content": "<p>Exports the stats about the performance of the environment.<init>\nExports the stats about the performance of the environment.<\/p>\n<p>extractData<\/p>\n<p>getNames<\/p>\n"
                      }]
                    }
                  },
                  "ownPages": [{
                    "reference": {
                      "path": "it/unibo/alchemist/loader",
                      "baseUrl": "https://alchemistsimulator.github.io/latest",
                      "fileName": "export",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader/export"
                    },
                    "description": "",
                    "title": "it.unibo.alchemist.loader.export",
                    "content": ""
                  }]
                }
              },
              "ownPages": [{
                "reference": {
                  "path": "it/unibo/alchemist",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "loader",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/loader"
                },
                "description": "",
                "title": "it.unibo.alchemist.loader",
                "content": ""
              }]
            },
            "kotlin": {
              "ownKey": "kotlin",
              "ownPages": [{
                "reference": {
                  "path": "it/unibo/alchemist",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "kotlin",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/kotlin"
                },
                "description": "",
                "title": "it.unibo.alchemist.kotlin",
                "content": "<p>unfold\nThe opposite of <a href=\"#\">fold<\/a>.\nplus\nPlus operator for Time.\nminus\nMinus operator for Time.<\/p>\n"
              }]
            },
            "launch": {
              "ownKey": "launch",
              "childrenPages": {
                "SimulationLauncher": {
                  "ownKey": "SimulationLauncher",
                  "ownPages": [{
                    "reference": {
                      "path": "it/unibo/alchemist/launch",
                      "baseUrl": "https://alchemistsimulator.github.io/latest",
                      "fileName": "SimulationLauncher",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/launch/SimulationLauncher"
                    },
                    "description": "",
                    "title": "SimulationLauncher",
                    "content": "<p>A launcher stub for simulation execution.\nTakes care of creating a Loader,\nand provides support functions for generating simulations and computing the possible parameters configurations.<init>\nA launcher stub for simulation execution.\nTakes care of creating a Loader,\nand provides support functions for generating simulations and computing the possible parameters configurations.<\/p>\n<p>validate\nGiven the currentOptions, decides whether or not this Launcher is executable.\nlaunch\nActually gets the job done by performing the requested operations.\nlaunch\nLaunches a simulation using the provided loader and option parameters.\ncartesianProductOf<\/p>\n<p>prepareSimulation<\/p>\n<p>additionalValidation\nAllows subclasses to perform further checks before getting executed. Defaults to simply return Validation.OK<\/p>\n"
                  }]
                },
                "Validation": {
                  "ownKey": "Validation",
                  "childrenPages": {
                    "OK": {
                      "ownKey": "OK",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/launch/Validation",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "OK",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/launch/Validation/OK"
                        },
                        "description": "",
                        "title": "OK",
                        "content": "<p>The Launcher can run with some priority.<init>\nThe Launcher can run with some priority.\npriority<\/p>\n"
                      }]
                    },
                    "Invalid": {
                      "ownKey": "Invalid",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/launch/Validation",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Invalid",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/launch/Validation/Invalid"
                        },
                        "description": "",
                        "title": "Invalid",
                        "content": "<p>The Launcher can't run and provides a reason.<init>\nThe Launcher can't run and provides a reason.\nreason<\/p>\n"
                      }]
                    }
                  },
                  "ownPages": [{
                    "reference": {
                      "path": "it/unibo/alchemist/launch",
                      "baseUrl": "https://alchemistsimulator.github.io/latest",
                      "fileName": "Validation",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/launch/Validation"
                    },
                    "description": "",
                    "title": "Validation",
                    "content": "<p>Result of the validation of a launcher.<\/p>\n"
                  }]
                },
                "DistributedExecution": {
                  "ownKey": "DistributedExecution",
                  "ownPages": [{
                    "reference": {
                      "path": "it/unibo/alchemist/launch",
                      "baseUrl": "https://alchemistsimulator.github.io/latest",
                      "fileName": "DistributedExecution",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/launch/DistributedExecution"
                    },
                    "description": "",
                    "title": "DistributedExecution",
                    "content": "<p>Launches a simulation set on a cluster of Alchemist nodes running in server mode.\nname\nLauncher name.\nadditionalValidation\nAllows subclasses to perform further checks before getting executed. Defaults to simply return Validation.OK\nlaunch\nLaunches a simulation using the provided loader and option parameters.<\/p>\n"
                  }]
                },
                "SingleRunSwingUI": {
                  "ownKey": "SingleRunSwingUI",
                  "ownPages": [{
                    "reference": {
                      "path": "it/unibo/alchemist/launch",
                      "baseUrl": "https://alchemistsimulator.github.io/latest",
                      "fileName": "SingleRunSwingUI",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/launch/SingleRunSwingUI"
                    },
                    "description": "",
                    "title": "SingleRunSwingUI",
                    "content": "<p>Launches a Swing GUI meant to be used for a single simulation run.\nname\nLauncher name.\nadditionalValidation\nAllows subclasses to perform further checks before getting executed. Defaults to simply return Validation.OK\nlaunch\nLaunches a simulation using the provided loader and option parameters.<\/p>\n"
                  }]
                },
                "Priority": {
                  "ownKey": "Priority",
                  "childrenPages": {
                    "High": {
                      "ownKey": "High",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/launch/Priority",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "High",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/launch/Priority/High"
                        },
                        "description": "",
                        "title": "High",
                        "content": "<p>The loader overrides the behaviour of the loaders provided by default, for the same options.\nIt must specify a reason.<init>\nThe loader overrides the behaviour of the loaders provided by default, for the same options.\nIt must specify a reason.\nreason<\/p>\n"
                      }]
                    },
                    "Fallback": {
                      "ownKey": "Fallback",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/launch/Priority",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Fallback",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/launch/Priority/Fallback"
                        },
                        "description": "",
                        "title": "Fallback",
                        "content": "<p>A low priority, indicating that the Launcher may run, but it will ignore some options,\nand other launchers will be preferred. It must emit a warning.<init>\nA low priority, indicating that the Launcher may run, but it will ignore some options,\nand other launchers will be preferred. It must emit a warning.\nwarning<\/p>\n"
                      }]
                    },
                    "Normal": {
                      "ownKey": "Normal",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/launch/Priority",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Normal",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/launch/Priority/Normal"
                        },
                        "description": "",
                        "title": "Normal",
                        "content": "<p>Default priority, to be returned when the requested options fit the expected configuration.<\/p>\n"
                      }]
                    }
                  },
                  "ownPages": [{
                    "reference": {
                      "path": "it/unibo/alchemist/launch",
                      "baseUrl": "https://alchemistsimulator.github.io/latest",
                      "fileName": "Priority",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/launch/Priority"
                    },
                    "description": "",
                    "title": "Priority",
                    "content": "<p>Defines the likelihood that the configuration is compatible with a Launcher.<\/p>\n<p>compareTo<\/p>\n<p>toString<\/p>\n"
                  }]
                },
                "Launcher": {
                  "ownKey": "Launcher",
                  "ownPages": [{
                    "reference": {
                      "path": "it/unibo/alchemist/launch",
                      "baseUrl": "https://alchemistsimulator.github.io/latest",
                      "fileName": "Launcher",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/launch/Launcher"
                    },
                    "description": "",
                    "title": "Launcher",
                    "content": "<p>An entity with a name that can take responsibility for performing an Alchemist run, given the current\nAlchemistExecutionOptions.\nname\nLauncher name.\nvalidate\nGiven the currentOptions, decides whether or not this Launcher is executable.\ninvoke\nActual execution. Implementors are <b>not<\/b> supposed to override this behaviour, although they can.\nThe default implementation performs validation, and if successful calls launch.\nOtherwise, throws an <a href=\"http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalStateException.html\">IllegalStateException<\/a>.\nlaunch\nActually gets the job done by performing the requested operations.<\/p>\n"
                  }]
                },
                "IgniteServerLauncher": {
                  "ownKey": "IgniteServerLauncher",
                  "ownPages": [{
                    "reference": {
                      "path": "it/unibo/alchemist/launch",
                      "baseUrl": "https://alchemistsimulator.github.io/latest",
                      "fileName": "IgniteServerLauncher",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/launch/IgniteServerLauncher"
                    },
                    "description": "",
                    "title": "IgniteServerLauncher",
                    "content": "<p>Launches a service waiting for simulations to be sent over the network.\nname\nLauncher name.\nvalidate\nGiven the currentOptions, decides whether or not this Launcher is executable.\nlaunch\nActually gets the job done by performing the requested operations.<\/p>\n"
                  }]
                },
                "HeadlessSimulationLauncher": {
                  "ownKey": "HeadlessSimulationLauncher",
                  "ownPages": [{
                    "reference": {
                      "path": "it/unibo/alchemist/launch",
                      "baseUrl": "https://alchemistsimulator.github.io/latest",
                      "fileName": "HeadlessSimulationLauncher",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/launch/HeadlessSimulationLauncher"
                    },
                    "description": "",
                    "title": "HeadlessSimulationLauncher",
                    "content": "<p>Executes simulations locally in a headless environment.\nname\nLauncher name.\nadditionalValidation\nAllows subclasses to perform further checks before getting executed. Defaults to simply return Validation.OK\nlaunch\nLaunches a simulation using the provided loader and option parameters.<\/p>\n"
                  }]
                },
                "AbstractLauncher": {
                  "ownKey": "AbstractLauncher",
                  "ownPages": [{
                    "reference": {
                      "path": "it/unibo/alchemist/launch",
                      "baseUrl": "https://alchemistsimulator.github.io/latest",
                      "fileName": "AbstractLauncher",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/launch/AbstractLauncher"
                    },
                    "description": "",
                    "title": "AbstractLauncher",
                    "content": "<p>Provides utility functions for Launcher implementors.<init>\nProvides utility functions for Launcher implementors.<\/p>\n<p>incompatibleWith\nCreates a Validation.Invalid expliciting what is the option this Launcher is incompatible with.\nrequires\nCreates a Validation.Invalid expliciting which option is required to run this Launcher.\ntoString<\/p>\n"
                  }]
                }
              },
              "ownPages": [{
                "reference": {
                  "path": "it/unibo/alchemist",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "launch",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/launch"
                },
                "description": "",
                "title": "it.unibo.alchemist.launch",
                "content": ""
              }]
            },
            "expressions": {
              "ownKey": "expressions",
              "childrenPages": {
                "interfaces": {
                  "ownKey": "interfaces",
                  "childrenPages": {
                    "ITreeNode": {
                      "ownKey": "ITreeNode",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/expressions/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "ITreeNode",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/expressions/interfaces/ITreeNode"
                        },
                        "description": "",
                        "title": "ITreeNode",
                        "content": "<p>Represents an interface for node of the Tree class.<\/p>\n<p>toHashString\nSimilar to toString(), but returns a HashString.\ngetLeftChild<\/p>\n<p>getRightChild<\/p>\n<p>getType<\/p>\n<p>getValue<\/p>\n<p>getData<\/p>\n<p>getNumberOfChildren<\/p>\n"
                      }]
                    },
                    "IExpression": {
                      "ownKey": "IExpression",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/expressions/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "IExpression",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/expressions/interfaces/IExpression"
                        },
                        "description": "",
                        "title": "IExpression",
                        "content": "<p>getRootNodeType<\/p>\n<p>syntacticMatch\nRuns a syntactic match against the e.\ngetAST<\/p>\n<p>getRootNode<\/p>\n<p>getRightChildren<\/p>\n<p>getLeftChildren<\/p>\n<p>updateMatchedVar<\/p>\n<p>calculate<\/p>\n<p>mayMatch\nThis match method test whether or not two expressions might match. It can be used to evaluate dependencies in a general fashion, it does not check if all the relations are satisfied (e.g. if applying the comparators) but makes a sort of &quot;type checking&quot;. If you want to compare two templates, this is the way to go.\ngetRootNodeData<\/p>\n<p>matches\nTries to match this expression with expr. The matching rules are: (i) a variable matches everything; (ii) a constant value matches an identical constant value; (iii) a number matches an identical number or an operator, (iv) operators match everything but constants, (v) comparators match numbers and operators (verifying the values); (vi) expr type can't be comparator; (vii) add and rem operators work only with lists.<\/p>\n"
                      }]
                    },
                    "ITree": {
                      "ownKey": "ITree",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/expressions/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "ITree",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/expressions/interfaces/ITree"
                        },
                        "description": "",
                        "title": "ITree",
                        "content": "<p>Represents a Tree of Objects(Node) of generic type T. The Tree is represented as a single rootElement which points to a List&gt; of children. There is no restriction on the number of children that a particular node may have. This Tree provides a method to serialize the Tree into a List by doing a pre-order traversal.<\/p>\n<p>evaluation\nThis evaluates the expression. If the matches map contains values which are not instanced, and the expression value cannot consequently be computed, 0d is returned.\ngetRoot\nReturn the root Node of the tree.\ntoHashString\nSimilar to toString(), but returns a HashString.\nassignVarValue\nThis method substitutes variables present in matches map with their values. It must involve only node of Typ=Var. The method must also recognize the values type stored in the map (they can be Const or Num).<\/p>\n"
                      }]
                    }
                  },
                  "ownPages": [{
                    "reference": {
                      "path": "it/unibo/alchemist/expressions",
                      "baseUrl": "https://alchemistsimulator.github.io/latest",
                      "fileName": "interfaces",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/expressions/interfaces"
                    },
                    "description": "",
                    "title": "it.unibo.alchemist.expressions.interfaces",
                    "content": ""
                  }]
                },
                "parser": {
                  "ownKey": "parser",
                  "childrenPages": {
                    "ExpTokenManager": {
                      "ownKey": "ExpTokenManager",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/expressions/parser",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "ExpTokenManager",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/expressions/parser/ExpTokenManager"
                        },
                        "description": "",
                        "title": "ExpTokenManager",
                        "content": "<p>Token Manager. This class was automatically generated by JavaCC, only few manual fixes added.<init>\nConstructor.\n<init>\nConstructor.\ndebugStream\nDebug output.\njjstrLiteralImages\nToken literal values.\nlexStateNames\nLexer state names.\ngetNextToken\nGet the next Token.\nsetDebugStream\nSet debug output.\nReInit\nReinitialise parser.\nReInit\nReinitialise parser.\nSwitchTo\nSwitch to specified lex state.<\/p>\n"
                      }]
                    },
                    "SimpleCharStream": {
                      "ownKey": "SimpleCharStream",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/expressions/parser",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "SimpleCharStream",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/expressions/parser/SimpleCharStream"
                        },
                        "description": "",
                        "title": "SimpleCharStream",
                        "content": "<p>An implementation of interface CharStream, where the stream is assumed to contain only ASCII characters (without unicode processing).<init>\nConstructor.\n<init>\nConstructor.\n<init>\nConstructor.\n<init>\nConstructor.\n<init>\nConstructor.\n<init>\nConstructor.\n<init>\nConstructor.\n<init>\nConstructor.\n<init>\nConstructor.\nbufpos\nPosition in buffer.\nstaticFlag\nWhether parser is static.\ngetBeginLine\nGet token beginning line number.\ngetEndLine\nGet token end line number.\nreadChar\nRead a character.\nDone\nReset buffer when finished.\nReInit\nReinitialise.\nReInit\nReinitialise.\nReInit\nReinitialise.\nReInit\nReinitialise.\nReInit\nReinitialise.\nReInit\nReinitialise.\nReInit\nReinitialise.\nReInit\nReinitialise.\nReInit\nReinitialise.\ngetEndColumn\nGet token end column number.\nbackup\nBackup a number of characters.\nBeginToken\nStart.\ngetLine<\/p>\n<p>getBeginColumn\nGet token beginning column number.\nGetImage\nGet token literal value.\nGetSuffix\nGet the suffix.\ngetColumn<\/p>\n<p>adjustBeginLineColumn\nMethod to adjust line and column numbers for the start of a token.<\/p>\n"
                      }]
                    },
                    "Token": {
                      "ownKey": "Token",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/expressions/parser",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Token",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/expressions/parser/Token"
                        },
                        "description": "",
                        "title": "Token",
                        "content": "<p>Describes the input token stream.<init>\nNo-argument constructor\n<init>\nConstructs a new token for the specified Image.\n<init>\nConstructs a new token for the specified Image and Kind.\nkind\nAn integer that describes the kind of this token. This numbering system is determined by JavaCCParser, and a table of these numbers is stored in the file ...Constants.java.\nbeginLine\nThe line number of the first character of this Token.\nbeginColumn\nThe column number of the first character of this Token.\nendLine\nThe line number of the last character of this Token.\nendColumn\nThe column number of the last character of this Token.\nimage\nThe string image of the token.\nnext\nA reference to the next regular (non-special) token from the input stream. If this is the last token from the input stream, or if the token manager has not read tokens beyond this one, this field is set to null. This is true only if this token is also a regular token. Otherwise, see below for a description of the contents of this field.\nspecialToken\nThis field is used to access special tokens that occur prior to this token, but after the immediately preceding regular (non-special) token. If there are no such special tokens, this field is set to null. When there are more than one such special token, this field refers to the last of these special tokens, which in turn refers to the next previous special token through its specialToken field, and so on until the first special token (whose specialToken field is null). The next fields of special tokens refer to other special tokens that immediately follow it (without an intervening regular token). If there is no such token, this field is null.\ntoString\nReturns the image.\ngetValue\nAn optional attribute value of the Token. Tokens which are not used as syntactic sugar will often contain meaningful values that will be used later on by the compiler or interpreter. This attribute value is often different from the image. Any subclass of Token that actually wants to return a non-null value can override this method as appropriate.\nnewToken\nReturns a new Token object, by default. However, if you want, you can create and return subclass objects based on the value of ofKind. Simply add the cases to the switch for all those special cases. For example, if you have a subclass of Token called IDToken that you want to create if ofKind is ID, simply add something like : case MyParserConstants.ID : return new IDToken(ofKind, image); to the following switch statement. Then you can cast matchedToken variable to the appropriate type and use sit in your lexical actions.\nnewToken<\/p>\n"
                      }]
                    },
                    "TokenMgrError": {
                      "ownKey": "TokenMgrError",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/expressions/parser",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "TokenMgrError",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/expressions/parser/TokenMgrError"
                        },
                        "description": "",
                        "title": "TokenMgrError",
                        "content": "<p>Token Manager Error.<init>\nNo arg constructor.\n<init>\nConstructor with message and reason.\n<init>\nFull Constructor.\nmessage\nYou can also modify the body of this method to customize your error messages. For example, cases like LOOP_DETECTED and INVALID_LEXICAL_STATE are not of end-users concern, so you can return something like : &quot;Internal Error : Please file a bug report .... &quot; from this method for such cases in the release version of your parser.<\/p>\n"
                      }]
                    },
                    "ParseException": {
                      "ownKey": "ParseException",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/expressions/parser",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "ParseException",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/expressions/parser/ParseException"
                        },
                        "description": "",
                        "title": "ParseException",
                        "content": "<p>This exception is thrown when parse errors are encountered. You can explicitly create objects of this exception type by calling the method generateParseException in the generated parser. You can modify this class to customize your error reporting mechanisms so long as you retain the public fields.<init>\nThis constructor is used by the method &quot;generateParseException&quot; in the generated parser. Calling this constructor generates a new object of this type with the fields &quot;currentToken&quot;, &quot;expectedTokenSequences&quot;, and &quot;tokenImage&quot; set.\n<init>\nThe following constructors are for use by you for whatever purpose you can think of. Constructing the exception in this manner makes the exception behave in the normal way - i.e., as documented in the class &quot;Throwable&quot;. The fields &quot;errorToken&quot;, &quot;expectedTokenSequences&quot;, and &quot;tokenImage&quot; do not contain relevant information. The JavaCC generated code does not use these constructors.\n<init>\nConstructor with message.\ncurrentToken\nThis is the last token that has been consumed successfully. If this object has been created due to a parse error, the token followng this token will (therefore) be the first error token.\nexpectedTokenSequences\nEach entry in this array is an array of integers. Each array of integers represents a sequence of tokens (by their ordinal values) that is expected at this point of the parse.\ntokenImage\nThis is a reference to the &quot;tokenImage&quot; array of the generated parser within which the parse error occurred. This array is defined in the generated ...Constants interface.<\/p>\n"
                      }]
                    },
                    "Exp": {
                      "ownKey": "Exp",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/expressions/parser",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Exp",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/expressions/parser/Exp"
                        },
                        "description": "",
                        "title": "Exp",
                        "content": "<p><init>\nConstructor with generated Token Manager.\n<init>\nConstructor with InputStream.\n<init>\nConstructor with InputStream and supplied encoding\n<init>\nConstructor.\njj_nt\nNext token.\ntoken\nCurrent token.\ntoken_source\nGenerated Token Manager.\ngenerateParseException\nGenerate ParseException.\nListExpr<\/p>\n<p>MaxExpr<\/p>\n<p>TimesExpr<\/p>\n<p>getToken\nGet the specific Token.\nNumber<\/p>\n<p>ReInit\nReinitialise.\nReInit\nReinitialise.\nReInit\nReinitialise.\nReInit\nReinitialise.\nExpr<\/p>\n<p>unaryListComparator<\/p>\n<p>Cost<\/p>\n<p>E<\/p>\n<p>ModExpr<\/p>\n<p>disable_tracing\nDisable tracing.\nComparator<\/p>\n<p>listComparator<\/p>\n<p>getNextToken\nGet the next Token.\nAtomicExpr<\/p>\n<p>Init<\/p>\n<p>enable_tracing\nEnable tracing.\nVar<\/p>\n<p>MinExpr<\/p>\n"
                      }]
                    },
                    "ExpConstants": {
                      "ownKey": "ExpConstants",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/expressions/parser",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "ExpConstants",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/expressions/parser/ExpConstants"
                        },
                        "description": "",
                        "title": "ExpConstants",
                        "content": "<p>Token literal values and constants. Generated by org.javacc.parser.OtherFilesGen#start()\nEOF\nEnd of File.\nRETURN\nRegularExpression Id.\nMIN\nRegularExpression Id.\nMAX\nRegularExpression Id.\nADD\nRegularExpression Id.\nDEL\nRegularExpression Id.\nDEF\nRegularExpression Id.\nCOMP\nRegularExpression Id.\nLISTCOMP\nRegularExpression Id.\nUNARYLISTCOMP\nRegularExpression Id.\nNUM\nRegularExpression Id.\nVAR\nRegularExpression Id.\nLIT\nRegularExpression Id.\nDEFAULT\nLexical state.\ntokenImage\nLiteral token values.<\/p>\n"
                      }]
                    }
                  },
                  "ownPages": [{
                    "reference": {
                      "path": "it/unibo/alchemist/expressions",
                      "baseUrl": "https://alchemistsimulator.github.io/latest",
                      "fileName": "parser",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/expressions/parser"
                    },
                    "description": "",
                    "title": "it.unibo.alchemist.expressions.parser",
                    "content": ""
                  }]
                },
                "implementations": {
                  "ownKey": "implementations",
                  "childrenPages": {
                    "Operator": {
                      "ownKey": "Operator",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/expressions/implementations",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Operator",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/expressions/implementations/Operator"
                        },
                        "description": "",
                        "title": "Operator",
                        "content": "<p>toString<\/p>\n"
                      }]
                    },
                    "AST": {
                      "ownKey": "AST",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/expressions/implementations",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "AST",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/expressions/implementations/AST"
                        },
                        "description": "",
                        "title": "AST",
                        "content": "<p><init>\nBuilds a new AST given its root node.<\/p>\n<p>evaluation\nThis evaluates the expression. If the matches map contains values which are not instanced, and the expression value cannot consequently be computed, 0d is returned.\ngetRoot<\/p>\n<p>toHashString<\/p>\n<p>toString<\/p>\n<p>assignVarValue<\/p>\n"
                      }]
                    },
                    "ExpressionFactory": {
                      "ownKey": "ExpressionFactory",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/expressions/implementations",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "ExpressionFactory",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/expressions/implementations/ExpressionFactory"
                        },
                        "description": "",
                        "title": "ExpressionFactory",
                        "content": "<p>This utility class provides methods to ease the building and usage of IExpression without parsing.<\/p>\n<p>buildComplexGroundExpression\nGiven a single literal (either variable or constant), builds the corresponding expression.\nbuildExpression\nGiven a number, builds a numeric expression.\nbuildExpression\nGiven a single literal (either variable or constant), builds the corresponding expression.\nbuildExpression\nGiven a single literal (either variable or constant), builds the corresponding expression.\nbuildLiteralNode\nGiven a single literal (either variable or constant), builds the corresponding ITreeNode.\nwrap\nGiven a double, creates a NumTreeNode and wraps it into a ListTreeNode.\nwrap\nGiven a HashString, creates the corresponding ITreeNode and wraps it into a ListTreeNode.\nwrap\nWraps a collection of ITreeNode into a new List IExpression.\nwrap\nGiven a node, wraps it into a ListTreeNode.<\/p>\n"
                      }]
                    },
                    "ListComparator": {
                      "ownKey": "ListComparator",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/expressions/implementations",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "ListComparator",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/expressions/implementations/ListComparator"
                        },
                        "description": "",
                        "title": "ListComparator",
                        "content": ""
                      }]
                    },
                    "ConstTreeNode": {
                      "ownKey": "ConstTreeNode",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/expressions/implementations",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "ConstTreeNode",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/expressions/implementations/ConstTreeNode"
                        },
                        "description": "",
                        "title": "ConstTreeNode",
                        "content": "<p><init><\/p>\n<p>toString<\/p>\n<p>getType<\/p>\n<p>getValue<\/p>\n"
                      }]
                    },
                    "OperatorTreeNode": {
                      "ownKey": "OperatorTreeNode",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/expressions/implementations",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "OperatorTreeNode",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/expressions/implementations/OperatorTreeNode"
                        },
                        "description": "",
                        "title": "OperatorTreeNode",
                        "content": "<p><init><\/p>\n<p>toString<\/p>\n<p>getType<\/p>\n<p>getValue<\/p>\n<p>getOperator<\/p>\n"
                      }]
                    },
                    "Type": {
                      "ownKey": "Type",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/expressions/implementations",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Type",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/expressions/implementations/Type"
                        },
                        "description": "",
                        "title": "Type",
                        "content": ""
                      }]
                    },
                    "UIDNode": {
                      "ownKey": "UIDNode",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/expressions/implementations",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "UIDNode",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/expressions/implementations/UIDNode"
                        },
                        "description": "",
                        "title": "UIDNode",
                        "content": "<p><init>\nBuilds a new UUID node.<\/p>\n<p>toHashString<\/p>\n<p>toString<\/p>\n<p>getValue<\/p>\n"
                      }]
                    },
                    "Expression": {
                      "ownKey": "Expression",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/expressions/implementations",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Expression",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/expressions/implementations/Expression"
                        },
                        "description": "",
                        "title": "Expression",
                        "content": "<p><init>\nThis constructor does not do any parsing, and thus is much faster than the other one.\n<init><\/p>\n<p><init>\nThis constructor parses the String into an Expression. Due to the parsing operation, it is slow compared to the other one, and should be used only in the first initialization phase.<\/p>\n<p>getRootNodeType<\/p>\n<p>syntacticMatch<\/p>\n<p>toString<\/p>\n<p>getAST<\/p>\n<p>getRootNode<\/p>\n<p>getRightChildren<\/p>\n<p>getLeftChildren<\/p>\n<p>updateMatchedVar<\/p>\n<p>calculate<\/p>\n<p>mayMatch<\/p>\n<p>getRootNodeData<\/p>\n<p>matches<\/p>\n"
                      }]
                    },
                    "ListComparatorTreeNode": {
                      "ownKey": "ListComparatorTreeNode",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/expressions/implementations",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "ListComparatorTreeNode",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/expressions/implementations/ListComparatorTreeNode"
                        },
                        "description": "",
                        "title": "ListComparatorTreeNode",
                        "content": "<p><init><\/p>\n<p>toString<\/p>\n<p>getType<\/p>\n<p>getValue<\/p>\n"
                      }]
                    },
                    "ATreeNode": {
                      "ownKey": "ATreeNode",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/expressions/implementations",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "ATreeNode",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/expressions/implementations/ATreeNode"
                        },
                        "description": "",
                        "title": "ATreeNode",
                        "content": "<p><init>\nBuilds the internals of a tree node.<\/p>\n<p>hashCode<\/p>\n<p>toHashString<\/p>\n<p>equals<\/p>\n<p>toString<\/p>\n<p>getLeftChild<\/p>\n<p>getRightChild<\/p>\n<p>getValue<\/p>\n<p>getData<\/p>\n<p>getNumberOfChildren<\/p>\n"
                      }]
                    },
                    "ComparatorTreeNode": {
                      "ownKey": "ComparatorTreeNode",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/expressions/implementations",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "ComparatorTreeNode",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/expressions/implementations/ComparatorTreeNode"
                        },
                        "description": "",
                        "title": "ComparatorTreeNode",
                        "content": "<p><init>\nBuilds a ComparatorTreeNode.<\/p>\n<p>toString<\/p>\n<p>getType<\/p>\n<p>getValue<\/p>\n"
                      }]
                    },
                    "ListTreeNode": {
                      "ownKey": "ListTreeNode",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/expressions/implementations",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "ListTreeNode",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/expressions/implementations/ListTreeNode"
                        },
                        "description": "",
                        "title": "ListTreeNode",
                        "content": "<p><init><\/p>\n<p>toString<\/p>\n<p>getType<\/p>\n<p>iterator<\/p>\n<p>getValue<\/p>\n"
                      }]
                    },
                    "VarTreeNode": {
                      "ownKey": "VarTreeNode",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/expressions/implementations",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "VarTreeNode",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/expressions/implementations/VarTreeNode"
                        },
                        "description": "",
                        "title": "VarTreeNode",
                        "content": "<p><init><\/p>\n<p>toString<\/p>\n<p>getType<\/p>\n<p>getValue<\/p>\n"
                      }]
                    },
                    "NumTreeNode": {
                      "ownKey": "NumTreeNode",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/expressions/implementations",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "NumTreeNode",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/expressions/implementations/NumTreeNode"
                        },
                        "description": "",
                        "title": "NumTreeNode",
                        "content": "<p><init><\/p>\n<p><init>\nThis constructor is provided for better compatibility.<\/p>\n<p>toString<\/p>\n<p>getType<\/p>\n<p>getValue<\/p>\n"
                      }]
                    }
                  },
                  "ownPages": [{
                    "reference": {
                      "path": "it/unibo/alchemist/expressions",
                      "baseUrl": "https://alchemistsimulator.github.io/latest",
                      "fileName": "implementations",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/expressions/implementations"
                    },
                    "description": "",
                    "title": "it.unibo.alchemist.expressions.implementations",
                    "content": ""
                  }]
                }
              }
            },
            "exceptions": {
              "ownKey": "exceptions",
              "childrenPages": {
                "UncomparableDistancesException": {
                  "ownKey": "UncomparableDistancesException",
                  "ownPages": [{
                    "reference": {
                      "path": "it/unibo/alchemist/exceptions",
                      "baseUrl": "https://alchemistsimulator.github.io/latest",
                      "fileName": "UncomparableDistancesException",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/exceptions/UncomparableDistancesException"
                    },
                    "description": "",
                    "title": "UncomparableDistancesException",
                    "content": "<p>An exception meant to be thrown when trying to compare incompatible distances.<init>\nBuilds the exception given two positions claimed to be not compatible.\n<init>\nBuilds the exception given two positions claimed to be not compatible.\nmessage<\/p>\n"
                  }]
                },
                "BiochemistryParseException": {
                  "ownKey": "BiochemistryParseException",
                  "ownPages": [{
                    "reference": {
                      "path": "it/unibo/alchemist/exceptions",
                      "baseUrl": "https://alchemistsimulator.github.io/latest",
                      "fileName": "BiochemistryParseException",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/exceptions/BiochemistryParseException"
                    },
                    "description": "",
                    "title": "BiochemistryParseException",
                    "content": "<p>Represents an exception thrown when parse errors are encountered.<init>\nConstruct the exception with the given message.<\/p>\n"
                  }]
                }
              },
              "ownPages": [{
                "reference": {
                  "path": "it/unibo/alchemist",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "exceptions",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/exceptions"
                },
                "description": "",
                "title": "it.unibo.alchemist.exceptions",
                "content": ""
              }]
            },
            "Alchemist": {
              "ownKey": "Alchemist",
              "childrenPages": {"AlchemistWouldHaveExitedException": {
                "ownKey": "AlchemistWouldHaveExitedException",
                "ownPages": [{
                  "reference": {
                    "path": "it/unibo/alchemist/Alchemist",
                    "baseUrl": "https://alchemistsimulator.github.io/latest",
                    "fileName": "AlchemistWouldHaveExitedException",
                    "extension": "html",
                    "usePrettyUrl": true,
                    "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/Alchemist/AlchemistWouldHaveExitedException"
                  },
                  "description": "",
                  "title": "AlchemistWouldHaveExitedException",
                  "content": "<p>This exception is thrown in place of calling <a href=\"http://docs.oracle.com/javase/6/docs/api/java/lang/System.html#exit(int)\">System.exit<\/a> when the simulator is used in debug mode.\nThe exitStatus returns the exit status the execution would have had.<init>\nThis exception is thrown in place of calling <a href=\"http://docs.oracle.com/javase/6/docs/api/java/lang/System.html#exit(int)\">System.exit<\/a> when the simulator is used in debug mode.\nThe exitStatus returns the exit status the execution would have had.\nexitStatus<\/p>\n"
                }]
              }},
              "ownPages": [{
                "reference": {
                  "path": "it/unibo/alchemist",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "Alchemist",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/Alchemist"
                },
                "description": "",
                "title": "Alchemist",
                "content": "<p>Starts Alchemist.<\/p>\n<p>main<\/p>\n<p>enableTestMode\nCall this method to enable testing mode, preventing Alchemist from shutting down the JVM.<\/p>\n"
              }]
            },
            "core": {
              "ownKey": "core",
              "childrenPages": {
                "interfaces": {
                  "ownKey": "interfaces",
                  "childrenPages": {
                    "Status": {
                      "ownKey": "Status",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/core/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Status",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/core/interfaces/Status"
                        },
                        "description": "",
                        "title": "Status",
                        "content": "<p>This enum represents the possible states in which a Simulation could be.<\/p>\n<p>isReachableFrom<\/p>\n"
                      }]
                    },
                    "Simulation": {
                      "ownKey": "Simulation",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/core/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Simulation",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/core/interfaces/Simulation"
                        },
                        "description": "",
                        "title": "Simulation",
                        "content": "<p>This interface forces simulations to be independent threads, and make them controllable from an external console.<\/p>\n<p>getError<\/p>\n<p>nodeAdded\nThis method must get called in case a node is added to the environment during the simulation and after its neighborhood has been computed (or can be consistently computed by the simulated environment). This method provides dependency computation and is responsible of correctly scheduling the Node's new reactions.\nterminate\nSends a terminate command to the simulation. There is no guarantee on when this command will be actually processed.\naddOutputMonitor\nAdds an OutputMonitor to this simulation.\nplay\nSends a play command to the simulation. There is no guarantee on when this command will be actually processed.\ngetStep\nAllows to access the current simulation step.\ngoToStep\nExecutes a certain number of steps, then pauses it.\ngetFinalTime\nAllows to at which time this simulation will end.\ngetStatus\nAllows to access the current status.\ngoToTime\nExecutes the simulation until the target time is reached, then pauses it.\nschedule\nSchedules a runnable to be executed by the Simulation thread, useful for synchronization purposes (e.g. make sure that the environment is not being changed while the requested operation is being executed). An exception thrown by the passed runnable will make the simulation terminate.\npause\nSends a pause command to the simulation. There is no guarantee on when this command will be actually processed.\ngetTime\nAllows to know which is the current simulation time.\nnodeMoved\nThis method must get called in case a node is moved in the environment during the simulation and after its neighborhood has been computed (or can be consistently computed by the simulated environment). This method provides dependency computation and is responsible of correctly scheduling the Node's reactions.\ngetFinalStep<\/p>\n<p>neighborRemoved\nThis method must get called in case a a communication link connecting two nodes gets broken during the simulation. This method provides dependency and scheduling times re-computation for all the reactions interested by such change.\ngetEnvironment\nAllows to access the current environment.\nnodeRemoved\nThis method must get called in case a node is removed from the environment during the simulation and after its neighborhood has been computed (or can be consistently computed by the simulated environment). This method provides dependency computation and is responsible of correctly removing the Node's reactions from the scheduler.\nwaitFor\nSuspends the caller until the simulation reaches the selected Status or the timeout ends. Please note that waiting for a status does not mean that every OutputMonitor will already be notified of the update.\nneighborAdded\nThis method must get called in case a a communication link connecting two nodes gets created during the simulation. This method provides dependency and scheduling times re-computation for all the reactions interested by such change.\nremoveOutputMonitor\nRemoves an OutputMonitor to this simulation. If the OutputMonitor was not among those already added, this method does nothing.<\/p>\n"
                      }]
                    },
                    "Scheduler": {
                      "ownKey": "Scheduler",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/core/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Scheduler",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/core/interfaces/Scheduler"
                        },
                        "description": "",
                        "title": "Scheduler",
                        "content": "<p>The type which describes the concentration of a molecule This interface is meant to be implemented by the data structure(s) which must manage the reactions.<\/p>\n<p>updateReaction\nNotifies the structure that the reaction r has changed. The whole structure will be rearranged to ensure consistency.\ngetNext\nAllows to access the next reaction to be executed.\naddReaction\nAdds a reaction to the data structure.\nremoveReaction\nRemoves a reaction from the structure. If the reaction is not present, nothing is done and an Exception is thrown.<\/p>\n"
                      }]
                    },
                    "DependencyGraph": {
                      "ownKey": "DependencyGraph",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/core/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "DependencyGraph",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/core/interfaces/DependencyGraph"
                        },
                        "description": "",
                        "title": "DependencyGraph",
                        "content": "<p>This interface allows to separate the usage of a dependency graph from its implementation.<\/p>\n<p>globalInputContextReactions<\/p>\n<p>addNeighbor\nGiven two nodes, the graph assumes they are now neighbors and calculates the neighborhood dependencies between them.\ncreateDependencies\nThis method creates the dependencies when a new reaction is added to the environment. Please be careful when building the environment and populating the existing reactions map: this method assumes that all the dependencies among the existing reactions are correct and up to date.\nremoveDependencies\nThis method removes all the dependencies (both in and out dependencies) for a given reaction handler. This method is meant to be used in order to keep the dependencies clean when removing a reaction.\noutboundDependencies\nReturns the set of reactions that may be influenced by the provided reaction.\nremoveNeighbor\nGiven two nodes, the engine assumes they are no longer neighbors and deletes the neighborhood dependencies between them.<\/p>\n"
                      }]
                    }
                  },
                  "ownPages": [{
                    "reference": {
                      "path": "it/unibo/alchemist/core",
                      "baseUrl": "https://alchemistsimulator.github.io/latest",
                      "fileName": "interfaces",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/core/interfaces"
                    },
                    "description": "",
                    "title": "it.unibo.alchemist.core.interfaces",
                    "content": ""
                  }]
                },
                "implementations": {
                  "ownKey": "implementations",
                  "childrenPages": {
                    "ArrayIndexedPriorityQueue": {
                      "ownKey": "ArrayIndexedPriorityQueue",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/core/implementations",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "ArrayIndexedPriorityQueue",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/core/implementations/ArrayIndexedPriorityQueue"
                        },
                        "description": "",
                        "title": "ArrayIndexedPriorityQueue",
                        "content": "<p>This class implements the indexed priority queue through an Array.<init>\nThis class implements the indexed priority queue through an Array.<\/p>\n<p>updateReaction<\/p>\n<p>toString<\/p>\n<p>getNext<\/p>\n<p>addReaction<\/p>\n<p>removeReaction<\/p>\n"
                      }]
                    },
                    "JGraphTDependencyGraph": {
                      "ownKey": "JGraphTDependencyGraph",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/core/implementations",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "JGraphTDependencyGraph",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/core/implementations/JGraphTDependencyGraph"
                        },
                        "description": "",
                        "title": "JGraphTDependencyGraph",
                        "content": "<p>This class offers an implementation of a dependency graph, namely a\ndata structure which can address in an efficient way the problem of\nfinding those reactions affected by the execution of another\nreaction. This class relies heavily on the ReactionHandler\ninterface.<init>\nThis class offers an implementation of a dependency graph, namely a\ndata structure which can address in an efficient way the problem of\nfinding those reactions affected by the execution of another\nreaction. This class relies heavily on the ReactionHandler\ninterface.<\/p>\n<p>createDependencies<\/p>\n<p>removeDependencies<\/p>\n<p>addNeighbor<\/p>\n<p>removeNeighbor<\/p>\n<p>outboundDependencies<\/p>\n<p>toString<\/p>\n<p>globalInputContextReactions<\/p>\n"
                      }]
                    },
                    "Engine": {
                      "ownKey": "Engine",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/core/implementations",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Engine",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/core/implementations/Engine"
                        },
                        "description": "",
                        "title": "Engine",
                        "content": "<p>This class implements a simulation. It offers a wide number of static factories to ease the creation process.<init>\nBuilds a simulation for a given environment. By default it uses a DependencyGraph and an IndexedPriorityQueue internally. If you want to use your own implementations of DependencyGraph and Scheduler interfaces, don't use this constructor.\n<init>\nBuilds a simulation for a given environment. By default it uses a DependencyGraph and an IndexedPriorityQueue internally. If you want to use your own implementations of DependencyGraph and Scheduler interfaces, don't use this constructor.\n<init>\nBuilds a simulation for a given environment. By default it uses a DependencyGraph and an IndexedPriorityQueue internally. If you want to use your own implementations of DependencyGraph and Scheduler interfaces, don't use this constructor.<\/p>\n<p>getError<\/p>\n<p>nodeAdded<\/p>\n<p>terminate<\/p>\n<p>addOutputMonitor<\/p>\n<p>play<\/p>\n<p>getStep<\/p>\n<p>goToStep<\/p>\n<p>getFinalTime<\/p>\n<p>run<\/p>\n<p>getReactionManager<\/p>\n<p>getStatus<\/p>\n<p>goToTime<\/p>\n<p>schedule<\/p>\n<p>pause<\/p>\n<p>toString<\/p>\n<p>getTime<\/p>\n<p>nodeMoved<\/p>\n<p>getFinalStep<\/p>\n<p>neighborRemoved<\/p>\n<p>getEnvironment<\/p>\n<p>nodeRemoved<\/p>\n<p>waitFor<\/p>\n<p>neighborAdded<\/p>\n<p>removeOutputMonitor<\/p>\n<p>getDependencyGraph<\/p>\n"
                      }]
                    }
                  },
                  "ownPages": [{
                    "reference": {
                      "path": "it/unibo/alchemist/core",
                      "baseUrl": "https://alchemistsimulator.github.io/latest",
                      "fileName": "implementations",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/core/implementations"
                    },
                    "description": "",
                    "title": "it.unibo.alchemist.core.implementations",
                    "content": ""
                  }]
                }
              }
            },
            "biochemistrydsl": {
              "ownKey": "biochemistrydsl",
              "childrenPages": {
                "BiochemistrydslBaseVisitor": {
                  "ownKey": "BiochemistrydslBaseVisitor",
                  "ownPages": [{
                    "reference": {
                      "path": "it/unibo/alchemist/biochemistrydsl",
                      "baseUrl": "https://alchemistsimulator.github.io/latest",
                      "fileName": "BiochemistrydslBaseVisitor",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/biochemistrydsl/BiochemistrydslBaseVisitor"
                    },
                    "description": "",
                    "title": "BiochemistrydslBaseVisitor",
                    "content": "<p>This class provides an empty implementation of BiochemistrydslVisitor, which can be extended to create a visitor which only needs to handle a subset of the available methods.<init>\nThis class provides an empty implementation of BiochemistrydslVisitor, which can be extended to create a visitor which only needs to handle a subset of the available methods.<\/p>\n<p>visitBiochemicalReactionLeft\n{@inheritDoc} <p>The default implementation returns the result of calling #visitChildren on <code>ctx<\/code>.<\/p>\nvisitBiochemicalReactionRightContext\n{@inheritDoc} <p>The default implementation returns the result of calling #visitChildren on <code>ctx<\/code>.<\/p>\nvisitJunctionRight\n{@inheritDoc} <p>The default implementation returns the result of calling #visitChildren on <code>ctx<\/code>.<\/p>\nvisitCreateJunctionLeft\n{@inheritDoc} <p>The default implementation returns the result of calling #visitChildren on <code>ctx<\/code>.<\/p>\nvisitBiochemicalReactionLeftContext\n{@inheritDoc} <p>The default implementation returns the result of calling #visitChildren on <code>ctx<\/code>.<\/p>\nvisitConcentration\n{@inheritDoc} <p>The default implementation returns the result of calling #visitChildren on <code>ctx<\/code>.<\/p>\nvisitJavaConstructor\n{@inheritDoc} <p>The default implementation returns the result of calling #visitChildren on <code>ctx<\/code>.<\/p>\nvisitCreateJunctionJunction\n{@inheritDoc} <p>The default implementation returns the result of calling #visitChildren on <code>ctx<\/code>.<\/p>\nvisitBiochemicalReactionRightInEnvContext\n{@inheritDoc} <p>The default implementation returns the result of calling #visitChildren on <code>ctx<\/code>.<\/p>\nvisitCustomConditions\n{@inheritDoc} <p>The default implementation returns the result of calling #visitChildren on <code>ctx<\/code>.<\/p>\nvisitArg\n{@inheritDoc} <p>The default implementation returns the result of calling #visitChildren on <code>ctx<\/code>.<\/p>\nvisitBiochemicalReactionLeftInEnvContext\n{@inheritDoc} <p>The default implementation returns the result of calling #visitChildren on <code>ctx<\/code>.<\/p>\nvisitBiochemicalReaction\n{@inheritDoc} <p>The default implementation returns the result of calling #visitChildren on <code>ctx<\/code>.<\/p>\nvisitDecimal\n{@inheritDoc} <p>The default implementation returns the result of calling #visitChildren on <code>ctx<\/code>.<\/p>\nvisitJunctionReactionJunctionCondition\n{@inheritDoc} <p>The default implementation returns the result of calling #visitChildren on <code>ctx<\/code>.<\/p>\nvisitBiochemicalReactionLeftInNeighborContext\n{@inheritDoc} <p>The default implementation returns the result of calling #visitChildren on <code>ctx<\/code>.<\/p>\nvisitJunction\n{@inheritDoc} <p>The default implementation returns the result of calling #visitChildren on <code>ctx<\/code>.<\/p>\nvisitJunctionReaction\n{@inheritDoc} <p>The default implementation returns the result of calling #visitChildren on <code>ctx<\/code>.<\/p>\nvisitBiochemicalReactionRight\n{@inheritDoc} <p>The default implementation returns the result of calling #visitChildren on <code>ctx<\/code>.<\/p>\nvisitArgList\n{@inheritDoc} <p>The default implementation returns the result of calling #visitChildren on <code>ctx<\/code>.<\/p>\nvisitBiochemicalReactionRightInCellContext\n{@inheritDoc} <p>The default implementation returns the result of calling #visitChildren on <code>ctx<\/code>.<\/p>\nvisitCreateJunctionRight\n{@inheritDoc} <p>The default implementation returns the result of calling #visitChildren on <code>ctx<\/code>.<\/p>\nvisitBiochemicalReactionRightElem\n{@inheritDoc} <p>The default implementation returns the result of calling #visitChildren on <code>ctx<\/code>.<\/p>\nvisitJunctionReactionJunction\n{@inheritDoc} <p>The default implementation returns the result of calling #visitChildren on <code>ctx<\/code>.<\/p>\nvisitJunctionReactionRight\n{@inheritDoc} <p>The default implementation returns the result of calling #visitChildren on <code>ctx<\/code>.<\/p>\nvisitBiochemicalReactionRightInNeighborContext\n{@inheritDoc} <p>The default implementation returns the result of calling #visitChildren on <code>ctx<\/code>.<\/p>\nvisitCustomReactionType\n{@inheritDoc} <p>The default implementation returns the result of calling #visitChildren on <code>ctx<\/code>.<\/p>\nvisitJavaClass\n{@inheritDoc} <p>The default implementation returns the result of calling #visitChildren on <code>ctx<\/code>.<\/p>\nvisitCustomCondition\n{@inheritDoc} <p>The default implementation returns the result of calling #visitChildren on <code>ctx<\/code>.<\/p>\nvisitReaction\n{@inheritDoc} <p>The default implementation returns the result of calling #visitChildren on <code>ctx<\/code>.<\/p>\nvisitCreateJunction\n{@inheritDoc} <p>The default implementation returns the result of calling #visitChildren on <code>ctx<\/code>.<\/p>\nvisitJunctionLeft\n{@inheritDoc} <p>The default implementation returns the result of calling #visitChildren on <code>ctx<\/code>.<\/p>\nvisitBiochemicalReactionLeftInCellContext\n{@inheritDoc} <p>The default implementation returns the result of calling #visitChildren on <code>ctx<\/code>.<\/p>\nvisitJunctionReactionLeft\n{@inheritDoc} <p>The default implementation returns the result of calling #visitChildren on <code>ctx<\/code>.<\/p>\nvisitBiomolecule\n{@inheritDoc} <p>The default implementation returns the result of calling #visitChildren on <code>ctx<\/code>.<\/p><\/p>\n"
                  }]
                },
                "BiochemistrydslListener": {
                  "ownKey": "BiochemistrydslListener",
                  "ownPages": [{
                    "reference": {
                      "path": "it/unibo/alchemist/biochemistrydsl",
                      "baseUrl": "https://alchemistsimulator.github.io/latest",
                      "fileName": "BiochemistrydslListener",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/biochemistrydsl/BiochemistrydslListener"
                    },
                    "description": "",
                    "title": "BiochemistrydslListener",
                    "content": "<p>This interface defines a complete listener for a parse tree produced by BiochemistrydslParser.<\/p>\n<p>exitJunction\nExit a parse tree produced by <code>BiochemistrydslParser#junction<\/code>.\nexitBiochemicalReactionRightInNeighborContext\nExit a parse tree produced by <code>BiochemistrydslParser#biochemicalReactionRightInNeighborContext<\/code>.\nexitJunctionLeft\nExit a parse tree produced by <code>BiochemistrydslParser#junctionLeft<\/code>.\nexitJavaClass\nExit a parse tree produced by <code>BiochemistrydslParser#javaClass<\/code>.\nexitCustomReactionType\nExit a parse tree produced by <code>BiochemistrydslParser#customReactionType<\/code>.\nenterCreateJunction\nEnter a parse tree produced by <code>BiochemistrydslParser#createJunction<\/code>.\nexitJunctionReactionRight\nExit a parse tree produced by <code>BiochemistrydslParser#junctionReactionRight<\/code>.\nenterJavaClass\nEnter a parse tree produced by <code>BiochemistrydslParser#javaClass<\/code>.\nenterBiochemicalReaction\nEnter a parse tree produced by <code>BiochemistrydslParser#biochemicalReaction<\/code>.\nenterBiochemicalReactionLeftInEnvContext\nEnter a parse tree produced by <code>BiochemistrydslParser#biochemicalReactionLeftInEnvContext<\/code>.\nenterCustomConditions\nEnter a parse tree produced by <code>BiochemistrydslParser#customConditions<\/code>.\nexitBiochemicalReactionRight\nExit a parse tree produced by <code>BiochemistrydslParser#biochemicalReactionRight<\/code>.\nenterJunctionLeft\nEnter a parse tree produced by <code>BiochemistrydslParser#junctionLeft<\/code>.\nenterArgList\nEnter a parse tree produced by <code>BiochemistrydslParser#argList<\/code>.\nenterBiochemicalReactionRightInNeighborContext\nEnter a parse tree produced by <code>BiochemistrydslParser#biochemicalReactionRightInNeighborContext<\/code>.\nexitJunctionRight\nExit a parse tree produced by <code>BiochemistrydslParser#junctionRight<\/code>.\nexitJunctionReactionLeft\nExit a parse tree produced by <code>BiochemistrydslParser#junctionReactionLeft<\/code>.\nenterCreateJunctionRight\nEnter a parse tree produced by <code>BiochemistrydslParser#createJunctionRight<\/code>.\nenterBiochemicalReactionRightElem\nEnter a parse tree produced by <code>BiochemistrydslParser#biochemicalReactionRightElem<\/code>.\nenterBiochemicalReactionLeftInCellContext\nEnter a parse tree produced by <code>BiochemistrydslParser#biochemicalReactionLeftInCellContext<\/code>.\nexitCreateJunctionJunction\nExit a parse tree produced by <code>BiochemistrydslParser#createJunctionJunction<\/code>.\nexitBiochemicalReactionRightInEnvContext\nExit a parse tree produced by <code>BiochemistrydslParser#biochemicalReactionRightInEnvContext<\/code>.\nenterArg\nEnter a parse tree produced by <code>BiochemistrydslParser#arg<\/code>.\nexitJunctionReactionJunctionCondition\nExit a parse tree produced by <code>BiochemistrydslParser#junctionReactionJunctionCondition<\/code>.\nexitJunctionReactionJunction\nExit a parse tree produced by <code>BiochemistrydslParser#junctionReactionJunction<\/code>.\nexitBiochemicalReactionLeftInCellContext\nExit a parse tree produced by <code>BiochemistrydslParser#biochemicalReactionLeftInCellContext<\/code>.\nenterCreateJunctionJunction\nEnter a parse tree produced by <code>BiochemistrydslParser#createJunctionJunction<\/code>.\nexitJavaConstructor\nExit a parse tree produced by <code>BiochemistrydslParser#javaConstructor<\/code>.\nenterBiochemicalReactionRight\nEnter a parse tree produced by <code>BiochemistrydslParser#biochemicalReactionRight<\/code>.\nenterReaction\nEnter a parse tree produced by <code>BiochemistrydslParser#reaction<\/code>.\nenterJunctionReactionJunction\nEnter a parse tree produced by <code>BiochemistrydslParser#junctionReactionJunction<\/code>.\nexitBiochemicalReactionRightElem\nExit a parse tree produced by <code>BiochemistrydslParser#biochemicalReactionRightElem<\/code>.\nenterJunctionReaction\nEnter a parse tree produced by <code>BiochemistrydslParser#junctionReaction<\/code>.\nenterJavaConstructor\nEnter a parse tree produced by <code>BiochemistrydslParser#javaConstructor<\/code>.\nexitBiochemicalReactionRightInCellContext\nExit a parse tree produced by <code>BiochemistrydslParser#biochemicalReactionRightInCellContext<\/code>.\nexitBiochemicalReactionLeftInNeighborContext\nExit a parse tree produced by <code>BiochemistrydslParser#biochemicalReactionLeftInNeighborContext<\/code>.\nexitBiochemicalReaction\nExit a parse tree produced by <code>BiochemistrydslParser#biochemicalReaction<\/code>.\nexitBiochemicalReactionRightContext\nExit a parse tree produced by <code>BiochemistrydslParser#biochemicalReactionRightContext<\/code>.\nexitCreateJunctionLeft\nExit a parse tree produced by <code>BiochemistrydslParser#createJunctionLeft<\/code>.\nenterJunctionReactionRight\nEnter a parse tree produced by <code>BiochemistrydslParser#junctionReactionRight<\/code>.\nexitCreateJunctionRight\nExit a parse tree produced by <code>BiochemistrydslParser#createJunctionRight<\/code>.\nexitCustomConditions\nExit a parse tree produced by <code>BiochemistrydslParser#customConditions<\/code>.\nexitArg\nExit a parse tree produced by <code>BiochemistrydslParser#arg<\/code>.\nexitCreateJunction\nExit a parse tree produced by <code>BiochemistrydslParser#createJunction<\/code>.\nenterBiochemicalReactionLeft\nEnter a parse tree produced by <code>BiochemistrydslParser#biochemicalReactionLeft<\/code>.\nenterBiochemicalReactionRightInEnvContext\nEnter a parse tree produced by <code>BiochemistrydslParser#biochemicalReactionRightInEnvContext<\/code>.\nenterBiochemicalReactionLeftContext\nEnter a parse tree produced by <code>BiochemistrydslParser#biochemicalReactionLeftContext<\/code>.\nexitCustomCondition\nExit a parse tree produced by <code>BiochemistrydslParser#customCondition<\/code>.\nenterCreateJunctionLeft\nEnter a parse tree produced by <code>BiochemistrydslParser#createJunctionLeft<\/code>.\nenterJunctionRight\nEnter a parse tree produced by <code>BiochemistrydslParser#junctionRight<\/code>.\nenterConcentration\nEnter a parse tree produced by <code>BiochemistrydslParser#concentration<\/code>.\nexitArgList\nExit a parse tree produced by <code>BiochemistrydslParser#argList<\/code>.\nexitBiomolecule\nExit a parse tree produced by <code>BiochemistrydslParser#biomolecule<\/code>.\nexitBiochemicalReactionLeftInEnvContext\nExit a parse tree produced by <code>BiochemistrydslParser#biochemicalReactionLeftInEnvContext<\/code>.\nenterJunction\nEnter a parse tree produced by <code>BiochemistrydslParser#junction<\/code>.\nexitBiochemicalReactionLeft\nExit a parse tree produced by <code>BiochemistrydslParser#biochemicalReactionLeft<\/code>.\nexitConcentration\nExit a parse tree produced by <code>BiochemistrydslParser#concentration<\/code>.\nenterDecimal\nEnter a parse tree produced by <code>BiochemistrydslParser#decimal<\/code>.\nenterJunctionReactionJunctionCondition\nEnter a parse tree produced by <code>BiochemistrydslParser#junctionReactionJunctionCondition<\/code>.\nenterBiochemicalReactionRightInCellContext\nEnter a parse tree produced by <code>BiochemistrydslParser#biochemicalReactionRightInCellContext<\/code>.\nenterBiochemicalReactionLeftInNeighborContext\nEnter a parse tree produced by <code>BiochemistrydslParser#biochemicalReactionLeftInNeighborContext<\/code>.\nexitBiochemicalReactionLeftContext\nExit a parse tree produced by <code>BiochemistrydslParser#biochemicalReactionLeftContext<\/code>.\nenterCustomCondition\nEnter a parse tree produced by <code>BiochemistrydslParser#customCondition<\/code>.\nenterBiochemicalReactionRightContext\nEnter a parse tree produced by <code>BiochemistrydslParser#biochemicalReactionRightContext<\/code>.\nexitDecimal\nExit a parse tree produced by <code>BiochemistrydslParser#decimal<\/code>.\nexitReaction\nExit a parse tree produced by <code>BiochemistrydslParser#reaction<\/code>.\nenterBiomolecule\nEnter a parse tree produced by <code>BiochemistrydslParser#biomolecule<\/code>.\nenterJunctionReactionLeft\nEnter a parse tree produced by <code>BiochemistrydslParser#junctionReactionLeft<\/code>.\nexitJunctionReaction\nExit a parse tree produced by <code>BiochemistrydslParser#junctionReaction<\/code>.\nenterCustomReactionType\nEnter a parse tree produced by <code>BiochemistrydslParser#customReactionType<\/code>.<\/p>\n"
                  }]
                },
                "BiochemistrydslBaseListener": {
                  "ownKey": "BiochemistrydslBaseListener",
                  "ownPages": [{
                    "reference": {
                      "path": "it/unibo/alchemist/biochemistrydsl",
                      "baseUrl": "https://alchemistsimulator.github.io/latest",
                      "fileName": "BiochemistrydslBaseListener",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/biochemistrydsl/BiochemistrydslBaseListener"
                    },
                    "description": "",
                    "title": "BiochemistrydslBaseListener",
                    "content": "<p>This class provides an empty implementation of BiochemistrydslListener, which can be extended to create a listener which only needs to handle a subset of the available methods.<init>\nThis class provides an empty implementation of BiochemistrydslListener, which can be extended to create a listener which only needs to handle a subset of the available methods.<\/p>\n<p>exitJunction\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nexitBiochemicalReactionRightInNeighborContext\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nexitJunctionLeft\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nexitJavaClass\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nexitCustomReactionType\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nenterCreateJunction\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nexitJunctionReactionRight\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nenterJavaClass\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nenterBiochemicalReaction\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nenterBiochemicalReactionLeftInEnvContext\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nenterCustomConditions\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nexitBiochemicalReactionRight\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nenterJunctionLeft\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nenterArgList\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nenterBiochemicalReactionRightInNeighborContext\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nexitJunctionRight\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nexitJunctionReactionLeft\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nenterCreateJunctionRight\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nenterBiochemicalReactionRightElem\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nvisitErrorNode\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nenterBiochemicalReactionLeftInCellContext\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nexitCreateJunctionJunction\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nexitBiochemicalReactionRightInEnvContext\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nenterArg\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nexitJunctionReactionJunctionCondition\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nexitJunctionReactionJunction\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nenterEveryRule\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nexitEveryRule\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nexitBiochemicalReactionLeftInCellContext\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nenterCreateJunctionJunction\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nexitJavaConstructor\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nenterBiochemicalReactionRight\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nenterReaction\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nenterJunctionReactionJunction\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nexitBiochemicalReactionRightElem\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nenterJunctionReaction\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nenterJavaConstructor\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nexitBiochemicalReactionRightInCellContext\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nexitBiochemicalReactionLeftInNeighborContext\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nexitBiochemicalReaction\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nexitBiochemicalReactionRightContext\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nexitCreateJunctionLeft\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nenterJunctionReactionRight\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nexitCreateJunctionRight\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nexitCustomConditions\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nexitArg\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nexitCreateJunction\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nenterBiochemicalReactionLeft\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nvisitTerminal\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nenterBiochemicalReactionRightInEnvContext\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nenterBiochemicalReactionLeftContext\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nexitCustomCondition\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nenterCreateJunctionLeft\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nenterJunctionRight\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nenterConcentration\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nexitArgList\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nexitBiomolecule\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nexitBiochemicalReactionLeftInEnvContext\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nenterJunction\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nexitBiochemicalReactionLeft\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nexitConcentration\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nenterDecimal\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nenterJunctionReactionJunctionCondition\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nenterBiochemicalReactionRightInCellContext\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nenterBiochemicalReactionLeftInNeighborContext\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nexitBiochemicalReactionLeftContext\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nenterCustomCondition\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nenterBiochemicalReactionRightContext\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nexitDecimal\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nexitReaction\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nenterBiomolecule\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nenterJunctionReactionLeft\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nexitJunctionReaction\n{@inheritDoc} <p>The default implementation does nothing.<\/p>\nenterCustomReactionType\n{@inheritDoc} <p>The default implementation does nothing.<\/p><\/p>\n"
                  }]
                },
                "BiochemistrydslVisitor": {
                  "ownKey": "BiochemistrydslVisitor",
                  "ownPages": [{
                    "reference": {
                      "path": "it/unibo/alchemist/biochemistrydsl",
                      "baseUrl": "https://alchemistsimulator.github.io/latest",
                      "fileName": "BiochemistrydslVisitor",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/biochemistrydsl/BiochemistrydslVisitor"
                    },
                    "description": "",
                    "title": "BiochemistrydslVisitor",
                    "content": "<p>This interface defines a complete generic visitor for a parse tree produced by BiochemistrydslParser.<\/p>\n<p>visitBiochemicalReactionLeft\nVisit a parse tree produced by <code>BiochemistrydslParser#biochemicalReactionLeft<\/code>.\nvisitBiochemicalReactionRightContext\nVisit a parse tree produced by <code>BiochemistrydslParser#biochemicalReactionRightContext<\/code>.\nvisitJunctionRight\nVisit a parse tree produced by <code>BiochemistrydslParser#junctionRight<\/code>.\nvisitCreateJunctionLeft\nVisit a parse tree produced by <code>BiochemistrydslParser#createJunctionLeft<\/code>.\nvisitBiochemicalReactionLeftContext\nVisit a parse tree produced by <code>BiochemistrydslParser#biochemicalReactionLeftContext<\/code>.\nvisitConcentration\nVisit a parse tree produced by <code>BiochemistrydslParser#concentration<\/code>.\nvisitJavaConstructor\nVisit a parse tree produced by <code>BiochemistrydslParser#javaConstructor<\/code>.\nvisitCreateJunctionJunction\nVisit a parse tree produced by <code>BiochemistrydslParser#createJunctionJunction<\/code>.\nvisitBiochemicalReactionRightInEnvContext\nVisit a parse tree produced by <code>BiochemistrydslParser#biochemicalReactionRightInEnvContext<\/code>.\nvisitCustomConditions\nVisit a parse tree produced by <code>BiochemistrydslParser#customConditions<\/code>.\nvisitArg\nVisit a parse tree produced by <code>BiochemistrydslParser#arg<\/code>.\nvisitBiochemicalReactionLeftInEnvContext\nVisit a parse tree produced by <code>BiochemistrydslParser#biochemicalReactionLeftInEnvContext<\/code>.\nvisitBiochemicalReaction\nVisit a parse tree produced by <code>BiochemistrydslParser#biochemicalReaction<\/code>.\nvisitDecimal\nVisit a parse tree produced by <code>BiochemistrydslParser#decimal<\/code>.\nvisitJunctionReactionJunctionCondition\nVisit a parse tree produced by <code>BiochemistrydslParser#junctionReactionJunctionCondition<\/code>.\nvisitBiochemicalReactionLeftInNeighborContext\nVisit a parse tree produced by <code>BiochemistrydslParser#biochemicalReactionLeftInNeighborContext<\/code>.\nvisitJunction\nVisit a parse tree produced by <code>BiochemistrydslParser#junction<\/code>.\nvisitJunctionReaction\nVisit a parse tree produced by <code>BiochemistrydslParser#junctionReaction<\/code>.\nvisitBiochemicalReactionRight\nVisit a parse tree produced by <code>BiochemistrydslParser#biochemicalReactionRight<\/code>.\nvisitArgList\nVisit a parse tree produced by <code>BiochemistrydslParser#argList<\/code>.\nvisitBiochemicalReactionRightInCellContext\nVisit a parse tree produced by <code>BiochemistrydslParser#biochemicalReactionRightInCellContext<\/code>.\nvisitCreateJunctionRight\nVisit a parse tree produced by <code>BiochemistrydslParser#createJunctionRight<\/code>.\nvisitBiochemicalReactionRightElem\nVisit a parse tree produced by <code>BiochemistrydslParser#biochemicalReactionRightElem<\/code>.\nvisitJunctionReactionJunction\nVisit a parse tree produced by <code>BiochemistrydslParser#junctionReactionJunction<\/code>.\nvisitJunctionReactionRight\nVisit a parse tree produced by <code>BiochemistrydslParser#junctionReactionRight<\/code>.\nvisitBiochemicalReactionRightInNeighborContext\nVisit a parse tree produced by <code>BiochemistrydslParser#biochemicalReactionRightInNeighborContext<\/code>.\nvisitCustomReactionType\nVisit a parse tree produced by <code>BiochemistrydslParser#customReactionType<\/code>.\nvisitJavaClass\nVisit a parse tree produced by <code>BiochemistrydslParser#javaClass<\/code>.\nvisitCustomCondition\nVisit a parse tree produced by <code>BiochemistrydslParser#customCondition<\/code>.\nvisitReaction\nVisit a parse tree produced by <code>BiochemistrydslParser#reaction<\/code>.\nvisitCreateJunction\nVisit a parse tree produced by <code>BiochemistrydslParser#createJunction<\/code>.\nvisitJunctionLeft\nVisit a parse tree produced by <code>BiochemistrydslParser#junctionLeft<\/code>.\nvisitBiochemicalReactionLeftInCellContext\nVisit a parse tree produced by <code>BiochemistrydslParser#biochemicalReactionLeftInCellContext<\/code>.\nvisitJunctionReactionLeft\nVisit a parse tree produced by <code>BiochemistrydslParser#junctionReactionLeft<\/code>.\nvisitBiomolecule\nVisit a parse tree produced by <code>BiochemistrydslParser#biomolecule<\/code>.<\/p>\n"
                  }]
                },
                "BiochemistrydslParser": {
                  "ownKey": "BiochemistrydslParser",
                  "childrenPages": {
                    "DecimalContext": {
                      "ownKey": "DecimalContext",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "DecimalContext",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser/DecimalContext"
                        },
                        "description": "",
                        "title": "DecimalContext",
                        "content": "<p><init><\/p>\n<p>exitRule<\/p>\n<p>accept<\/p>\n<p>POSDOUBLE<\/p>\n<p>enterRule<\/p>\n<p>getRuleIndex<\/p>\n"
                      }]
                    },
                    "BiomoleculeContext": {
                      "ownKey": "BiomoleculeContext",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "BiomoleculeContext",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser/BiomoleculeContext"
                        },
                        "description": "",
                        "title": "BiomoleculeContext",
                        "content": "<p><init><\/p>\n<p>name<\/p>\n<p>exitRule<\/p>\n<p>concentration<\/p>\n<p>accept<\/p>\n<p>LITERAL<\/p>\n<p>enterRule<\/p>\n<p>getRuleIndex<\/p>\n"
                      }]
                    },
                    "BiochemicalReactionLeftInEnvContextContext": {
                      "ownKey": "BiochemicalReactionLeftInEnvContextContext",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "BiochemicalReactionLeftInEnvContextContext",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser/BiochemicalReactionLeftInEnvContextContext"
                        },
                        "description": "",
                        "title": "BiochemicalReactionLeftInEnvContextContext",
                        "content": "<p><init><\/p>\n<p>exitRule<\/p>\n<p>biomolecule<\/p>\n<p>biomolecule<\/p>\n<p>accept<\/p>\n<p>enterRule<\/p>\n<p>getRuleIndex<\/p>\n"
                      }]
                    },
                    "BiochemicalReactionRightInEnvContextContext": {
                      "ownKey": "BiochemicalReactionRightInEnvContextContext",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "BiochemicalReactionRightInEnvContextContext",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser/BiochemicalReactionRightInEnvContextContext"
                        },
                        "description": "",
                        "title": "BiochemicalReactionRightInEnvContextContext",
                        "content": "<p><init><\/p>\n<p>exitRule<\/p>\n<p>accept<\/p>\n<p>biochemicalReactionRightElem<\/p>\n<p>biochemicalReactionRightElem<\/p>\n<p>enterRule<\/p>\n<p>getRuleIndex<\/p>\n"
                      }]
                    },
                    "ArgListContext": {
                      "ownKey": "ArgListContext",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "ArgListContext",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser/ArgListContext"
                        },
                        "description": "",
                        "title": "ArgListContext",
                        "content": "<p><init><\/p>\n<p>exitRule<\/p>\n<p>accept<\/p>\n<p>arg<\/p>\n<p>arg<\/p>\n<p>enterRule<\/p>\n<p>getRuleIndex<\/p>\n"
                      }]
                    },
                    "CustomReactionTypeContext": {
                      "ownKey": "CustomReactionTypeContext",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "CustomReactionTypeContext",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser/CustomReactionTypeContext"
                        },
                        "description": "",
                        "title": "CustomReactionTypeContext",
                        "content": "<p><init><\/p>\n<p>exitRule<\/p>\n<p>javaConstructor<\/p>\n<p>accept<\/p>\n<p>enterRule<\/p>\n<p>getRuleIndex<\/p>\n"
                      }]
                    },
                    "BiochemicalReactionLeftInCellContextContext": {
                      "ownKey": "BiochemicalReactionLeftInCellContextContext",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "BiochemicalReactionLeftInCellContextContext",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser/BiochemicalReactionLeftInCellContextContext"
                        },
                        "description": "",
                        "title": "BiochemicalReactionLeftInCellContextContext",
                        "content": "<p><init><\/p>\n<p>exitRule<\/p>\n<p>biomolecule<\/p>\n<p>biomolecule<\/p>\n<p>accept<\/p>\n<p>enterRule<\/p>\n<p>getRuleIndex<\/p>\n"
                      }]
                    },
                    "CreateJunctionLeftContext": {
                      "ownKey": "CreateJunctionLeftContext",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "CreateJunctionLeftContext",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser/CreateJunctionLeftContext"
                        },
                        "description": "",
                        "title": "CreateJunctionLeftContext",
                        "content": "<p><init><\/p>\n<p>exitRule<\/p>\n<p>accept<\/p>\n<p>biochemicalReactionLeftInCellContext<\/p>\n<p>biochemicalReactionLeftContext<\/p>\n<p>biochemicalReactionLeftContext<\/p>\n<p>biochemicalReactionLeftInNeighborContext<\/p>\n<p>enterRule<\/p>\n<p>getRuleIndex<\/p>\n"
                      }]
                    },
                    "JavaConstructorContext": {
                      "ownKey": "JavaConstructorContext",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "JavaConstructorContext",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser/JavaConstructorContext"
                        },
                        "description": "",
                        "title": "JavaConstructorContext",
                        "content": "<p><init><\/p>\n<p>exitRule<\/p>\n<p>accept<\/p>\n<p>argList<\/p>\n<p>javaClass<\/p>\n<p>enterRule<\/p>\n<p>getRuleIndex<\/p>\n"
                      }]
                    },
                    "BiochemicalReactionRightContextContext": {
                      "ownKey": "BiochemicalReactionRightContextContext",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "BiochemicalReactionRightContextContext",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser/BiochemicalReactionRightContextContext"
                        },
                        "description": "",
                        "title": "BiochemicalReactionRightContextContext",
                        "content": "<p><init><\/p>\n<p>exitRule<\/p>\n<p>biochemicalReactionRightInNeighborContext<\/p>\n<p>biochemicalReactionRightInEnvContext<\/p>\n<p>accept<\/p>\n<p>biochemicalReactionRightInCellContext<\/p>\n<p>enterRule<\/p>\n<p>getRuleIndex<\/p>\n"
                      }]
                    },
                    "BiochemicalReactionRightElemContext": {
                      "ownKey": "BiochemicalReactionRightElemContext",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "BiochemicalReactionRightElemContext",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser/BiochemicalReactionRightElemContext"
                        },
                        "description": "",
                        "title": "BiochemicalReactionRightElemContext",
                        "content": "<p><init><\/p>\n<p>exitRule<\/p>\n<p>biomolecule<\/p>\n<p>javaConstructor<\/p>\n<p>accept<\/p>\n<p>enterRule<\/p>\n<p>getRuleIndex<\/p>\n"
                      }]
                    },
                    "JunctionReactionContext": {
                      "ownKey": "JunctionReactionContext",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "JunctionReactionContext",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser/JunctionReactionContext"
                        },
                        "description": "",
                        "title": "JunctionReactionContext",
                        "content": "<p><init><\/p>\n<p>exitRule<\/p>\n<p>accept<\/p>\n<p>junctionReactionLeft<\/p>\n<p>customReactionType<\/p>\n<p>junctionReactionRight<\/p>\n<p>customConditions<\/p>\n<p>enterRule<\/p>\n<p>getRuleIndex<\/p>\n"
                      }]
                    },
                    "BiochemicalReactionContext": {
                      "ownKey": "BiochemicalReactionContext",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "BiochemicalReactionContext",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser/BiochemicalReactionContext"
                        },
                        "description": "",
                        "title": "BiochemicalReactionContext",
                        "content": "<p><init><\/p>\n<p>exitRule<\/p>\n<p>biochemicalReactionLeft<\/p>\n<p>accept<\/p>\n<p>customReactionType<\/p>\n<p>biochemicalReactionRight<\/p>\n<p>customConditions<\/p>\n<p>enterRule<\/p>\n<p>getRuleIndex<\/p>\n"
                      }]
                    },
                    "CreateJunctionJunctionContext": {
                      "ownKey": "CreateJunctionJunctionContext",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "CreateJunctionJunctionContext",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser/CreateJunctionJunctionContext"
                        },
                        "description": "",
                        "title": "CreateJunctionJunctionContext",
                        "content": "<p><init><\/p>\n<p>exitRule<\/p>\n<p>accept<\/p>\n<p>junction<\/p>\n<p>enterRule<\/p>\n<p>getRuleIndex<\/p>\n"
                      }]
                    },
                    "ConcentrationContext": {
                      "ownKey": "ConcentrationContext",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "ConcentrationContext",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser/ConcentrationContext"
                        },
                        "description": "",
                        "title": "ConcentrationContext",
                        "content": "<p><init><\/p>\n<p>exitRule<\/p>\n<p>accept<\/p>\n<p>POSDOUBLE<\/p>\n<p>enterRule<\/p>\n<p>getRuleIndex<\/p>\n"
                      }]
                    },
                    "ReactionContext": {
                      "ownKey": "ReactionContext",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "ReactionContext",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser/ReactionContext"
                        },
                        "description": "",
                        "title": "ReactionContext",
                        "content": "<p><init><\/p>\n<p>junctionReaction<\/p>\n<p>exitRule<\/p>\n<p>accept<\/p>\n<p>createJunction<\/p>\n<p>biochemicalReaction<\/p>\n<p>enterRule<\/p>\n<p>getRuleIndex<\/p>\n"
                      }]
                    },
                    "JunctionRightContext": {
                      "ownKey": "JunctionRightContext",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "JunctionRightContext",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser/JunctionRightContext"
                        },
                        "description": "",
                        "title": "JunctionRightContext",
                        "content": "<p><init><\/p>\n<p>exitRule<\/p>\n<p>biomolecule<\/p>\n<p>biomolecule<\/p>\n<p>accept<\/p>\n<p>enterRule<\/p>\n<p>getRuleIndex<\/p>\n"
                      }]
                    },
                    "BiochemicalReactionRightInNeighborContextContext": {
                      "ownKey": "BiochemicalReactionRightInNeighborContextContext",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "BiochemicalReactionRightInNeighborContextContext",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser/BiochemicalReactionRightInNeighborContextContext"
                        },
                        "description": "",
                        "title": "BiochemicalReactionRightInNeighborContextContext",
                        "content": "<p><init><\/p>\n<p>exitRule<\/p>\n<p>accept<\/p>\n<p>biochemicalReactionRightElem<\/p>\n<p>biochemicalReactionRightElem<\/p>\n<p>enterRule<\/p>\n<p>getRuleIndex<\/p>\n"
                      }]
                    },
                    "JunctionLeftContext": {
                      "ownKey": "JunctionLeftContext",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "JunctionLeftContext",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser/JunctionLeftContext"
                        },
                        "description": "",
                        "title": "JunctionLeftContext",
                        "content": "<p><init><\/p>\n<p>exitRule<\/p>\n<p>biomolecule<\/p>\n<p>biomolecule<\/p>\n<p>accept<\/p>\n<p>enterRule<\/p>\n<p>getRuleIndex<\/p>\n"
                      }]
                    },
                    "BiochemicalReactionLeftInNeighborContextContext": {
                      "ownKey": "BiochemicalReactionLeftInNeighborContextContext",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "BiochemicalReactionLeftInNeighborContextContext",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser/BiochemicalReactionLeftInNeighborContextContext"
                        },
                        "description": "",
                        "title": "BiochemicalReactionLeftInNeighborContextContext",
                        "content": "<p><init><\/p>\n<p>exitRule<\/p>\n<p>biomolecule<\/p>\n<p>biomolecule<\/p>\n<p>accept<\/p>\n<p>enterRule<\/p>\n<p>getRuleIndex<\/p>\n"
                      }]
                    },
                    "CustomConditionsContext": {
                      "ownKey": "CustomConditionsContext",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "CustomConditionsContext",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser/CustomConditionsContext"
                        },
                        "description": "",
                        "title": "CustomConditionsContext",
                        "content": "<p><init><\/p>\n<p>exitRule<\/p>\n<p>accept<\/p>\n<p>customCondition<\/p>\n<p>customCondition<\/p>\n<p>enterRule<\/p>\n<p>getRuleIndex<\/p>\n"
                      }]
                    },
                    "JavaClassContext": {
                      "ownKey": "JavaClassContext",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "JavaClassContext",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser/JavaClassContext"
                        },
                        "description": "",
                        "title": "JavaClassContext",
                        "content": "<p><init><\/p>\n<p>exitRule<\/p>\n<p>accept<\/p>\n<p>LITERAL<\/p>\n<p>LITERAL<\/p>\n<p>enterRule<\/p>\n<p>getRuleIndex<\/p>\n"
                      }]
                    },
                    "CustomConditionContext": {
                      "ownKey": "CustomConditionContext",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "CustomConditionContext",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser/CustomConditionContext"
                        },
                        "description": "",
                        "title": "CustomConditionContext",
                        "content": "<p><init><\/p>\n<p>exitRule<\/p>\n<p>javaConstructor<\/p>\n<p>accept<\/p>\n<p>enterRule<\/p>\n<p>getRuleIndex<\/p>\n"
                      }]
                    },
                    "JunctionReactionJunctionContext": {
                      "ownKey": "JunctionReactionJunctionContext",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "JunctionReactionJunctionContext",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser/JunctionReactionJunctionContext"
                        },
                        "description": "",
                        "title": "JunctionReactionJunctionContext",
                        "content": "<p><init><\/p>\n<p>exitRule<\/p>\n<p>accept<\/p>\n<p>junction<\/p>\n<p>enterRule<\/p>\n<p>getRuleIndex<\/p>\n"
                      }]
                    },
                    "JunctionReactionJunctionConditionContext": {
                      "ownKey": "JunctionReactionJunctionConditionContext",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "JunctionReactionJunctionConditionContext",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser/JunctionReactionJunctionConditionContext"
                        },
                        "description": "",
                        "title": "JunctionReactionJunctionConditionContext",
                        "content": "<p><init><\/p>\n<p>exitRule<\/p>\n<p>accept<\/p>\n<p>junction<\/p>\n<p>enterRule<\/p>\n<p>getRuleIndex<\/p>\n"
                      }]
                    },
                    "BiochemicalReactionRightInCellContextContext": {
                      "ownKey": "BiochemicalReactionRightInCellContextContext",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "BiochemicalReactionRightInCellContextContext",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser/BiochemicalReactionRightInCellContextContext"
                        },
                        "description": "",
                        "title": "BiochemicalReactionRightInCellContextContext",
                        "content": "<p><init><\/p>\n<p>exitRule<\/p>\n<p>accept<\/p>\n<p>biochemicalReactionRightElem<\/p>\n<p>biochemicalReactionRightElem<\/p>\n<p>enterRule<\/p>\n<p>getRuleIndex<\/p>\n"
                      }]
                    },
                    "ArgContext": {
                      "ownKey": "ArgContext",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "ArgContext",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser/ArgContext"
                        },
                        "description": "",
                        "title": "ArgContext",
                        "content": "<p><init><\/p>\n<p>exitRule<\/p>\n<p>accept<\/p>\n<p>LITERAL<\/p>\n<p>decimal<\/p>\n<p>enterRule<\/p>\n<p>getRuleIndex<\/p>\n"
                      }]
                    },
                    "CreateJunctionRightContext": {
                      "ownKey": "CreateJunctionRightContext",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "CreateJunctionRightContext",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser/CreateJunctionRightContext"
                        },
                        "description": "",
                        "title": "CreateJunctionRightContext",
                        "content": "<p><init><\/p>\n<p>exitRule<\/p>\n<p>accept<\/p>\n<p>biochemicalReactionRightContext<\/p>\n<p>biochemicalReactionRightContext<\/p>\n<p>createJunctionJunction<\/p>\n<p>enterRule<\/p>\n<p>getRuleIndex<\/p>\n"
                      }]
                    },
                    "JunctionReactionRightContext": {
                      "ownKey": "JunctionReactionRightContext",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "JunctionReactionRightContext",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser/JunctionReactionRightContext"
                        },
                        "description": "",
                        "title": "JunctionReactionRightContext",
                        "content": "<p><init><\/p>\n<p>exitRule<\/p>\n<p>accept<\/p>\n<p>biochemicalReactionRightContext<\/p>\n<p>biochemicalReactionRightContext<\/p>\n<p>enterRule<\/p>\n<p>junctionReactionJunction<\/p>\n<p>junctionReactionJunction<\/p>\n<p>getRuleIndex<\/p>\n"
                      }]
                    },
                    "BiochemicalReactionLeftContextContext": {
                      "ownKey": "BiochemicalReactionLeftContextContext",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "BiochemicalReactionLeftContextContext",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser/BiochemicalReactionLeftContextContext"
                        },
                        "description": "",
                        "title": "BiochemicalReactionLeftContextContext",
                        "content": "<p><init><\/p>\n<p>exitRule<\/p>\n<p>biochemicalReactionLeftInEnvContext<\/p>\n<p>accept<\/p>\n<p>biochemicalReactionLeftInCellContext<\/p>\n<p>biochemicalReactionLeftInNeighborContext<\/p>\n<p>enterRule<\/p>\n<p>getRuleIndex<\/p>\n"
                      }]
                    },
                    "BiochemicalReactionLeftContext": {
                      "ownKey": "BiochemicalReactionLeftContext",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "BiochemicalReactionLeftContext",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser/BiochemicalReactionLeftContext"
                        },
                        "description": "",
                        "title": "BiochemicalReactionLeftContext",
                        "content": "<p><init><\/p>\n<p>exitRule<\/p>\n<p>accept<\/p>\n<p>biochemicalReactionLeftContext<\/p>\n<p>biochemicalReactionLeftContext<\/p>\n<p>enterRule<\/p>\n<p>getRuleIndex<\/p>\n"
                      }]
                    },
                    "CreateJunctionContext": {
                      "ownKey": "CreateJunctionContext",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "CreateJunctionContext",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser/CreateJunctionContext"
                        },
                        "description": "",
                        "title": "CreateJunctionContext",
                        "content": "<p><init><\/p>\n<p>exitRule<\/p>\n<p>accept<\/p>\n<p>createJunctionLeft<\/p>\n<p>createJunctionRight<\/p>\n<p>customReactionType<\/p>\n<p>customConditions<\/p>\n<p>enterRule<\/p>\n<p>getRuleIndex<\/p>\n"
                      }]
                    },
                    "BiochemicalReactionRightContext": {
                      "ownKey": "BiochemicalReactionRightContext",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "BiochemicalReactionRightContext",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser/BiochemicalReactionRightContext"
                        },
                        "description": "",
                        "title": "BiochemicalReactionRightContext",
                        "content": "<p><init><\/p>\n<p>exitRule<\/p>\n<p>accept<\/p>\n<p>biochemicalReactionRightContext<\/p>\n<p>biochemicalReactionRightContext<\/p>\n<p>enterRule<\/p>\n<p>getRuleIndex<\/p>\n"
                      }]
                    },
                    "JunctionContext": {
                      "ownKey": "JunctionContext",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "JunctionContext",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser/JunctionContext"
                        },
                        "description": "",
                        "title": "JunctionContext",
                        "content": "<p><init><\/p>\n<p>exitRule<\/p>\n<p>junctionRight<\/p>\n<p>junctionLeft<\/p>\n<p>accept<\/p>\n<p>enterRule<\/p>\n<p>getRuleIndex<\/p>\n"
                      }]
                    },
                    "JunctionReactionLeftContext": {
                      "ownKey": "JunctionReactionLeftContext",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "JunctionReactionLeftContext",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser/JunctionReactionLeftContext"
                        },
                        "description": "",
                        "title": "JunctionReactionLeftContext",
                        "content": "<p><init><\/p>\n<p>junctionReactionJunctionCondition<\/p>\n<p>junctionReactionJunctionCondition<\/p>\n<p>exitRule<\/p>\n<p>accept<\/p>\n<p>biochemicalReactionLeftContext<\/p>\n<p>biochemicalReactionLeftContext<\/p>\n<p>enterRule<\/p>\n<p>getRuleIndex<\/p>\n"
                      }]
                    }
                  },
                  "ownPages": [{
                    "reference": {
                      "path": "it/unibo/alchemist/biochemistrydsl",
                      "baseUrl": "https://alchemistsimulator.github.io/latest",
                      "fileName": "BiochemistrydslParser",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/biochemistrydsl/BiochemistrydslParser"
                    },
                    "description": "",
                    "title": "BiochemistrydslParser",
                    "content": "<p><init><\/p>\n<p>T__0<\/p>\n<p>T__1<\/p>\n<p>T__2<\/p>\n<p>T__3<\/p>\n<p>T__4<\/p>\n<p>T__5<\/p>\n<p>T__6<\/p>\n<p>T__7<\/p>\n<p>T__8<\/p>\n<p>T__9<\/p>\n<p>T__10<\/p>\n<p>T__11<\/p>\n<p>T__12<\/p>\n<p>T__13<\/p>\n<p>T__14<\/p>\n<p>T__15<\/p>\n<p>T__16<\/p>\n<p>T__17<\/p>\n<p>POSDOUBLE<\/p>\n<p>LITERAL<\/p>\n<p>WS<\/p>\n<p>ErrorCharacter<\/p>\n<p>RULE_reaction<\/p>\n<p>RULE_biochemicalReaction<\/p>\n<p>RULE_createJunction<\/p>\n<p>RULE_junctionReaction<\/p>\n<p>RULE_javaConstructor<\/p>\n<p>RULE_javaClass<\/p>\n<p>RULE_argList<\/p>\n<p>RULE_arg<\/p>\n<p>RULE_createJunctionLeft<\/p>\n<p>RULE_createJunctionRight<\/p>\n<p>RULE_createJunctionJunction<\/p>\n<p>RULE_junctionReactionLeft<\/p>\n<p>RULE_junctionReactionRight<\/p>\n<p>RULE_junctionReactionJunctionCondition<\/p>\n<p>RULE_junctionReactionJunction<\/p>\n<p>RULE_biochemicalReactionLeft<\/p>\n<p>RULE_biochemicalReactionRight<\/p>\n<p>RULE_customConditions<\/p>\n<p>RULE_customReactionType<\/p>\n<p>RULE_biochemicalReactionLeftContext<\/p>\n<p>RULE_biochemicalReactionLeftInCellContext<\/p>\n<p>RULE_biochemicalReactionLeftInEnvContext<\/p>\n<p>RULE_biochemicalReactionLeftInNeighborContext<\/p>\n<p>RULE_biochemicalReactionRightContext<\/p>\n<p>RULE_biochemicalReactionRightInCellContext<\/p>\n<p>RULE_biochemicalReactionRightInEnvContext<\/p>\n<p>RULE_biochemicalReactionRightInNeighborContext<\/p>\n<p>RULE_biochemicalReactionRightElem<\/p>\n<p>RULE_customCondition<\/p>\n<p>RULE_junction<\/p>\n<p>RULE_junctionLeft<\/p>\n<p>RULE_junctionRight<\/p>\n<p>RULE_biomolecule<\/p>\n<p>RULE_concentration<\/p>\n<p>RULE_decimal<\/p>\n<p>ruleNames<\/p>\n<p>VOCABULARY<\/p>\n<p>tokenNames<\/p>\n<p>_serializedATN<\/p>\n<p>_ATN<\/p>\n<p>junctionReaction<\/p>\n<p>junctionLeft<\/p>\n<p>customReactionType<\/p>\n<p>getTokenNames<\/p>\n<p>biochemicalReactionRightInCellContext<\/p>\n<p>createJunctionJunction<\/p>\n<p>biochemicalReactionLeftInEnvContext<\/p>\n<p>junctionRight<\/p>\n<p>argList<\/p>\n<p>javaClass<\/p>\n<p>junction<\/p>\n<p>biomolecule<\/p>\n<p>biochemicalReactionLeftInCellContext<\/p>\n<p>junctionReactionRight<\/p>\n<p>biochemicalReactionRight<\/p>\n<p>javaConstructor<\/p>\n<p>junctionReactionLeft<\/p>\n<p>biochemicalReactionLeftInNeighborContext<\/p>\n<p>biochemicalReactionRightInNeighborContext<\/p>\n<p>getATN<\/p>\n<p>arg<\/p>\n<p>biochemicalReactionRightContext<\/p>\n<p>getSerializedATN<\/p>\n<p>createJunction<\/p>\n<p>biochemicalReactionRightInEnvContext<\/p>\n<p>concentration<\/p>\n<p>createJunctionLeft<\/p>\n<p>biochemicalReactionLeftContext<\/p>\n<p>getGrammarFileName<\/p>\n<p>biochemicalReaction<\/p>\n<p>customConditions<\/p>\n<p>junctionReactionJunctionCondition<\/p>\n<p>biochemicalReactionLeft<\/p>\n<p>reaction<\/p>\n<p>createJunctionRight<\/p>\n<p>getVocabulary<\/p>\n<p>biochemicalReactionRightElem<\/p>\n<p>decimal<\/p>\n<p>customCondition<\/p>\n<p>getRuleNames<\/p>\n<p>junctionReactionJunction<\/p>\n"
                  }]
                },
                "BiochemistrydslLexer": {
                  "ownKey": "BiochemistrydslLexer",
                  "ownPages": [{
                    "reference": {
                      "path": "it/unibo/alchemist/biochemistrydsl",
                      "baseUrl": "https://alchemistsimulator.github.io/latest",
                      "fileName": "BiochemistrydslLexer",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/biochemistrydsl/BiochemistrydslLexer"
                    },
                    "description": "",
                    "title": "BiochemistrydslLexer",
                    "content": "<p><init><\/p>\n<p>T__0<\/p>\n<p>T__1<\/p>\n<p>T__2<\/p>\n<p>T__3<\/p>\n<p>T__4<\/p>\n<p>T__5<\/p>\n<p>T__6<\/p>\n<p>T__7<\/p>\n<p>T__8<\/p>\n<p>T__9<\/p>\n<p>T__10<\/p>\n<p>T__11<\/p>\n<p>T__12<\/p>\n<p>T__13<\/p>\n<p>T__14<\/p>\n<p>T__15<\/p>\n<p>T__16<\/p>\n<p>T__17<\/p>\n<p>POSDOUBLE<\/p>\n<p>LITERAL<\/p>\n<p>WS<\/p>\n<p>ErrorCharacter<\/p>\n<p>modeNames<\/p>\n<p>ruleNames<\/p>\n<p>VOCABULARY<\/p>\n<p>tokenNames<\/p>\n<p>_serializedATN<\/p>\n<p>_ATN<\/p>\n<p>getModeNames<\/p>\n<p>getATN<\/p>\n<p>getTokenNames<\/p>\n<p>getSerializedATN<\/p>\n<p>getGrammarFileName<\/p>\n<p>getRuleNames<\/p>\n<p>getVocabulary<\/p>\n"
                  }]
                }
              },
              "ownPages": [{
                "reference": {
                  "path": "it/unibo/alchemist",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "biochemistrydsl",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/biochemistrydsl"
                },
                "description": "",
                "title": "it.unibo.alchemist.biochemistrydsl",
                "content": ""
              }]
            },
            "utils": {
              "ownKey": "utils",
              "childrenPages": {"MapUtils": {
                "ownKey": "MapUtils",
                "ownPages": [{
                  "reference": {
                    "path": "it/unibo/alchemist/utils",
                    "baseUrl": "https://alchemistsimulator.github.io/latest",
                    "fileName": "MapUtils",
                    "extension": "html",
                    "usePrettyUrl": true,
                    "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/utils/MapUtils"
                  },
                  "description": "",
                  "title": "MapUtils",
                  "content": "<p>getDistance\nReturns the distance in meters.\ngetDistance\nReturns the distance in meters.\ninitialBearing<\/p>\n<p>getDestinationLocation<\/p>\n<p>getDestinationLocation<\/p>\n<p>toLatLng\nConverts GeoPosition to LatLng.\ntoLatLng\nBuilds a new LatLng.\ntoLatLong\nConverts LatLng to LatLongPosition.\ntoLatLong\nBuilds a new LatLongPosition.<\/p>\n"
                }]
              }},
              "ownPages": [{
                "reference": {
                  "path": "it/unibo/alchemist",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "utils",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/utils"
                },
                "description": "",
                "title": "it.unibo.alchemist.utils",
                "content": ""
              }]
            },
            "grid": {
              "ownKey": "grid",
              "childrenPages": {
                "cluster": {
                  "ownKey": "cluster",
                  "childrenPages": {
                    "ClusterImpl": {
                      "ownKey": "ClusterImpl",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/grid/cluster",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "ClusterImpl",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/grid/cluster/ClusterImpl"
                        },
                        "description": "",
                        "title": "ClusterImpl",
                        "content": "<p>An implementation of Cluster uses Apache Ignite.<init><\/p>\n<p>getWorkersSet<\/p>\n<p>close<\/p>\n"
                      }]
                    },
                    "WorkerSet": {
                      "ownKey": "WorkerSet",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/grid/cluster",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "WorkerSet",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/grid/cluster/WorkerSet"
                        },
                        "description": "",
                        "title": "WorkerSet",
                        "content": "<p>Set of remote nodes that can run simulations.<\/p>\n<p>distributeSimulations\nDistribute and execute the simulation set on set's workers.<\/p>\n"
                      }]
                    },
                    "WorkerSetImpl": {
                      "ownKey": "WorkerSetImpl",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/grid/cluster",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "WorkerSetImpl",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/grid/cluster/WorkerSetImpl"
                        },
                        "description": "",
                        "title": "WorkerSetImpl",
                        "content": "<p>Implementation of WorkerSet which uses Apache Ignite.<init><\/p>\n<p>distributeSimulations<\/p>\n"
                      }]
                    },
                    "Cluster": {
                      "ownKey": "Cluster",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/grid/cluster",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Cluster",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/grid/cluster/Cluster"
                        },
                        "description": "",
                        "title": "Cluster",
                        "content": "<p>The entity that represent the joined cluster.<\/p>\n<p>getWorkersSet<\/p>\n<p>close\nLeave the cluster.<\/p>\n"
                      }]
                    }
                  },
                  "ownPages": [{
                    "reference": {
                      "path": "it/unibo/alchemist/grid",
                      "baseUrl": "https://alchemistsimulator.github.io/latest",
                      "fileName": "cluster",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/grid/cluster"
                    },
                    "description": "",
                    "title": "it.unibo.alchemist.grid.cluster",
                    "content": ""
                  }]
                },
                "util": {
                  "ownKey": "util",
                  "childrenPages": {"WorkingDirectory": {
                    "ownKey": "WorkingDirectory",
                    "ownPages": [{
                      "reference": {
                        "path": "it/unibo/alchemist/grid/util",
                        "baseUrl": "https://alchemistsimulator.github.io/latest",
                        "fileName": "WorkingDirectory",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/grid/util/WorkingDirectory"
                      },
                      "description": "",
                      "title": "WorkingDirectory",
                      "content": "<p>Class that manage a temp local working directory.<init>\nCreate new local temp working directory.<\/p>\n<p>getDirectoryUrl<\/p>\n<p>getFileContent\nGet folder's file content.\nwriteFiles\nWrite multiple files inside the directory.\nclose<\/p>\n<p>getFileAbsolutePath<\/p>\n"
                    }]
                  }},
                  "ownPages": [{
                    "reference": {
                      "path": "it/unibo/alchemist/grid",
                      "baseUrl": "https://alchemistsimulator.github.io/latest",
                      "fileName": "util",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/grid/util"
                    },
                    "description": "",
                    "title": "it.unibo.alchemist.grid.util",
                    "content": ""
                  }]
                },
                "simulation": {
                  "ownKey": "simulation",
                  "childrenPages": {
                    "RemoteResult": {
                      "ownKey": "RemoteResult",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/grid/simulation",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "RemoteResult",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/grid/simulation/RemoteResult"
                        },
                        "description": "",
                        "title": "RemoteResult",
                        "content": "<p>Result of RemoteSimulation.<\/p>\n<p>saveLocally\nSave simulation's result in a local file.<\/p>\n"
                      }]
                    },
                    "SimulationSet": {
                      "ownKey": "SimulationSet",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/grid/simulation",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "SimulationSet",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/grid/simulation/SimulationSet"
                        },
                        "description": "",
                        "title": "SimulationSet",
                        "content": "<p>Set of configs for remote simulations creation.<\/p>\n<p>getSimulationConfigs<\/p>\n<p>getGeneralSimulationConfig<\/p>\n<p>computeComplexity<\/p>\n"
                      }]
                    },
                    "SimulationSetImpl": {
                      "ownKey": "SimulationSetImpl",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/grid/simulation",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "SimulationSetImpl",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/grid/simulation/SimulationSetImpl"
                        },
                        "description": "",
                        "title": "SimulationSetImpl",
                        "content": "<p>SimulationSet implementation.<init><\/p>\n<p>getSimulationConfigs<\/p>\n<p>getGeneralSimulationConfig<\/p>\n<p>computeComplexity<\/p>\n"
                      }]
                    },
                    "RemoteSimulation": {
                      "ownKey": "RemoteSimulation",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/grid/simulation",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "RemoteSimulation",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/grid/simulation/RemoteSimulation"
                        },
                        "description": "",
                        "title": "RemoteSimulation",
                        "content": "<p>Alchemist simulation that will be executed in remote cluster's nodes.<\/p>\n"
                      }]
                    },
                    "RemoteResultImpl": {
                      "ownKey": "RemoteResultImpl",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/grid/simulation",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "RemoteResultImpl",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/grid/simulation/RemoteResultImpl"
                        },
                        "description": "",
                        "title": "RemoteResultImpl",
                        "content": "<p>RemoteResult implementation.<init><\/p>\n<p>saveLocally<\/p>\n<p>hashCode<\/p>\n<p>equals<\/p>\n"
                      }]
                    },
                    "RemoteSimulationImpl": {
                      "ownKey": "RemoteSimulationImpl",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/grid/simulation",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "RemoteSimulationImpl",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/grid/simulation/RemoteSimulationImpl"
                        },
                        "description": "",
                        "title": "RemoteSimulationImpl",
                        "content": "<p>RemoteSimulation implementation for Apache Ignite.<init><\/p>\n<p>call<\/p>\n"
                      }]
                    },
                    "ComplexityImpl": {
                      "ownKey": "ComplexityImpl",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/grid/simulation",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "ComplexityImpl",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/grid/simulation/ComplexityImpl"
                        },
                        "description": "",
                        "title": "ComplexityImpl",
                        "content": "<p>Complexity implementation.<init><\/p>\n<p>getRamUsage<\/p>\n<p>getCpuUsage<\/p>\n"
                      }]
                    },
                    "Complexity": {
                      "ownKey": "Complexity",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/grid/simulation",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Complexity",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/grid/simulation/Complexity"
                        },
                        "description": "",
                        "title": "Complexity",
                        "content": "<p>An entity which represents a simulation's complexity.<\/p>\n<p>getRamUsage<\/p>\n<p>getCpuUsage<\/p>\n"
                      }]
                    }
                  },
                  "ownPages": [{
                    "reference": {
                      "path": "it/unibo/alchemist/grid",
                      "baseUrl": "https://alchemistsimulator.github.io/latest",
                      "fileName": "simulation",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/grid/simulation"
                    },
                    "description": "",
                    "title": "it.unibo.alchemist.grid.simulation",
                    "content": ""
                  }]
                },
                "config": {
                  "ownKey": "config",
                  "childrenPages": {
                    "SimulationConfigImpl": {
                      "ownKey": "SimulationConfigImpl",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/grid/config",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "SimulationConfigImpl",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/grid/config/SimulationConfigImpl"
                        },
                        "description": "",
                        "title": "SimulationConfigImpl",
                        "content": "<p>SimulationConfig implementation.<init><\/p>\n<p>hashCode<\/p>\n<p>getVariables<\/p>\n<p>equals<\/p>\n<p>toString<\/p>\n"
                      }]
                    },
                    "LightInfoGeneralSimulationConfig": {
                      "ownKey": "LightInfoGeneralSimulationConfig",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/grid/config",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "LightInfoGeneralSimulationConfig",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/grid/config/LightInfoGeneralSimulationConfig"
                        },
                        "description": "",
                        "title": "LightInfoGeneralSimulationConfig",
                        "content": "<p>Abstract simulation config that contains small serializable informations.<init><\/p>\n<p><init><\/p>\n<p><init><\/p>\n<p>getEndStep<\/p>\n<p>getLoader<\/p>\n<p>getDependencies<\/p>\n<p>getEndTime<\/p>\n"
                      }]
                    },
                    "SimulationConfig": {
                      "ownKey": "SimulationConfig",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/grid/config",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "SimulationConfig",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/grid/config/SimulationConfig"
                        },
                        "description": "",
                        "title": "SimulationConfig",
                        "content": "<p>Simulation's configs for only one simulation.<\/p>\n<p>getVariables<\/p>\n"
                      }]
                    },
                    "GeneralSimulationConfig": {
                      "ownKey": "GeneralSimulationConfig",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/grid/config",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "GeneralSimulationConfig",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/grid/config/GeneralSimulationConfig"
                        },
                        "description": "",
                        "title": "GeneralSimulationConfig",
                        "content": "<p>Simulation's configs valid for more than one simulation.<\/p>\n<p>getEndStep<\/p>\n<p>getLoader<\/p>\n<p>getDependencies<\/p>\n<p>getEndTime<\/p>\n"
                      }]
                    },
                    "LocalGeneralSimulationConfig": {
                      "ownKey": "LocalGeneralSimulationConfig",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/grid/config",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "LocalGeneralSimulationConfig",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/grid/config/LocalGeneralSimulationConfig"
                        },
                        "description": "",
                        "title": "LocalGeneralSimulationConfig",
                        "content": "<p>Local GeneralSimulationConfig that contains all information in local memory.<init><\/p>\n<p><init><\/p>\n<p>getDependencies<\/p>\n"
                      }]
                    },
                    "RemoteGeneralSimulationConfig": {
                      "ownKey": "RemoteGeneralSimulationConfig",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/grid/config",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "RemoteGeneralSimulationConfig",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/grid/config/RemoteGeneralSimulationConfig"
                        },
                        "description": "",
                        "title": "RemoteGeneralSimulationConfig",
                        "content": "<p>Remote GeneralSimulationConfig that stores big informations in Ignite's cache.<init><\/p>\n<p>getDependencies<\/p>\n<p>close<\/p>\n"
                      }]
                    }
                  },
                  "ownPages": [{
                    "reference": {
                      "path": "it/unibo/alchemist/grid",
                      "baseUrl": "https://alchemistsimulator.github.io/latest",
                      "fileName": "config",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/grid/config"
                    },
                    "description": "",
                    "title": "it.unibo.alchemist.grid.config",
                    "content": ""
                  }]
                },
                "exceptions": {
                  "ownKey": "exceptions",
                  "childrenPages": {"RemoteSimulationException": {
                    "ownKey": "RemoteSimulationException",
                    "ownPages": [{
                      "reference": {
                        "path": "it/unibo/alchemist/grid/exceptions",
                        "baseUrl": "https://alchemistsimulator.github.io/latest",
                        "fileName": "RemoteSimulationException",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/grid/exceptions/RemoteSimulationException"
                      },
                      "description": "",
                      "title": "RemoteSimulationException",
                      "content": "<p><init><\/p>\n<p><init><\/p>\n"
                    }]
                  }},
                  "ownPages": [{
                    "reference": {
                      "path": "it/unibo/alchemist/grid",
                      "baseUrl": "https://alchemistsimulator.github.io/latest",
                      "fileName": "exceptions",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/grid/exceptions"
                    },
                    "description": "",
                    "title": "it.unibo.alchemist.grid.exceptions",
                    "content": ""
                  }]
                }
              }
            },
            "SupportedIncarnations": {
              "ownKey": "SupportedIncarnations",
              "ownPages": [{
                "reference": {
                  "path": "it/unibo/alchemist",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "SupportedIncarnations",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/SupportedIncarnations"
                },
                "description": "",
                "title": "SupportedIncarnations",
                "content": "<p>This enum interfaces the generic components of the graphical interface with the specific incarnation details.<\/p>\n<p>getAvailableIncarnations<\/p>\n<p>get\nFetches an incarnation whose name matches the supplied string.<\/p>\n"
              }]
            },
            "ClassPathScanner": {
              "ownKey": "ClassPathScanner",
              "ownPages": [{
                "reference": {
                  "path": "it/unibo/alchemist",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "ClassPathScanner",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/ClassPathScanner"
                },
                "description": "",
                "title": "ClassPathScanner",
                "content": "<p>An utility class providing support for loading arbitrary subclasses available in the classpath.<\/p>\n<p>subTypesOf\nThis function loads all subtypes of the provided Java class that can be discovered on the current classpath.<p>This function cannot use <code>reified<\/code> and <code>inline<\/code> (as it should have) due to Java being unaware of the required\ntransformation to use them.<\/p>\nsubTypesOf<\/p>\n<p>resourcesMatching\nThis function returns a list of all the resources in a certain (optional) package matching a regular expression.<p>This function cannot use <code>reified<\/code> and <code>inline<\/code> (as it should have) due to Java being unaware of the required\ntransformation to use them.<\/p>\nresourcesMatchingAsStream<\/p>\n"
              }]
            },
            "model": {
              "ownKey": "model",
              "childrenPages": {
                "cognitiveagents": {
                  "ownKey": "cognitiveagents",
                  "childrenPages": {"characteristics": {
                    "ownKey": "characteristics",
                    "childrenPages": {
                      "cognitive": {
                        "ownKey": "cognitive",
                        "childrenPages": {
                          "DesireWalkRandomly": {
                            "ownKey": "DesireWalkRandomly",
                            "ownPages": [{
                              "reference": {
                                "path": "it/unibo/alchemist/model/cognitiveagents/characteristics/cognitive",
                                "baseUrl": "https://alchemistsimulator.github.io/latest",
                                "fileName": "DesireWalkRandomly",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/cognitiveagents/characteristics/cognitive/DesireWalkRandomly"
                              },
                              "description": "",
                              "title": "DesireWalkRandomly",
                              "content": "<p>The desire not to evacuate.<init>\nThe desire not to evacuate.<\/p>\n<p>combinationFunction\nAlgorithm which decides how the parameters involved\nin the evolution of this characteristic must be combined together.\nIt can be either a max, min, summation or any other type of function.<\/p>\n"
                            }]
                          },
                          "OrientingAgent": {
                            "ownKey": "OrientingAgent",
                            "ownPages": [{
                              "reference": {
                                "path": "it/unibo/alchemist/model/cognitiveagents/characteristics/cognitive",
                                "baseUrl": "https://alchemistsimulator.github.io/latest",
                                "fileName": "OrientingAgent",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/cognitiveagents/characteristics/cognitive/OrientingAgent"
                              },
                              "description": "",
                              "title": "OrientingAgent",
                              "content": "<p>An agent capable of orienting itself inside an environment.\nknowledgeDegree\nThe knowledge degree of the agent concerning the environment. It's\na percentage value in <a href=\"#\">0,1<\/a>.\ncognitiveMap\nThe cognitive map of the agent. A cognitive map is composed of landmarks\n(elements of the environment easy to remember due to their uniqueness)\nand spatial relations between them, it is represented using a NavigationGraph.\nvolatileMemory\nThe volatile memory of the agent, it models the ability to remember rooms\nor spaces of the environment already visited by the agent since the start\nof the simulation. In particular, each room is paired with the number of\nvisits.<\/p>\n"
                            }]
                          },
                          "BodyCognitiveCharacteristic": {
                            "ownKey": "BodyCognitiveCharacteristic",
                            "ownPages": [{
                              "reference": {
                                "path": "it/unibo/alchemist/model/cognitiveagents/characteristics/cognitive",
                                "baseUrl": "https://alchemistsimulator.github.io/latest",
                                "fileName": "BodyCognitiveCharacteristic",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/cognitiveagents/characteristics/cognitive/BodyCognitiveCharacteristic"
                              },
                              "description": "",
                              "title": "BodyCognitiveCharacteristic",
                              "content": "<p>A cognitive characteristic which has a body response.<init>\nA cognitive characteristic which has a body response.<\/p>\n<p>update\nUpdate the current intensity of this characteristic.<\/p>\n"
                            }]
                          },
                          "CognitiveSpec": {
                            "ownKey": "CognitiveSpec",
                            "ownPages": [{
                              "reference": {
                                "path": "it/unibo/alchemist/model/cognitiveagents/characteristics/cognitive",
                                "baseUrl": "https://alchemistsimulator.github.io/latest",
                                "fileName": "CognitiveSpec",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/cognitiveagents/characteristics/cognitive/CognitiveSpec"
                              },
                              "description": "",
                              "title": "CognitiveSpec",
                              "content": "<p>A specification of the parameters regarding cognitive characteristics to load from a config file.\nsensingOmega<\/p>\n<p>affectiveBiasingOmega<\/p>\n<p>persistingOmega<\/p>\n<p>amplifyingFeelingOmega<\/p>\n<p>inhibitingFeelingOmega<\/p>\n<p>amplifyingEvacuationOmega<\/p>\n<p>inhibitingWalkRandOmega<\/p>\n<p>amplifyingIntentionOmega<\/p>\n<p>inhibitingIntentionOmega<\/p>\n<p>mentalEta<\/p>\n<p>bodyEta<\/p>\n<p>logisticSigma<\/p>\n<p>logisticTau<\/p>\n<p>advancedLogisticSigma<\/p>\n<p>advancedLogisticTau<\/p>\n"
                            }]
                          },
                          "CognitiveCharacteristic": {
                            "ownKey": "CognitiveCharacteristic",
                            "ownPages": [{
                              "reference": {
                                "path": "it/unibo/alchemist/model/cognitiveagents/characteristics/cognitive",
                                "baseUrl": "https://alchemistsimulator.github.io/latest",
                                "fileName": "CognitiveCharacteristic",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/cognitiveagents/characteristics/cognitive/CognitiveCharacteristic"
                              },
                              "description": "",
                              "title": "CognitiveCharacteristic",
                              "content": "<p>A characteristic which depends on the other agents in the environment.<\/p>\n<p>level\nThe current intensity of this characteristic.\nupdate\nUpdate the current intensity of this characteristic.<\/p>\n"
                            }]
                          },
                          "MentalCognitiveCharacteristic": {
                            "ownKey": "MentalCognitiveCharacteristic",
                            "ownPages": [{
                              "reference": {
                                "path": "it/unibo/alchemist/model/cognitiveagents/characteristics/cognitive",
                                "baseUrl": "https://alchemistsimulator.github.io/latest",
                                "fileName": "MentalCognitiveCharacteristic",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/cognitiveagents/characteristics/cognitive/MentalCognitiveCharacteristic"
                              },
                              "description": "",
                              "title": "MentalCognitiveCharacteristic",
                              "content": "<p>A cognitive characteristic which has a mental response.<init>\nA cognitive characteristic which has a mental response.<\/p>\n<p>update\nUpdate the current intensity of this characteristic.<\/p>\n"
                            }]
                          },
                          "DesireEvacuate": {
                            "ownKey": "DesireEvacuate",
                            "ownPages": [{
                              "reference": {
                                "path": "it/unibo/alchemist/model/cognitiveagents/characteristics/cognitive",
                                "baseUrl": "https://alchemistsimulator.github.io/latest",
                                "fileName": "DesireEvacuate",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/cognitiveagents/characteristics/cognitive/DesireEvacuate"
                              },
                              "description": "",
                              "title": "DesireEvacuate",
                              "content": "<p>The desire to evacuate.<init>\nThe desire to evacuate.<\/p>\n<p>combinationFunction\nAlgorithm which decides how the parameters involved\nin the evolution of this characteristic must be combined together.\nIt can be either a max, min, summation or any other type of function.<\/p>\n"
                            }]
                          },
                          "AbstractCognitiveCharacteristic": {
                            "ownKey": "AbstractCognitiveCharacteristic",
                            "ownPages": [{
                              "reference": {
                                "path": "it/unibo/alchemist/model/cognitiveagents/characteristics/cognitive",
                                "baseUrl": "https://alchemistsimulator.github.io/latest",
                                "fileName": "AbstractCognitiveCharacteristic",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/cognitiveagents/characteristics/cognitive/AbstractCognitiveCharacteristic"
                              },
                              "description": "",
                              "title": "AbstractCognitiveCharacteristic",
                              "content": "<p>The generic implementation of a cognitive characteristic.<init>\nThe generic implementation of a cognitive characteristic.\ncurrentLevel\nThe current level of this characteristic.\nlevel\nThe current intensity of this characteristic.\ncombinationFunction\nAlgorithm which decides how the parameters involved\nin the evolution of this characteristic must be combined together.\nIt can be either a max, min, summation or any other type of function.<\/p>\n"
                            }]
                          },
                          "Fear": {
                            "ownKey": "Fear",
                            "ownPages": [{
                              "reference": {
                                "path": "it/unibo/alchemist/model/cognitiveagents/characteristics/cognitive",
                                "baseUrl": "https://alchemistsimulator.github.io/latest",
                                "fileName": "Fear",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/cognitiveagents/characteristics/cognitive/Fear"
                              },
                              "description": "",
                              "title": "Fear",
                              "content": "<p>The fear emotion.<init>\nThe fear emotion.<\/p>\n<p>combinationFunction\nAlgorithm which decides how the parameters involved\nin the evolution of this characteristic must be combined together.\nIt can be either a max, min, summation or any other type of function.<\/p>\n"
                            }]
                          },
                          "BeliefDanger": {
                            "ownKey": "BeliefDanger",
                            "ownPages": [{
                              "reference": {
                                "path": "it/unibo/alchemist/model/cognitiveagents/characteristics/cognitive",
                                "baseUrl": "https://alchemistsimulator.github.io/latest",
                                "fileName": "BeliefDanger",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/cognitiveagents/characteristics/cognitive/BeliefDanger"
                              },
                              "description": "",
                              "title": "BeliefDanger",
                              "content": "<p>The perception of the situation dangerousness.\nThe name belief derives from the <a href=\"https://doi.org/10.1007/978-3-319-70647-4_11\">IMPACT model<\/a>.<init>\nThe perception of the situation dangerousness.\nThe name belief derives from the <a href=\"https://doi.org/10.1007/978-3-319-70647-4_11\">IMPACT model<\/a>.<\/p>\n<p>combinationFunction\nAlgorithm which decides how the parameters involved\nin the evolution of this characteristic must be combined together.\nIt can be either a max, min, summation or any other type of function.<\/p>\n"
                            }]
                          },
                          "CognitiveAgent": {
                            "ownKey": "CognitiveAgent",
                            "ownPages": [{
                              "reference": {
                                "path": "it/unibo/alchemist/model/cognitiveagents/characteristics/cognitive",
                                "baseUrl": "https://alchemistsimulator.github.io/latest",
                                "fileName": "CognitiveAgent",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/cognitiveagents/characteristics/cognitive/CognitiveAgent"
                              },
                              "description": "",
                              "title": "CognitiveAgent",
                              "content": "<p>An entity capable of having emotions and relations.<\/p>\n<p>dangerBelief\nValue representing the current belief of the situation dangerousness for this pedestrian.\nfear\nValue representing the level of fear of this pedestrian.\nwantsToEvacuate\nWhether or not this pedestrian intends to evacuate.\ncognitiveCharacteristics\nThe list of all the cognitive characteristics of this pedestrian.\ninfluencialPeople\nA list of all the pedestrians inside at least one of the sensory spheres of this pedestrian.<\/p>\n"
                            }]
                          },
                          "IntentionWalkRandomly": {
                            "ownKey": "IntentionWalkRandomly",
                            "ownPages": [{
                              "reference": {
                                "path": "it/unibo/alchemist/model/cognitiveagents/characteristics/cognitive",
                                "baseUrl": "https://alchemistsimulator.github.io/latest",
                                "fileName": "IntentionWalkRandomly",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/cognitiveagents/characteristics/cognitive/IntentionWalkRandomly"
                              },
                              "description": "",
                              "title": "IntentionWalkRandomly",
                              "content": "<p>The intention not to evacuate.<init>\nThe intention not to evacuate.<\/p>\n<p>combinationFunction\nAlgorithm which decides how the parameters involved\nin the evolution of this characteristic must be combined together.\nIt can be either a max, min, summation or any other type of function.<\/p>\n"
                            }]
                          },
                          "IntentionEvacuate": {
                            "ownKey": "IntentionEvacuate",
                            "ownPages": [{
                              "reference": {
                                "path": "it/unibo/alchemist/model/cognitiveagents/characteristics/cognitive",
                                "baseUrl": "https://alchemistsimulator.github.io/latest",
                                "fileName": "IntentionEvacuate",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/cognitiveagents/characteristics/cognitive/IntentionEvacuate"
                              },
                              "description": "",
                              "title": "IntentionEvacuate",
                              "content": "<p>The intention to evacuate of .<init>\nThe intention to evacuate of .<\/p>\n<p>combinationFunction\nAlgorithm which decides how the parameters involved\nin the evolution of this characteristic must be combined together.\nIt can be either a max, min, summation or any other type of function.<\/p>\n"
                            }]
                          }
                        },
                        "ownPages": [{
                          "reference": {
                            "path": "it/unibo/alchemist/model/cognitiveagents/characteristics",
                            "baseUrl": "https://alchemistsimulator.github.io/latest",
                            "fileName": "cognitive",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/cognitiveagents/characteristics/cognitive"
                          },
                          "description": "",
                          "title": "it.unibo.alchemist.model.cognitiveagents.characteristics.cognitive",
                          "content": ""
                        }]
                      },
                      "individual": {
                        "ownKey": "individual",
                        "childrenPages": {
                          "Speed": {
                            "ownKey": "Speed",
                            "ownPages": [{
                              "reference": {
                                "path": "it/unibo/alchemist/model/cognitiveagents/characteristics/individual",
                                "baseUrl": "https://alchemistsimulator.github.io/latest",
                                "fileName": "Speed",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/cognitiveagents/characteristics/individual/Speed"
                              },
                              "description": "",
                              "title": "Speed",
                              "content": "<p>The speed of an agent considering its age, gender and a random factor.<init>\nThe speed of an agent considering its age, gender and a random factor.\nwalking\nThe walking speed of the agent.\nrunning\nThe running speed of the agent.<\/p>\n"
                            }]
                          },
                          "Compliance": {
                            "ownKey": "Compliance",
                            "ownPages": [{
                              "reference": {
                                "path": "it/unibo/alchemist/model/cognitiveagents/characteristics/individual",
                                "baseUrl": "https://alchemistsimulator.github.io/latest",
                                "fileName": "Compliance",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/cognitiveagents/characteristics/individual/Compliance"
                              },
                              "description": "",
                              "title": "Compliance",
                              "content": "<p>The level of compliance of an agent considering its gender and its age.<init>\nThe level of compliance of an agent considering its gender and its age.\nlevel\nThe calculated level of compliance.<\/p>\n"
                            }]
                          },
                          "ComplianceSpec": {
                            "ownKey": "ComplianceSpec",
                            "ownPages": [{
                              "reference": {
                                "path": "it/unibo/alchemist/model/cognitiveagents/characteristics/individual",
                                "baseUrl": "https://alchemistsimulator.github.io/latest",
                                "fileName": "ComplianceSpec",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/cognitiveagents/characteristics/individual/ComplianceSpec"
                              },
                              "description": "",
                              "title": "ComplianceSpec",
                              "content": "<p>A specification of the parameters regarding compliance to load from a config file.\nchildMale<\/p>\n<p>adultMale<\/p>\n<p>elderlyMale<\/p>\n<p>childFemale<\/p>\n<p>adultFemale<\/p>\n<p>elderlyFemale<\/p>\n"
                            }]
                          },
                          "HelpAttitude": {
                            "ownKey": "HelpAttitude",
                            "ownPages": [{
                              "reference": {
                                "path": "it/unibo/alchemist/model/cognitiveagents/characteristics/individual",
                                "baseUrl": "https://alchemistsimulator.github.io/latest",
                                "fileName": "HelpAttitude",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/cognitiveagents/characteristics/individual/HelpAttitude"
                              },
                              "description": "",
                              "title": "HelpAttitude",
                              "content": "<p>The attitude of an agent towards helping another agent.<init>\nThe attitude of an agent towards helping another agent.<\/p>\n<p>level\nThe logic used to calculate the probability of helping.<\/p>\n"
                            }]
                          },
                          "SpeedSpec": {
                            "ownKey": "SpeedSpec",
                            "ownPages": [{
                              "reference": {
                                "path": "it/unibo/alchemist/model/cognitiveagents/characteristics/individual",
                                "baseUrl": "https://alchemistsimulator.github.io/latest",
                                "fileName": "SpeedSpec",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/cognitiveagents/characteristics/individual/SpeedSpec"
                              },
                              "description": "",
                              "title": "SpeedSpec",
                              "content": "<p>A specification of the parameters regarding speeds to load from a config file.\nchildMale<\/p>\n<p>adultMale<\/p>\n<p>elderlyMale<\/p>\n<p>childFemale<\/p>\n<p>adultFemale<\/p>\n<p>elderlyFemale<\/p>\n<p>default<\/p>\n<p>variance<\/p>\n"
                            }]
                          },
                          "HelpAttitudeSpec": {
                            "ownKey": "HelpAttitudeSpec",
                            "childrenPages": {
                              "ElderlyFemale": {
                                "ownKey": "ElderlyFemale",
                                "ownPages": [{
                                  "reference": {
                                    "path": "it/unibo/alchemist/model/cognitiveagents/characteristics/individual/HelpAttitudeSpec",
                                    "baseUrl": "https://alchemistsimulator.github.io/latest",
                                    "fileName": "ElderlyFemale",
                                    "extension": "html",
                                    "usePrettyUrl": true,
                                    "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/cognitiveagents/characteristics/individual/HelpAttitudeSpec/ElderlyFemale"
                                  },
                                  "description": "",
                                  "title": "ElderlyFemale",
                                  "content": "<p>Elderly females attitudes.\nchildMale<\/p>\n<p>adultMale<\/p>\n<p>elderlyMale<\/p>\n<p>childFemale<\/p>\n<p>adultFemale<\/p>\n<p>elderlyFemale<\/p>\n"
                                }]
                              },
                              "ElderlyMale": {
                                "ownKey": "ElderlyMale",
                                "ownPages": [{
                                  "reference": {
                                    "path": "it/unibo/alchemist/model/cognitiveagents/characteristics/individual/HelpAttitudeSpec",
                                    "baseUrl": "https://alchemistsimulator.github.io/latest",
                                    "fileName": "ElderlyMale",
                                    "extension": "html",
                                    "usePrettyUrl": true,
                                    "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/cognitiveagents/characteristics/individual/HelpAttitudeSpec/ElderlyMale"
                                  },
                                  "description": "",
                                  "title": "ElderlyMale",
                                  "content": "<p>Elderly males attitudes.\nchildMale<\/p>\n<p>adultMale<\/p>\n<p>elderlyMale<\/p>\n<p>childFemale<\/p>\n<p>adultFemale<\/p>\n<p>elderlyFemale<\/p>\n"
                                }]
                              },
                              "AdultMale": {
                                "ownKey": "AdultMale",
                                "ownPages": [{
                                  "reference": {
                                    "path": "it/unibo/alchemist/model/cognitiveagents/characteristics/individual/HelpAttitudeSpec",
                                    "baseUrl": "https://alchemistsimulator.github.io/latest",
                                    "fileName": "AdultMale",
                                    "extension": "html",
                                    "usePrettyUrl": true,
                                    "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/cognitiveagents/characteristics/individual/HelpAttitudeSpec/AdultMale"
                                  },
                                  "description": "",
                                  "title": "AdultMale",
                                  "content": "<p>Adult males attitudes.\nchildMale<\/p>\n<p>adultMale<\/p>\n<p>elderlyMale<\/p>\n<p>childFemale<\/p>\n<p>adultFemale<\/p>\n<p>elderlyFemale<\/p>\n"
                                }]
                              },
                              "AdultFemale": {
                                "ownKey": "AdultFemale",
                                "ownPages": [{
                                  "reference": {
                                    "path": "it/unibo/alchemist/model/cognitiveagents/characteristics/individual/HelpAttitudeSpec",
                                    "baseUrl": "https://alchemistsimulator.github.io/latest",
                                    "fileName": "AdultFemale",
                                    "extension": "html",
                                    "usePrettyUrl": true,
                                    "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/cognitiveagents/characteristics/individual/HelpAttitudeSpec/AdultFemale"
                                  },
                                  "description": "",
                                  "title": "AdultFemale",
                                  "content": "<p>Adult females attitudes.\nchildMale<\/p>\n<p>adultMale<\/p>\n<p>elderlyMale<\/p>\n<p>childFemale<\/p>\n<p>adultFemale<\/p>\n<p>elderlyFemale<\/p>\n"
                                }]
                              }
                            },
                            "ownPages": [{
                              "reference": {
                                "path": "it/unibo/alchemist/model/cognitiveagents/characteristics/individual",
                                "baseUrl": "https://alchemistsimulator.github.io/latest",
                                "fileName": "HelpAttitudeSpec",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/cognitiveagents/characteristics/individual/HelpAttitudeSpec"
                              },
                              "description": "",
                              "title": "HelpAttitudeSpec",
                              "content": "<p>A specification of the parameters regarding help attitudes to load from a config file.<\/p>\n"
                            }]
                          },
                          "Gender": {
                            "ownKey": "Gender",
                            "ownPages": [{
                              "reference": {
                                "path": "it/unibo/alchemist/model/cognitiveagents/characteristics/individual",
                                "baseUrl": "https://alchemistsimulator.github.io/latest",
                                "fileName": "Gender",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/cognitiveagents/characteristics/individual/Gender"
                              },
                              "description": "",
                              "title": "Gender",
                              "content": "<p>An enum representing the different genders.<\/p>\n"
                            }]
                          },
                          "Age": {
                            "ownKey": "Age",
                            "ownPages": [{
                              "reference": {
                                "path": "it/unibo/alchemist/model/cognitiveagents/characteristics/individual",
                                "baseUrl": "https://alchemistsimulator.github.io/latest",
                                "fileName": "Age",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/cognitiveagents/characteristics/individual/Age"
                              },
                              "description": "",
                              "title": "Age",
                              "content": "<p>An enum representing the different periods of life.<\/p>\n"
                            }]
                          }
                        },
                        "ownPages": [{
                          "reference": {
                            "path": "it/unibo/alchemist/model/cognitiveagents/characteristics",
                            "baseUrl": "https://alchemistsimulator.github.io/latest",
                            "fileName": "individual",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/cognitiveagents/characteristics/individual"
                          },
                          "description": "",
                          "title": "it.unibo.alchemist.model.cognitiveagents.characteristics.individual",
                          "content": ""
                        }]
                      },
                      "utils": {
                        "ownKey": "utils",
                        "ownPages": [{
                          "reference": {
                            "path": "it/unibo/alchemist/model/cognitiveagents/characteristics",
                            "baseUrl": "https://alchemistsimulator.github.io/latest",
                            "fileName": "utils",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/cognitiveagents/characteristics/utils"
                          },
                          "description": "",
                          "title": "it.unibo.alchemist.model.cognitiveagents.characteristics.utils",
                          "content": "<p>logistic\nhttps://en.wikipedia.org/wiki/Logistic_function\nadvancedLogistic<\/p>\n"
                        }]
                      },
                      "Characteristic": {
                        "ownKey": "Characteristic",
                        "ownPages": [{
                          "reference": {
                            "path": "it/unibo/alchemist/model/cognitiveagents/characteristics",
                            "baseUrl": "https://alchemistsimulator.github.io/latest",
                            "fileName": "Characteristic",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/cognitiveagents/characteristics/Characteristic"
                          },
                          "description": "",
                          "title": "Characteristic",
                          "content": "<p>Any characteristic associable to a pedestrian.<\/p>\n"
                        }]
                      }
                    },
                    "ownPages": [{
                      "reference": {
                        "path": "it/unibo/alchemist/model/cognitiveagents",
                        "baseUrl": "https://alchemistsimulator.github.io/latest",
                        "fileName": "characteristics",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/cognitiveagents/characteristics"
                      },
                      "description": "",
                      "title": "it.unibo.alchemist.model.cognitiveagents.characteristics",
                      "content": ""
                    }]
                  }}
                },
                "interfaces": {
                  "ownKey": "interfaces",
                  "childrenPages": {
                    "CellNode": {
                      "ownKey": "CellNode",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "CellNode",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/CellNode"
                        },
                        "description": "",
                        "title": "CellNode",
                        "content": "<p>getJunctionsCount<\/p>\n<p>removeJunction\nRemove a junction from this node.\ngetNeighborsLinkWithJunction\nReturns a set of ICellNode which are linked with the current node by a junction of the type j.\ncontainsJunction\nReturn true if a junction is present in the current node, false otherwise. Note: a junction is considered present if the method junction.equals(j) return true.\nsetPolarization\nset the polarization versor, e.g. a versor indicating the direction in which the cell will move the next time.\ngetJunctions<\/p>\n<p>getPolarizationVersor<\/p>\n<p>getAllNodesLinkWithJunction<\/p>\n<p>addJunction\nAdd a junction to the current node.\naddPolarization\nadd v to the polarization versor inside the cell; useful for considering the combination of various stimuli in a cell.<\/p>\n"
                      }]
                    },
                    "environments": {
                      "ownKey": "environments",
                      "childrenPages": {
                        "EuclideanPhysics2DEnvironmentWithGraph": {
                          "ownKey": "EuclideanPhysics2DEnvironmentWithGraph",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/interfaces/environments",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "EuclideanPhysics2DEnvironmentWithGraph",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/environments/EuclideanPhysics2DEnvironmentWithGraph"
                            },
                            "description": "",
                            "title": "EuclideanPhysics2DEnvironmentWithGraph",
                            "content": "<p>An Environment2DWithGraph with physics.<\/p>\n<p>makePosition\nCreate a position from an array of double representing the coordinates of the point.\norigin\nCreate a position corresponding to the origin of this environment.\nshuffled\n<a href=\"https://bit.ly/33Z3xFu\">Fisher\u2013Yates shuffle algorithm<\/a>\nusing Apache random number generator.\nMore information <a href=\"https://en.wikipedia.org/wiki/Fisher-Yates_shuffle\">on Wikipedia<\/a>.<\/p>\n"
                          }]
                        },
                        "RectangularBoundaries": {
                          "ownKey": "RectangularBoundaries",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/interfaces/environments",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "RectangularBoundaries",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/environments/RectangularBoundaries"
                            },
                            "description": "",
                            "title": "RectangularBoundaries",
                            "content": "<p>Describes rectangular Boundaries with the origin in (0,0).<init>\nDescribes rectangular Boundaries with the origin in (0,0).\nwidth\nWidth.\nheight\nHeight.\naccept\nv is the visitor in the Visitor pattern.\nBoundariesVisitor.visit will be called with the right boundary type.<\/p>\n"
                          }]
                        },
                        "BoundariesVisitor": {
                          "ownKey": "BoundariesVisitor",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/interfaces/environments",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "BoundariesVisitor",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/environments/BoundariesVisitor"
                            },
                            "description": "",
                            "title": "BoundariesVisitor",
                            "content": "<p>The visitor to handle different types of boundaries.\nNote: whenever a new Boundaries is created, it should be added to a new visit method in this interface.<\/p>\n<p>visit\nrectangularBoundaries with origin in (0,0).<\/p>\n"
                          }]
                        },
                        "Environment2DWithGraph": {
                          "ownKey": "Environment2DWithGraph",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/interfaces/environments",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "Environment2DWithGraph",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/environments/Environment2DWithGraph"
                            },
                            "description": "",
                            "title": "Environment2DWithGraph",
                            "content": "<p>A bidimensional environment with obstacles providing a NavigationGraph, i.e.\na graph whose nodes are convex shapes representing the areas of the environment\ntraversable by agents (namely, walkable areas), whereas edges represent connections\nbetween them.<\/p>\n<p>graph<\/p>\n<p>makePosition\nCreate a position from an array of double representing the coordinates of the point.\norigin\nCreate a position corresponding to the origin of this environment.\nshuffled\n<a href=\"https://bit.ly/33Z3xFu\">Fisher\u2013Yates shuffle algorithm<\/a>\nusing Apache random number generator.\nMore information <a href=\"https://en.wikipedia.org/wiki/Fisher-Yates_shuffle\">on Wikipedia<\/a>.<\/p>\n"
                          }]
                        },
                        "Physics2DEnvironment": {
                          "ownKey": "Physics2DEnvironment",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/interfaces/environments",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "Physics2DEnvironment",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/environments/Physics2DEnvironment"
                            },
                            "description": "",
                            "title": "Physics2DEnvironment",
                            "content": "<p>Defines a bidimensional euclidean environment.<\/p>\n<p>makePosition\nCreate a position from an array of double representing the coordinates of the point.\norigin\nCreate a position corresponding to the origin of this environment.\nshuffled\n<a href=\"https://bit.ly/33Z3xFu\">Fisher\u2013Yates shuffle algorithm<\/a>\nusing Apache random number generator.\nMore information <a href=\"https://en.wikipedia.org/wiki/Fisher-Yates_shuffle\">on Wikipedia<\/a>.<\/p>\n"
                          }]
                        },
                        "HasBoundaries": {
                          "ownKey": "HasBoundaries",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/interfaces/environments",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "HasBoundaries",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/environments/HasBoundaries"
                            },
                            "description": "",
                            "title": "HasBoundaries",
                            "content": "<p>Declare boundaries.\nboundaries\nThe boundaries.<\/p>\n"
                          }]
                        },
                        "PhysicsEnvironment": {
                          "ownKey": "PhysicsEnvironment",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/interfaces/environments",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "PhysicsEnvironment",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/environments/PhysicsEnvironment"
                            },
                            "description": "",
                            "title": "PhysicsEnvironment",
                            "content": "<p>An environment supporting physics and nodes shapes.\nNote: due to the high number of parameters its's highly recommended to not use this interface directly,\nbut to create an apposite interface extending this one instead.\nshapeFactory\nA factory of shapes compatible with this environment.\ngetHeading\nGets the heading of a node as a direction vector.\nsetHeading\nSets the heading of a node.\ngetShape\nGets the shape of a node relatively to its position and heading in the environment.\ngetNodesWithin\nGets all nodes whose shape.intersect is true for the given shape.\ncanNodeFitPosition\nWhether or not a node can be placed in a position.\nmakePosition\nCreate a position from an array of double representing the coordinates of the point.\norigin\nCreate a position corresponding to the origin of this environment.\nshuffled\n<a href=\"https://bit.ly/33Z3xFu\">Fisher\u2013Yates shuffle algorithm<\/a>\nusing Apache random number generator.\nMore information <a href=\"https://en.wikipedia.org/wiki/Fisher-Yates_shuffle\">on Wikipedia<\/a>.<\/p>\n"
                          }]
                        },
                        "EuclideanPhysics2DEnvironmentWithObstacles": {
                          "ownKey": "EuclideanPhysics2DEnvironmentWithObstacles",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/interfaces/environments",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "EuclideanPhysics2DEnvironmentWithObstacles",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/environments/EuclideanPhysics2DEnvironmentWithObstacles"
                            },
                            "description": "",
                            "title": "EuclideanPhysics2DEnvironmentWithObstacles",
                            "content": "<p>Euclidean physics environment with support for obstacles.<\/p>\n<p>makePosition\nCreate a position from an array of double representing the coordinates of the point.\norigin\nCreate a position corresponding to the origin of this environment.\nshuffled\n<a href=\"https://bit.ly/33Z3xFu\">Fisher\u2013Yates shuffle algorithm<\/a>\nusing Apache random number generator.\nMore information <a href=\"https://en.wikipedia.org/wiki/Fisher-Yates_shuffle\">on Wikipedia<\/a>.<\/p>\n"
                          }]
                        },
                        "Boundaries": {
                          "ownKey": "Boundaries",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/interfaces/environments",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "Boundaries",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/environments/Boundaries"
                            },
                            "description": "",
                            "title": "Boundaries",
                            "content": "<p>Describes the boundaries via the Visitor pattern.\nNote: whenever a new Boundaries is created, it should be added to a new visit method in BoundariesVisitor.<\/p>\n<p>accept\nv is the visitor in the Visitor pattern.\nBoundariesVisitor.visit will be called with the right boundary type.<\/p>\n"
                          }]
                        },
                        "Euclidean2DEnvironmentWithGraph": {
                          "ownKey": "Euclidean2DEnvironmentWithGraph",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/interfaces/environments",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "Euclidean2DEnvironmentWithGraph",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/environments/Euclidean2DEnvironmentWithGraph"
                            },
                            "description": "",
                            "title": "Euclidean2DEnvironmentWithGraph",
                            "content": "<p>An euclidean Environment2DWithGraph.<\/p>\n<p>makePosition\nCreate a position from an array of double representing the coordinates of the point.\norigin\nCreate a position corresponding to the origin of this environment.\nshuffled\n<a href=\"https://bit.ly/33Z3xFu\">Fisher\u2013Yates shuffle algorithm<\/a>\nusing Apache random number generator.\nMore information <a href=\"https://en.wikipedia.org/wiki/Fisher-Yates_shuffle\">on Wikipedia<\/a>.<\/p>\n"
                          }]
                        }
                      },
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "environments",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/environments"
                        },
                        "description": "",
                        "title": "it.unibo.alchemist.model.interfaces.environments",
                        "content": ""
                      }]
                    },
                    "GPSPoint": {
                      "ownKey": "GPSPoint",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "GPSPoint",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/GPSPoint"
                        },
                        "description": "",
                        "title": "GPSPoint",
                        "content": "<p>addTime<\/p>\n<p>subtractTime<\/p>\n<p>getTime<\/p>\n"
                      }]
                    },
                    "GPSTrace": {
                      "ownKey": "GPSTrace",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "GPSTrace",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/GPSTrace"
                        },
                        "description": "",
                        "title": "GPSTrace",
                        "content": "<p>getFinalPosition<\/p>\n<p>getPreviousPosition<\/p>\n<p>interpolate<\/p>\n<p>getInitialPosition<\/p>\n<p>startAt<\/p>\n<p>getStartTime<\/p>\n<p>getFinalTime<\/p>\n<p>getNextPosition<\/p>\n"
                      }]
                    },
                    "Node": {
                      "ownKey": "Node",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Node",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/Node"
                        },
                        "description": "",
                        "title": "Node",
                        "content": "<p>contains\nTests whether a node contains a Molecule.\ngetChemicalSpecies\nThis method is usefult to know how many different chemical species may be contained in this node.\nsetConcentration\nSets the concentration of mol to c.\ngetId<\/p>\n<p>getShape\nThe shape of the node, used in environments supporting geometry and physics.\naddReaction\nAdds a reaction to this node.\ncloneNode\nCreates a new Node which is a clone of the current Node. The new Node will have all the current Node's properties, such as reactions and molecules, but it will also have a different ID.\nremoveConcentration<\/p>\n<p>getReactions\nThis method allows to access all the reaction of the node.\ngetConcentration\nCalculates the concentration of a molecule.\ngetContents<\/p>\n<p>removeReaction\nRemoves a reaction from this node.<\/p>\n"
                      }]
                    },
                    "Pedestrian2D": {
                      "ownKey": "Pedestrian2D",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Pedestrian2D",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/Pedestrian2D"
                        },
                        "description": "",
                        "title": "Pedestrian2D",
                        "content": "<p>The bidimensional representation of a pedestrian.<\/p>\n<p>shape\nThe shape of any pedestrian in the Euclidean world.\nfieldOfView\nThe field of view of a pedestrian in the Euclidean world.\ntargetDistance\nCalculate the distance between this pedestrian current position and the specified steering action target.\nshuffled\n<a href=\"https://bit.ly/33Z3xFu\">Fisher\u2013Yates shuffle algorithm<\/a>\nusing Apache random number generator.\nMore information <a href=\"https://en.wikipedia.org/wiki/Fisher-Yates_shuffle\">on Wikipedia<\/a>.<\/p>\n"
                      }]
                    },
                    "EnvironmentSupportingDeformableCells": {
                      "ownKey": "EnvironmentSupportingDeformableCells",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "EnvironmentSupportingDeformableCells",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/EnvironmentSupportingDeformableCells"
                        },
                        "description": "",
                        "title": "EnvironmentSupportingDeformableCells",
                        "content": "<p>Environment supporting deformable cells.<\/p>\n<p>getMaxDiameterAmongCircularDeformableCells<\/p>\n"
                      }]
                    },
                    "Vehicle": {
                      "ownKey": "Vehicle",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Vehicle",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/Vehicle"
                        },
                        "description": "",
                        "title": "Vehicle",
                        "content": ""
                      }]
                    },
                    "CircularDeformableCell": {
                      "ownKey": "CircularDeformableCell",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "CircularDeformableCell",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/CircularDeformableCell"
                        },
                        "description": "",
                        "title": "CircularDeformableCell",
                        "content": "<p>Implements a circular deformable cell.<\/p>\n<p>getMaxRadius<\/p>\n<p>getMaxDiameter<\/p>\n"
                      }]
                    },
                    "GroupSteeringAction": {
                      "ownKey": "GroupSteeringAction",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "GroupSteeringAction",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/GroupSteeringAction"
                        },
                        "description": "",
                        "title": "GroupSteeringAction",
                        "content": "<p>Steering action caused by a group of pedestrians.<\/p>\n<p>group\nThe list of pedestrians used to compute the group steering action.<\/p>\n"
                      }]
                    },
                    "ILsaNode": {
                      "ownKey": "ILsaNode",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "ILsaNode",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/ILsaNode"
                        },
                        "description": "",
                        "title": "ILsaNode",
                        "content": "<p>Interface for an LSA Node. Avoids the crappy casts.<\/p>\n<p>setConcentration\nAdds an instance of ILsaMolecule in the node's LsaSpace.\nremoveConcentration\nDeletes an ILsaMolecule from the Node LsaSpace Warning: the method removes only the first matched ILsaMolecule.\ngetConcentration<\/p>\n<p>getLsaSpace<\/p>\n"
                      }]
                    },
                    "TimeDistribution": {
                      "ownKey": "TimeDistribution",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "TimeDistribution",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/TimeDistribution"
                        },
                        "description": "",
                        "title": "TimeDistribution",
                        "content": "<p>This interface represents a temporal distribution for any event.<\/p>\n<p>update\nUpdates the internal status.\ngetNextOccurence<\/p>\n<p>clone<\/p>\n<p>getRate<\/p>\n"
                      }]
                    },
                    "Route": {
                      "ownKey": "Route",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Route",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/Route"
                        },
                        "description": "",
                        "title": "Route",
                        "content": "<p>length<\/p>\n<p>stream<\/p>\n<p>getPoint<\/p>\n<p>size<\/p>\n<p>getPoints<\/p>\n"
                      }]
                    },
                    "GroupWithLeader": {
                      "ownKey": "GroupWithLeader",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "GroupWithLeader",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/GroupWithLeader"
                        },
                        "description": "",
                        "title": "GroupWithLeader",
                        "content": "<p>A group with a special member acting as a leader.\nleader\nThe leader of the group.<\/p>\n"
                      }]
                    },
                    "Incarnation": {
                      "ownKey": "Incarnation",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Incarnation",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/Incarnation"
                        },
                        "description": "",
                        "title": "Incarnation",
                        "content": "<p>createNode<\/p>\n<p>createCondition<\/p>\n<p>createTimeDistribution<\/p>\n<p>createReaction<\/p>\n<p>createConcentration\nCreates a new concentration object of a specific concrete type.\ncreateAction<\/p>\n<p>createMolecule\nParses a String, and provides a Molecule.\ngetProperty\nGiven an Node, an Molecule and a property expressed as a String, returns a numeric value. If a numeric value is not deducible, Double.NaN is returned.<\/p>\n"
                      }]
                    },
                    "Position": {
                      "ownKey": "Position",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Position",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/Position"
                        },
                        "description": "",
                        "title": "Position",
                        "content": "<p>An interface to represent a generic coordinates system.\ncoordinates\nAllows to get the position as a Number array.\ndimensions<\/p>\n<p>boundingBox\nGiven a range, produces N coordinates, representing the N opposite\nvertices of the hypercube having the current coordinate as center and\ncircumscribing the N-sphere defined by the range. In the case of two\ndimensional coordinates, it must return the opposite vertices of the\nsquare circumscribing the circle with center in this position and radius\nrange.\ngetCoordinate\nAllows to access the value of a coordinate.\ndistanceTo\nComputes the distance between this position and another compatible\nposition.\nplus\nConsiders both positions as vectors, and sums them.\nminus\nConsiders both positions as vectors, and returns the difference between this position and the passed one.<\/p>\n"
                      }]
                    },
                    "BenchmarkableEnvironment": {
                      "ownKey": "BenchmarkableEnvironment",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "BenchmarkableEnvironment",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/BenchmarkableEnvironment"
                        },
                        "description": "",
                        "title": "BenchmarkableEnvironment",
                        "content": "<p>An environment which provides a mean to get infos about its performances.<\/p>\n<p>enableBenchmark\nCall this method to tell this environment that it should record its performances. Please note that some environments might ignore this message if this method is not called before starting using the environment itself.\ngetBenchmarkResult<\/p>\n"
                      }]
                    },
                    "Dependency": {
                      "ownKey": "Dependency",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Dependency",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/Dependency"
                        },
                        "description": "",
                        "title": "Dependency",
                        "content": "<p>This interface represents a token that may generate a dependency between two reactions. Some special built-in tokens are EVERYTHING, EVERY_MOLECULE, MOVEMENT, and NEIGHBORHOOD_CHANGE. Molecules are dependencies as well.\nEVERYTHING\nDeclares a dependency towards any other reaction in the reachable scope.\nEVERY_MOLECULE\nDeclares a dependency towards any modified molecule in the reachable scope.\nMOVEMENT\nDeclares a dependency on movement of nodes in the reachable scope.\nmakesDependent\nDetermines whether the provided dependency depends on this dependency. The default behavior calls <code>#dependsOn(Dependency)<\/code>, and provides a bidirectional dependency.\ndependsOn\nDetermines whether this dependency depends on the provided dependency. The default behavior requires equality.<\/p>\n"
                      }]
                    },
                    "EnvironmentNode": {
                      "ownKey": "EnvironmentNode",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "EnvironmentNode",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/EnvironmentNode"
                        },
                        "description": "",
                        "title": "EnvironmentNode",
                        "content": ""
                      }]
                    },
                    "graph": {
                      "ownKey": "graph",
                      "childrenPages": {
                        "GraphEdgeWithData": {
                          "ownKey": "GraphEdgeWithData",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/interfaces/graph",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "GraphEdgeWithData",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/graph/GraphEdgeWithData"
                            },
                            "description": "",
                            "title": "GraphEdgeWithData",
                            "content": "<p>A GraphEdge storing some kind of data.<init>\nA GraphEdge storing some kind of data.\ndata\nThe data this edge stores.<\/p>\n"
                          }]
                        },
                        "Graph": {
                          "ownKey": "Graph",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/interfaces/graph",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "Graph",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/graph/Graph"
                            },
                            "description": "",
                            "title": "Graph",
                            "content": "<p>A graph composed by a set of nodes and a set of edges\nconnecting such nodes. Edges are directed, undirected\ngraphs can be obtained by duplicating each edge.<\/p>\n<p>nodes\nA list is used to allow predictable iteration order.\nedgesFrom<\/p>\n<p>edges<\/p>\n<p>isReachable\nChecks if there is a path between two provided nodes.\ndepthFirstSearch\nPerforms a depth-first search starting from the provided node and looking for the target node.\ndijkstraShortestPath\nFinds the shortest path between the provided nodes, returns null if no path between them\ncould be found. If the two nodes coincide, the path will contain only such node and will\nweight 0.\nprimMinimumSpanningForest\nComputes the minimum spanning forest of the graph using Prim's algorithm.\nNote that the graph must be undirected (i.e. each edge must be duplicated).<\/p>\n"
                          }]
                        },
                        "NavigationGraph": {
                          "ownKey": "NavigationGraph",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/interfaces/graph",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "NavigationGraph",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/graph/NavigationGraph"
                            },
                            "description": "",
                            "title": "NavigationGraph",
                            "content": "<p>A graph used for navigation purposes. Nodes are ConvexGeometricShapes,\nusually representing portions of an environment which are traversable by\nagents (the advantage of such representation is that agents can freely\nwalk around within a convex area, as it is guaranteed that no obstacle\nwill be found).\nAdditionally, a navigation graph can store a set of positions of interest\nthat may be used during navigation (e.g. destinations in an evacuation\nscenario).<\/p>\n<p>destinations\nA list of positions of interest (usually destinations).\ndestinationsWithin<\/p>\n<p>containsAnyDestination\nChecks whether the provided node contains any destination.\nnodeContaining<\/p>\n<p>dijkstraShortestPath\nSee dijkstraShortestPath. In a navigation graph, the weight assigned by\ndefault to each edge is computed as the distance between the centroids of the\ntwo ConvexGeometricShapes the edge connects.\nprimMinimumSpanningForest\nSee primMinimumSpanningForest.\nedges<\/p>\n<p>isReachable\nChecks if there is a path between two provided nodes.\ndepthFirstSearch\nPerforms a depth-first search starting from the provided node and looking for the target node.\ndijkstraShortestPath\nFinds the shortest path between the provided nodes, returns null if no path between them\ncould be found. If the two nodes coincide, the path will contain only such node and will\nweight 0.\nprimMinimumSpanningForest\nComputes the minimum spanning forest of the graph using Prim's algorithm.\nNote that the graph must be undirected (i.e. each edge must be duplicated).<\/p>\n"
                          }]
                        },
                        "GraphEdge": {
                          "ownKey": "GraphEdge",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/interfaces/graph",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "GraphEdge",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/graph/GraphEdge"
                            },
                            "description": "",
                            "title": "GraphEdge",
                            "content": "<p>Models a basic directed edge.<init>\nModels a basic directed edge.\ntail\nThe node this edge outgoes from.\nhead\nThe node this edge arrives to.<\/p>\n"
                          }]
                        },
                        "twod": {
                          "ownKey": "twod",
                          "childrenPages": {
                            "Euclidean2DNavigationGraph": {
                              "ownKey": "Euclidean2DNavigationGraph",
                              "ownPages": [{
                                "reference": {
                                  "path": "it/unibo/alchemist/model/interfaces/graph/twod",
                                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                                  "fileName": "Euclidean2DNavigationGraph",
                                  "extension": "html",
                                  "usePrettyUrl": true,
                                  "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/graph/twod/Euclidean2DNavigationGraph"
                                },
                                "description": "",
                                "title": "Euclidean2DNavigationGraph",
                                "content": "<p>A navigation graph in an euclidean bidimensional environment, whose\nnodes are ConvexPolygons and edges are Euclidean2DCrossings.<\/p>\n"
                              }]
                            },
                            "Euclidean2DCrossing": {
                              "ownKey": "Euclidean2DCrossing",
                              "ownPages": [{
                                "reference": {
                                  "path": "it/unibo/alchemist/model/interfaces/graph/twod",
                                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                                  "fileName": "Euclidean2DCrossing",
                                  "extension": "html",
                                  "usePrettyUrl": true,
                                  "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/graph/twod/Euclidean2DCrossing"
                                },
                                "description": "",
                                "title": "Euclidean2DCrossing",
                                "content": "<p>Defines a connection between two ConvexPolygons represented as an <a href=\"#\">Euclidean2DSegment<\/a>.\nThe segment models the shape of the passage between the two areas: an agent could cross\nany point of it to move from one room (or better, polygon) to the other. To make it easier,\nthink of the following: in an indoor environment the segment should represent the shape of\nthe door between two rooms. Additionally, given a crossing c connecting convex polygon a\nto convex polygon b, the segment provided by c MUST belong to the boundary of a, but can\nor cannot belong the boundary of b.<\/p>\n"
                              }]
                            },
                            "Euclidean2DNavigationGraphBuilder": {
                              "ownKey": "Euclidean2DNavigationGraphBuilder",
                              "ownPages": [{
                                "reference": {
                                  "path": "it/unibo/alchemist/model/interfaces/graph/twod",
                                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                                  "fileName": "Euclidean2DNavigationGraphBuilder",
                                  "extension": "html",
                                  "usePrettyUrl": true,
                                  "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/graph/twod/Euclidean2DNavigationGraphBuilder"
                                },
                                "description": "",
                                "title": "Euclidean2DNavigationGraphBuilder",
                                "content": "<p>Builder for Euclidean2DNavigationGraph.<\/p>\n"
                              }]
                            }
                          },
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/interfaces/graph",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "twod",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/graph/twod"
                            },
                            "description": "",
                            "title": "it.unibo.alchemist.model.interfaces.graph.twod",
                            "content": ""
                          }]
                        }
                      },
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "graph",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/graph"
                        },
                        "description": "",
                        "title": "it.unibo.alchemist.model.interfaces.graph",
                        "content": ""
                      }]
                    },
                    "Neighborhood": {
                      "ownKey": "Neighborhood",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Neighborhood",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/Neighborhood"
                        },
                        "description": "",
                        "title": "Neighborhood",
                        "content": "<p>The type which describes the concentration of a molecule Interface for a neighborhood. When implementing it in a real class, please remember to correctly implement also the equals method inherited from Object.<\/p>\n<p>contains\nVerifies if a node is contained inside a neighborhood.\ngetCenter\nAllows to access the central node.\nisEmpty<\/p>\n<p>getNeighbors\nAllows to directly access every node in the neighborhood. A change of this List will be reflected in the neighborhood.\nremove<\/p>\n<p>add<\/p>\n<p>getNeighborByNumber\nReturns the num-th neighbor.\nsize<\/p>\n"
                      }]
                    },
                    "ILsaCondition": {
                      "ownKey": "ILsaCondition",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "ILsaCondition",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/ILsaCondition"
                        },
                        "description": "",
                        "title": "ILsaCondition",
                        "content": "<p>cloneCondition<\/p>\n<p>getNode<\/p>\n<p>filter\nWhen this method is called, the condition must filter the current matches and allowed nodes.<\/p>\n"
                      }]
                    },
                    "Molecule": {
                      "ownKey": "Molecule",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Molecule",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/Molecule"
                        },
                        "description": "",
                        "title": "Molecule",
                        "content": "<p>Interface for a molecule.<\/p>\n<p>getName<\/p>\n<p>getId\nAllows to access the id of a molecule.<\/p>\n"
                      }]
                    },
                    "HeterogeneousPedestrian": {
                      "ownKey": "HeterogeneousPedestrian",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "HeterogeneousPedestrian",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/HeterogeneousPedestrian"
                        },
                        "description": "",
                        "title": "HeterogeneousPedestrian",
                        "content": "<p>An heterogeneous pedestrian is a pedestrian where individual characteristics are taken into consideration.\nage\nThe age of this pedestrian.\ngender\nThe gender of this pedestrian.\ncompliance\nValue between 0 and 1 representing the attitude towards conforming to social rules of this pedestrian.\nprobabilityOfHelping\nValue between 0 and 1 representing the probability this pedestrian will help another pedestrian in difficulty.\ntargetDistance\nCalculate the distance between this pedestrian current position and the specified steering action target.\nshuffled\n<a href=\"https://bit.ly/33Z3xFu\">Fisher\u2013Yates shuffle algorithm<\/a>\nusing Apache random number generator.\nMore information <a href=\"https://en.wikipedia.org/wiki/Fisher-Yates_shuffle\">on Wikipedia<\/a>.<\/p>\n"
                      }]
                    },
                    "Environment": {
                      "ownKey": "Environment",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Environment",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/Environment"
                        },
                        "description": "",
                        "title": "Environment",
                        "content": "<p>Interface for an environment. Every environment must implement this specification.<\/p>\n<p>addLayer\nAdd a Layer to the Environment.\ngetLayers\nReturn all the Layers in this Environment.\nsetSimulation<\/p>\n<p>getSize\nThis method returns the size of the environment as an array of length <code>#getDimensions()<\/code>. This method must return distance measured with the same unit used by the positions. No non-euclidean distance metrics are allowed.\ngetDistanceBetweenNodes\nMeasures the distance between two nodes in the environment.\ngetNodesWithinRange\nGiven a node (center) this method returns a list of all the surroundings nodes within the given range. Note that this method (depending on the implementation) might be not optimized and it's consequently <b>much<\/b> better to use <code>Environment#getNeighborhood(Node)<\/code> and filter the neighborhood if you are sure that all the nodes within the range are connected to the center.\ngetNodesWithinRange\nGiven a Position(center) this method returns a list of all the surroundings nodes within the given range. Note that this method (depending on the implementation) might be not optimized.\nmoveNodeToPosition\nThis method moves a node in the environment to some position. If node move is unsupported, it does nothing.\nmoveNode\nThis method moves a node in the environment toward some direction. If node move is unsupported, it does nothing.\ngetLinkingRule<\/p>\n<p>setIncarnation<\/p>\n<p>removeNode\nThis method allows to remove a node. If node removal is unsupported, it does nothing.\nsetLinkingRule<\/p>\n<p>getOffset\nThis method allows to know which are the smallest coordinates represented.\ngetIncarnation<\/p>\n<p>getNeighborhood\nGiven a node, this method returns its neighborhood.\ngetSimulation<\/p>\n<p>getNodesNumber<\/p>\n<p>isTerminated<\/p>\n<p>getNodeByID\nAllows to access a node known its id. Depending on the implementation, this method may or not be optimized (namely, id could run in constant or linear time with the number of nodes).\ngetPosition\nCalculates the position of a node.\ngetDimensions\nThe number of dimensions of this environment.\ngetNodes\nAll the nodes that exist in current environment.\naddTerminator<\/p>\n<p>getSizeInDistanceUnits\nThis method returns the size of the environment as an array of length <code>#getDimensions()<\/code>. This method must return distance measured with the same unit used for measuring distances. It may or may not return the same result of <code>#getSize()<\/code>\ngetLayer\nGet the layer associate to the given molecule. If no Layer is associated with the given molecule, return an empty optional.\nmakePosition<\/p>\n<p>addNode\nThis method allows to add a new node to this environment. The environment is responsible to call the right method of the simulation in order to ensure that the reaction is properly scheduled.\nmakePosition\nCreate a position from an array of double representing the coordinates of the point.\norigin\nCreate a position corresponding to the origin of this environment.<\/p>\n"
                      }]
                    },
                    "ObjectWithGPS": {
                      "ownKey": "ObjectWithGPS",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "ObjectWithGPS",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/ObjectWithGPS"
                        },
                        "description": "",
                        "title": "ObjectWithGPS",
                        "content": "<p>setTrace<\/p>\n"
                      }]
                    },
                    "Group": {
                      "ownKey": "Group",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Group",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/Group"
                        },
                        "description": "",
                        "title": "Group",
                        "content": "<p>A group of nodes.\nmembers\nThe list of pedestrians belonging to this group.\ncontains\nWhether a node belongs to this group or not.\naddMember\nAdd a node in this group if not already part of it.\nremoveMember\nRemove a node from this group.<\/p>\n"
                      }]
                    },
                    "Action": {
                      "ownKey": "Action",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Action",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/Action"
                        },
                        "description": "",
                        "title": "Action",
                        "content": "<p>cloneAction\nThis method allows to clone this action on a new node. It may result useful to support runtime creation of nodes with the same reaction programming, e.g. for morphogenesis.\ngetOutboundDependencies<\/p>\n<p>execute\nEffectively executes this action.\ngetContext<\/p>\n"
                      }]
                    },
                    "Obstacle2D": {
                      "ownKey": "Obstacle2D",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Obstacle2D",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/Obstacle2D"
                        },
                        "description": "",
                        "title": "Obstacle2D",
                        "content": "<p>next\nGiven a vector (starting point and end point) representing a requested move, this method computes a new end point, representing a cut version of the initial vector, modified in such a way that the end point is outside the obstacle.\ngetId<\/p>\n<p>nearestIntersection\nGiven a vector (represented as a starting point and an end point) and a rectangle, computes the intersection point between the vector and the rectangle nearest to the vector's starting point.<\/p>\n"
                      }]
                    },
                    "ILsaMolecule": {
                      "ownKey": "ILsaMolecule",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "ILsaMolecule",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/ILsaMolecule"
                        },
                        "description": "",
                        "title": "ILsaMolecule",
                        "content": "<p>moreGenericOf<\/p>\n<p>hasDuplicateVariables<\/p>\n<p>isIstance<\/p>\n<p>toHashString<\/p>\n<p>isIdenticalTo<\/p>\n<p>size<\/p>\n<p>allocateVar<\/p>\n<p>argsNumber<\/p>\n<p>getArg<\/p>\n<p>generalize<\/p>\n<p>matches<\/p>\n<p>matches<\/p>\n"
                      }]
                    },
                    "Pedestrian": {
                      "ownKey": "Pedestrian",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Pedestrian",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/Pedestrian"
                        },
                        "description": "",
                        "title": "Pedestrian",
                        "content": "<p>A pedestrian with any characteristic taken into consideration.\nmembershipGroup\nThe group this pedestrian belongs to.\nspeed\nThe speed at which the pedestrian is moving.\ntargetDistance\nCalculate the distance between this pedestrian current position and the specified steering action target.\nshuffled\n<a href=\"https://bit.ly/33Z3xFu\">Fisher\u2013Yates shuffle algorithm<\/a>\nusing Apache random number generator.\nMore information <a href=\"https://en.wikipedia.org/wiki/Fisher-Yates_shuffle\">on Wikipedia<\/a>.<\/p>\n"
                      }]
                    },
                    "Time": {
                      "ownKey": "Time",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Time",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/Time"
                        },
                        "description": "",
                        "title": "Time",
                        "content": "<p>Interface for time representation.\nZERO\nInitial time.\nINFINITY\nIndefinitely future time.\ntoDouble\nAllows to get a double representation of this Time.\ntimes\nAllows to multiply this Time for a constant.\nisInfinite\nVerifies if the Time is set at infinite, namely if the event will never happen.\nminus\nAllows to subtract a Time to this Time.\nplus\nAllows to add a Time to this Time.\nplus\nPlus operator for Time.\nminus\nMinus operator for Time.<\/p>\n"
                      }]
                    },
                    "Environment2DWithObstacles": {
                      "ownKey": "Environment2DWithObstacles",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Environment2DWithObstacles",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/Environment2DWithObstacles"
                        },
                        "description": "",
                        "title": "Environment2DWithObstacles",
                        "content": "<p>getObstacles<\/p>\n<p>removeObstacle\nRemoves an Obstacle2D from this environment.\nnext\nThis method must calculate the ABSOLUTE next allowed position given the current position and the position in which the node wants to move. For example, if your node is in position [2,3], wants to move to [3,4] but the next allowed position (because, e.g., of physical obstacles) is [2.5,3.5], the result must be a Position containing coordinates [2.5,3.5].\nhasMobileObstacles<\/p>\n<p>intersectsObstacle\nChecks whether there is at least an obstacle intersecting the line connecting [sx, sy] and [ex, ey].\nintersectsObstacle\nChecks whether there is at least an obstacle intersecting the line connecting p1 and p2.\naddObstacle\nAdds an Obstacle2D to this environment.\ngetObstaclesInRange\nGiven a point and a range, retrieves all the obstacles within.<\/p>\n"
                      }]
                    },
                    "OrientingPedestrian": {
                      "ownKey": "OrientingPedestrian",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "OrientingPedestrian",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/OrientingPedestrian"
                        },
                        "description": "",
                        "title": "OrientingPedestrian",
                        "content": "<p>A pedestrian capable of orienting itself.<\/p>\n<p>targetDistance\nCalculate the distance between this pedestrian current position and the specified steering action target.\nshuffled\n<a href=\"https://bit.ly/33Z3xFu\">Fisher\u2013Yates shuffle algorithm<\/a>\nusing Apache random number generator.\nMore information <a href=\"https://en.wikipedia.org/wiki/Fisher-Yates_shuffle\">on Wikipedia<\/a>.<\/p>\n"
                      }]
                    },
                    "TimedRoute": {
                      "ownKey": "TimedRoute",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "TimedRoute",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/TimedRoute"
                        },
                        "description": "",
                        "title": "TimedRoute",
                        "content": "<p>Route with total trip time to cross it.<\/p>\n<p>getTripTime<\/p>\n"
                      }]
                    },
                    "CellWithCircularArea": {
                      "ownKey": "CellWithCircularArea",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "CellWithCircularArea",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/CellWithCircularArea"
                        },
                        "description": "",
                        "title": "CellWithCircularArea",
                        "content": "<p>Implements a cell with a defined volume.<\/p>\n<p>getDiameter<\/p>\n<p>getRadius<\/p>\n"
                      }]
                    },
                    "PedestrianGroup": {
                      "ownKey": "PedestrianGroup",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "PedestrianGroup",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/PedestrianGroup"
                        },
                        "description": "",
                        "title": "PedestrianGroup",
                        "content": "<p>An alias for a group of pedestrians.<\/p>\n"
                      }]
                    },
                    "LinkingRule": {
                      "ownKey": "LinkingRule",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "LinkingRule",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/LinkingRule"
                        },
                        "description": "",
                        "title": "LinkingRule",
                        "content": "<p>An interface that represent an auto-linking logic for nodes within an environment.<\/p>\n<p>computeNeighborhood\nProduces a new neighborhood for specified node considering its position.\nisLocallyConsistent\nSome rules may require to be evaluated against multiple nodes until the situations gets consistent. For instance, a rule that connects the closest 10 nodes must be evaluated multiple times to get to the correct result (this is because a change in one neighbor may require a disconnection from another node to maintain exactly 10 connections). Most rules do not need such machinery (e.g., connecting to nodes within some statically defined range).<\/p>\n"
                      }]
                    },
                    "VisibleNode": {
                      "ownKey": "VisibleNode",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "VisibleNode",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/VisibleNode"
                        },
                        "description": "",
                        "title": "VisibleNode",
                        "content": "<p>Represents a node seen by the it.unibo.alchemist.model.implementations.actions.See action.\nnode\nThe node seen.\nposition\nThe position of the node.<\/p>\n"
                      }]
                    },
                    "CognitivePedestrian": {
                      "ownKey": "CognitivePedestrian",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "CognitivePedestrian",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/CognitivePedestrian"
                        },
                        "description": "",
                        "title": "CognitivePedestrian",
                        "content": "<p>An heterogeneous pedestrian with cognitive capabilities too.<\/p>\n<p>targetDistance\nCalculate the distance between this pedestrian current position and the specified steering action target.\nshuffled\n<a href=\"https://bit.ly/33Z3xFu\">Fisher\u2013Yates shuffle algorithm<\/a>\nusing Apache random number generator.\nMore information <a href=\"https://en.wikipedia.org/wiki/Fisher-Yates_shuffle\">on Wikipedia<\/a>.<\/p>\n"
                      }]
                    },
                    "Condition": {
                      "ownKey": "Condition",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Condition",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/Condition"
                        },
                        "description": "",
                        "title": "Condition",
                        "content": "<p>cloneCondition\nThis method allows to clone this action on a new node. It may result useful to support runtime creation of nodes with the same reaction programming, e.g. for morphogenesis.\ngetNode<\/p>\n<p>getPropensityContribution\nThis method is a support for the propensity calculation inside the Reactions. It allows this condition to influence the rate calculation in some way. It's up to the reaction to decide whether to use or not this information, and how.\ngetInboundDependencies<\/p>\n<p>isValid<\/p>\n<p>getContext<\/p>\n<p>reactionReady\nThis method is called by the it.unibo.alchemist.core.interfaces.Simulation once the Reaction whose this Condition belongs to is the next one to be executed, and all its conditions passed (namely, the next operation will be the reaction execution). It can be used to perform sanity checks, as well as for registering the status of the simulated world for future comparisons. Defaults to an empty implementation.<\/p>\n"
                      }]
                    },
                    "Context": {
                      "ownKey": "Context",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Context",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/Context"
                        },
                        "description": "",
                        "title": "Context",
                        "content": "<p>This enum describes the possible contexts for a given Action or Condition. A context represents the elements which are read for a Condition and the elements that may be subject of modifications for an Action. Choosing the right Context is crucial: if it's too restricted the simulation will be invalid, if it's too wide it WILL impact dramatically on performances. Contexts are used internally to better determine dependencies among reactions. See  this paper for further information about the usage of contexts.<\/p>\n<p>getWider<\/p>\n"
                      }]
                    },
                    "MapEnvironment": {
                      "ownKey": "MapEnvironment",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "MapEnvironment",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/MapEnvironment"
                        },
                        "description": "",
                        "title": "MapEnvironment",
                        "content": "<p>DEFAULT_VEHICLE\nThe default vehicle.\ncomputeRoute\nThis method relies on the map data, and computes a route towards some absolute coordinate solving a TSP problem. It's up to the specific Action calling this method to effectively move nodes along the path. It uses the fastest path as metric.\ncomputeRoute\nThis method relies on the map data, and computes a route towards some absolute coordinate solving a TSP problem. It's up to the specific Action calling this method to effectively move nodes along the path.\ncomputeRoute\nThis method relies on the map data, and computes a route towards some absolute coordinate solving a TSP problem. It's up to the specific Action calling this method to effectively move nodes along the path.\ncomputeRoute\nThis method relies on the map data, and computes a route towards some absolute coordinate solving a TSP problem. It's up to the specific Action calling this method to effectively move nodes along the path.\ncomputeRoute\nThis method relies on the map data, and computes a route towards some absolute coordinate solving a TSP problem. It's up to the specific Action calling this method to effectively move nodes along the path.<\/p>\n"
                      }]
                    },
                    "Concentration": {
                      "ownKey": "Concentration",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Concentration",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/Concentration"
                        },
                        "description": "",
                        "title": "Concentration",
                        "content": "<p>This interface is a wrapper for concentrations.<\/p>\n<p>getContent\nAllows to access the content of the concentration.<\/p>\n"
                      }]
                    },
                    "Reaction": {
                      "ownKey": "Reaction",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Reaction",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/Reaction"
                        },
                        "description": "",
                        "title": "Reaction",
                        "content": "<p>initializationComplete\nThis method is called when the environment has completed its initialization. Can be used by this reaction to compute its next execution time - in case such computation requires an inspection of the environment.\ngetOutputContext<\/p>\n<p>cloneOnNewNode\nThis method allows to clone this reaction on a new node. It may result useful to support runtime creation of nodes with the same reaction programming, e.g. for morphogenesis.\ngetOutboundDependencies<\/p>\n<p>getConditions<\/p>\n<p>getTau<\/p>\n<p>execute\nExecutes the reactions.\nupdate\nUpdates the scheduling of this reaction.\ncanExecute<\/p>\n<p>getNode<\/p>\n<p>getTimeDistribution<\/p>\n<p>getInputContext<\/p>\n<p>setConditions\nSets the Conditions list. Some implementations may not allow to change it at runtime.\ngetActions<\/p>\n<p>getInboundDependencies<\/p>\n<p>getRate\nReturns the speed of this Reaction. It is an average number, and can potentially change during the simulation, depending on the implementation.\nsetActions\nSets the Actions list. Some implementations may not allow to change it at runtime.<\/p>\n"
                      }]
                    },
                    "Layer": {
                      "ownKey": "Layer",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Layer",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/Layer"
                        },
                        "description": "",
                        "title": "Layer",
                        "content": "<p>Interface for static layer, containing a substance or a molecule with a spatial distribution.<\/p>\n<p>getValue<\/p>\n"
                      }]
                    },
                    "movestrategies": {
                      "ownKey": "movestrategies",
                      "childrenPages": {
                        "RoutingStrategy": {
                          "ownKey": "RoutingStrategy",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/interfaces/movestrategies",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "RoutingStrategy",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/movestrategies/RoutingStrategy"
                            },
                            "description": "",
                            "title": "RoutingStrategy",
                            "content": "<p>Strategy interface describing how the routing between two points happens.<\/p>\n<p>computeRoute\nComputes a route between two positions.<\/p>\n"
                          }]
                        },
                        "TargetSelectionStrategy": {
                          "ownKey": "TargetSelectionStrategy",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/interfaces/movestrategies",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "TargetSelectionStrategy",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/movestrategies/TargetSelectionStrategy"
                            },
                            "description": "",
                            "title": "TargetSelectionStrategy",
                            "content": "<p>This interface models a strategy for selecting positions where to move.<\/p>\n<p>getTarget<\/p>\n"
                          }]
                        },
                        "SpeedSelectionStrategy": {
                          "ownKey": "SpeedSelectionStrategy",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/interfaces/movestrategies",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "SpeedSelectionStrategy",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/movestrategies/SpeedSelectionStrategy"
                            },
                            "description": "",
                            "title": "SpeedSelectionStrategy",
                            "content": "<p>Given the current target Position, this strategy interface computes the current it.unibo.alchemist.model.interfaces.Node's speed.<\/p>\n<p>getNodeMovementLength<\/p>\n"
                          }]
                        }
                      },
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "movestrategies",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/movestrategies"
                        },
                        "description": "",
                        "title": "it.unibo.alchemist.model.interfaces.movestrategies",
                        "content": ""
                      }]
                    },
                    "SteeringAction": {
                      "ownKey": "SteeringAction",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "SteeringAction",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/SteeringAction"
                        },
                        "description": "",
                        "title": "SteeringAction",
                        "content": "<p>Action whose purpose is moving a node inside the environment it is in.<\/p>\n<p>nextPosition\nThe position the owner of this action moves to when it is executed.\ntarget\nThe position the owner of this action moves towards.<\/p>\n"
                      }]
                    },
                    "OrientingCognitivePedestrian": {
                      "ownKey": "OrientingCognitivePedestrian",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "OrientingCognitivePedestrian",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/OrientingCognitivePedestrian"
                        },
                        "description": "",
                        "title": "OrientingCognitivePedestrian",
                        "content": "<p>A heterogeneous pedestrian with cognitive and orienting capabilities.<\/p>\n<p>targetDistance\nCalculate the distance between this pedestrian current position and the specified steering action target.\nshuffled\n<a href=\"https://bit.ly/33Z3xFu\">Fisher\u2013Yates shuffle algorithm<\/a>\nusing Apache random number generator.\nMore information <a href=\"https://en.wikipedia.org/wiki/Fisher-Yates_shuffle\">on Wikipedia<\/a>.<\/p>\n"
                      }]
                    },
                    "SteeringStrategy": {
                      "ownKey": "SteeringStrategy",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "SteeringStrategy",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/SteeringStrategy"
                        },
                        "description": "",
                        "title": "SteeringStrategy",
                        "content": "<p>Strategy interface describing how the next points of the steering actions\nare combined to calculate the next position to move on.<\/p>\n<p>computeNextPosition\nComputes the next position starting from the steering actions the pedestrian obey to.\ncomputeTarget\nComputes the target to reach starting from the steering actions the pedestrian obey to.<\/p>\n"
                      }]
                    },
                    "Position2D": {
                      "ownKey": "Position2D",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "Position2D",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/Position2D"
                        },
                        "description": "",
                        "title": "Position2D",
                        "content": "<p>A bidimensional position.\nx<\/p>\n<p>y<\/p>\n<p>getCoordinate\nAllows to access the value of a coordinate.\nsurrounding\nCreate a list of points equally distributed in the circle of given radius with center in this position.\nrotate\nPerform the rotation of a position.<\/p>\n"
                      }]
                    },
                    "GeoPosition": {
                      "ownKey": "GeoPosition",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "GeoPosition",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/GeoPosition"
                        },
                        "description": "",
                        "title": "GeoPosition",
                        "content": "<p>Represents a specific point on the Earth's surface.<\/p>\n<p>getLatitude<\/p>\n<p>getLongitude<\/p>\n<p>getCoordinate<\/p>\n"
                      }]
                    },
                    "geometry": {
                      "ownKey": "geometry",
                      "childrenPages": {
                        "GeometricShapeFactory": {
                          "ownKey": "GeometricShapeFactory",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/interfaces/geometry",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "GeometricShapeFactory",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/geometry/GeometricShapeFactory"
                            },
                            "description": "",
                            "title": "GeometricShapeFactory",
                            "content": "<p>Generic factory for GeometricShape.<\/p>\n<p>adimensional\nA special shape which does not occupy space and does not intersect with any other, not even with itself.\nrequireCompatible\nRequires that the given shape is compatible with the ones provided by this factory,\notherwise throws an exception.<\/p>\n"
                          }]
                        },
                        "Vector2D": {
                          "ownKey": "Vector2D",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/interfaces/geometry",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "Vector2D",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/geometry/Vector2D"
                            },
                            "description": "",
                            "title": "Vector2D",
                            "content": "<p>Bidimensional vector with x and y coordinates.\nx\nx coordinate.\ny\ny coordinate.\nasAngle\nComputes the angle with atan2(y, x).\nnormalized\nNormalizes the vector.\ndot\nDot product between bidimensional vectors.\nnewFrom\nCreates a new Vector2D with the same type of the current one with different x and y.<\/p>\n"
                          }]
                        },
                        "GeometricTransformation": {
                          "ownKey": "GeometricTransformation",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/interfaces/geometry",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "GeometricTransformation",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/geometry/GeometricTransformation"
                            },
                            "description": "",
                            "title": "GeometricTransformation",
                            "content": "<p>Defines a generic transformation of a generic shape.\nThe operations allowed depend on the space the shape belongs to.\nThis interface is meant to be extended.<\/p>\n<p>origin\nPerforms an absolute translation to the provided position.<\/p>\n"
                          }]
                        },
                        "euclidean": {
                          "ownKey": "euclidean",
                          "childrenPages": {"twod": {
                            "ownKey": "twod",
                            "childrenPages": {
                              "Euclidean2DShapeFactory": {
                                "ownKey": "Euclidean2DShapeFactory",
                                "ownPages": [{
                                  "reference": {
                                    "path": "it/unibo/alchemist/model/interfaces/geometry/euclidean/twod",
                                    "baseUrl": "https://alchemistsimulator.github.io/latest",
                                    "fileName": "Euclidean2DShapeFactory",
                                    "extension": "html",
                                    "usePrettyUrl": true,
                                    "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/geometry/euclidean/twod/Euclidean2DShapeFactory"
                                  },
                                  "description": "",
                                  "title": "Euclidean2DShapeFactory",
                                  "content": "<p>Defines a factory of <a href=\"#\">GeometricShape<\/a> for a bidimensional euclidean space.<\/p>\n<p>circle\nA circle extends in the first and second axis by its diameter.\nrectangle\nA rectangle extends in the first and second axis by its width and height.\ncircleSector\nA circle sector is the portion of a disk enclosed by two radii and an arc\nand it extends in the first and second axis by its radius and angle.<\/p>\n"
                                }]
                              },
                              "Euclidean2DShape": {
                                "ownKey": "Euclidean2DShape",
                                "ownPages": [{
                                  "reference": {
                                    "path": "it/unibo/alchemist/model/interfaces/geometry/euclidean/twod",
                                    "baseUrl": "https://alchemistsimulator.github.io/latest",
                                    "fileName": "Euclidean2DShape",
                                    "extension": "html",
                                    "usePrettyUrl": true,
                                    "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/geometry/euclidean/twod/Euclidean2DShape"
                                  },
                                  "description": "",
                                  "title": "Euclidean2DShape",
                                  "content": "<p>Defines an euclidean shape in a bidimensional space.<\/p>\n"
                                }]
                              },
                              "ConvexPolygon": {
                                "ownKey": "ConvexPolygon",
                                "ownPages": [{
                                  "reference": {
                                    "path": "it/unibo/alchemist/model/interfaces/geometry/euclidean/twod",
                                    "baseUrl": "https://alchemistsimulator.github.io/latest",
                                    "fileName": "ConvexPolygon",
                                    "extension": "html",
                                    "usePrettyUrl": true,
                                    "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/geometry/euclidean/twod/ConvexPolygon"
                                  },
                                  "description": "",
                                  "title": "ConvexPolygon",
                                  "content": "<p>A convex polygon is a simple polygon (i.e. not self-intersecting and\nwithout holes) in which no line segment between two points on the boundary\never goes outside the polygon.<\/p>\n<p>vertices\nA list is used because vertices do have an order.\ngetEdge\nThe index parameter specify which edge to get: edge i connects\nvertices i and i+1.\nintersects\nChecks whether the given shape intersects with the polygon.\nedges\nReturns a collection containing the edges (or sides) of the polygon.\ncontains\nChecks whether the polygon contains the given shape.\ncontainsBoundaryIncluded\nChecks whether the given vector is contained in the polygon or lies on its boundary.\ncontainsBoundaryExcluded\nChecks whether the given vector is contained in the polygon, boundary excluded.\nintersectsBoundaryExcluded\nChecks if the provided segment intersects with the polygon, boundary excluded.\nclosestEdgeTo\nFinds the edge of the polygon closest to the provided segment.<\/p>\n"
                                }]
                              },
                              "navigator": {
                                "ownKey": "navigator",
                                "childrenPages": {"ExtendableConvexPolygon": {
                                  "ownKey": "ExtendableConvexPolygon",
                                  "ownPages": [{
                                    "reference": {
                                      "path": "it/unibo/alchemist/model/interfaces/geometry/euclidean/twod/navigator",
                                      "baseUrl": "https://alchemistsimulator.github.io/latest",
                                      "fileName": "ExtendableConvexPolygon",
                                      "extension": "html",
                                      "usePrettyUrl": true,
                                      "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/geometry/euclidean/twod/navigator/ExtendableConvexPolygon"
                                    },
                                    "description": "",
                                    "title": "ExtendableConvexPolygon",
                                    "content": "<p>A convex polygon capable of extending itself.<\/p>\n<p>advanceEdge\nAdvances the specified edge in its normal direction. The step\nparameter represents the length of the vector that will be used\nto translate the edge. Returns a boolean indicating whether the\nadvancement was performed or not (e.g. because it would have\ncaused the lost of the convexity).\nadvanceEdge\nAdvances the specified edge only if it remains inside the given region.\nSee ExtendableConvexPolygon.advanceEdge.\nextend\nTries to extend the polygon in each direction. Each edge is given\na chance to advance in its normal direction. The step parameter\nrepresents the length of the vector that will be used to advance\nthe edges.\nReturns a boolean indicating whether the polygon extended (e.g. at\nleast one edge advanced) or not (e.g. for the presence of obstacles).\nThe boundaries of the environment need to be specified as well, in\norder to prevent the polygon from growing beyond them (a rectangular\nshaped environment is assumed, its origin, width and height are to\nbe provided, width and height should be positive). This method is\nable to cope with non axis-aligned convex polygonal obstacles as well.<\/p>\n"
                                  }]
                                }},
                                "ownPages": [{
                                  "reference": {
                                    "path": "it/unibo/alchemist/model/interfaces/geometry/euclidean/twod",
                                    "baseUrl": "https://alchemistsimulator.github.io/latest",
                                    "fileName": "navigator",
                                    "extension": "html",
                                    "usePrettyUrl": true,
                                    "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/geometry/euclidean/twod/navigator"
                                  },
                                  "description": "",
                                  "title": "it.unibo.alchemist.model.interfaces.geometry.euclidean.twod.navigator",
                                  "content": ""
                                }]
                              },
                              "Euclidean2DConvexShape": {
                                "ownKey": "Euclidean2DConvexShape",
                                "ownPages": [{
                                  "reference": {
                                    "path": "it/unibo/alchemist/model/interfaces/geometry/euclidean/twod",
                                    "baseUrl": "https://alchemistsimulator.github.io/latest",
                                    "fileName": "Euclidean2DConvexShape",
                                    "extension": "html",
                                    "usePrettyUrl": true,
                                    "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/geometry/euclidean/twod/Euclidean2DConvexShape"
                                  },
                                  "description": "",
                                  "title": "Euclidean2DConvexShape",
                                  "content": "<p>A convex euclidean shape in a bidimensional environment.<\/p>\n"
                                }]
                              },
                              "MutableConvexPolygon": {
                                "ownKey": "MutableConvexPolygon",
                                "ownPages": [{
                                  "reference": {
                                    "path": "it/unibo/alchemist/model/interfaces/geometry/euclidean/twod",
                                    "baseUrl": "https://alchemistsimulator.github.io/latest",
                                    "fileName": "MutableConvexPolygon",
                                    "extension": "html",
                                    "usePrettyUrl": true,
                                    "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/geometry/euclidean/twod/MutableConvexPolygon"
                                  },
                                  "description": "",
                                  "title": "MutableConvexPolygon",
                                  "content": "<p>A mutable ConvexPolygon.<\/p>\n<p>addVertex\nAdds a vertex in the specified position.<p>If the operation would cause the violation of the convexity, false\nis returned and the operation is not performed.<\/p>\nremoveVertex\nRemoves the specified vertex.<p>If the operation would cause the violation of the convexity, false\nis returned and the operation is not performed.<\/p>\nmoveVertex\nMoves the specified vertex to the new absolute coordinates provided.<p>If the operation would cause the violation of the convexity, false\nis returned and the operation is not performed.<\/p>\nmoveEdge\nMoves the specified edge to the new absolute coordinates provided.<p>If the operation would cause the violation of the convexity, false\nis returned and the operation is not performed.<\/p>\nunion\nPerforms a union in-place with a collection of overlapping\npolygons. Returns a boolean indicating whether the union was\nsuccessful or not (e.g. because the polygon would have lost its\nconvexity or the provided polygons did not overlap).<\/p>\n"
                                }]
                              },
                              "Segment2D": {
                                "ownKey": "Segment2D",
                                "ownPages": [{
                                  "reference": {
                                    "path": "it/unibo/alchemist/model/interfaces/geometry/euclidean/twod",
                                    "baseUrl": "https://alchemistsimulator.github.io/latest",
                                    "fileName": "Segment2D",
                                    "extension": "html",
                                    "usePrettyUrl": true,
                                    "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/geometry/euclidean/twod/Segment2D"
                                  },
                                  "description": "",
                                  "title": "Segment2D",
                                  "content": "<p>Defines a segment from first to second in an euclidean bidimensional space.<init>\nDefines a segment from first to second in an euclidean bidimensional space.\nxAxisAligned\nChecks whether the segment is aligned to the x axis.\nyAxisAligned\nChecks whether the segment is aligned to the y axis.\nisAxisAligned\nChecks whether the segment is axis-aligned.\nslope\nComputes the slope of the line passing through a couple of points.\nIf the points coincide NaN is the result.\ndegenerate\nAn edge is degenerate if its points coincide (and its length is zero).\nmidPoint\nComputes the medium point of the current segment.\nfirst<\/p>\n<p>second<\/p>\n<p>toVector\nMutates an edge to a vector. In particular, the vector representing the\nmovement from the first point to the second point of the edge.\ncontains\nChecks whether the segment (represented by a pair of positions)\ncontains the given point.\nclosestPointTo\nFinds the other of the segment which is closest to the provided position.\ndistanceTo\nComputes the distance between the current segment and a given point.\ndistanceTo\nComputes the (minimum) distance between two segments.<\/p>\n"
                                }]
                              },
                              "Euclidean2DTransformation": {
                                "ownKey": "Euclidean2DTransformation",
                                "ownPages": [{
                                  "reference": {
                                    "path": "it/unibo/alchemist/model/interfaces/geometry/euclidean/twod",
                                    "baseUrl": "https://alchemistsimulator.github.io/latest",
                                    "fileName": "Euclidean2DTransformation",
                                    "extension": "html",
                                    "usePrettyUrl": true,
                                    "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/geometry/euclidean/twod/Euclidean2DTransformation"
                                  },
                                  "description": "",
                                  "title": "Euclidean2DTransformation",
                                  "content": "<p>Defines the possible transformations for a it.unibo.alchemist.model.interfaces.geometry.GeometricShape in a\nbidimensional euclidean space.<\/p>\n<p>rotate\nCounter clockwise rotation.\nrotate\nRotates toward the specified direction.\norigin\nChanges origin.<\/p>\n"
                                }]
                              }
                            },
                            "ownPages": [{
                              "reference": {
                                "path": "it/unibo/alchemist/model/interfaces/geometry/euclidean",
                                "baseUrl": "https://alchemistsimulator.github.io/latest",
                                "fileName": "twod",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/geometry/euclidean/twod"
                              },
                              "description": "",
                              "title": "it.unibo.alchemist.model.interfaces.geometry.euclidean.twod",
                              "content": ""
                            }]
                          }}
                        },
                        "GeometricShape": {
                          "ownKey": "GeometricShape",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/interfaces/geometry",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "GeometricShape",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/geometry/GeometricShape"
                            },
                            "description": "",
                            "title": "GeometricShape",
                            "content": "<p>Models a generic shape.\ndiameter\nThe largest distance between any pair of vertices.\ncentroid\nThe geometric center.\nintersects\nA shape intersects another if any of its points is contained in the other one.\ncontains\nCheck if the shape contains a vector.\ntransformed\nTransforms the shape.<\/p>\n"
                          }]
                        },
                        "ConvexGeometricShape": {
                          "ownKey": "ConvexGeometricShape",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/interfaces/geometry",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "ConvexGeometricShape",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/geometry/ConvexGeometricShape"
                            },
                            "description": "",
                            "title": "ConvexGeometricShape",
                            "content": "<p>A convex GeometricShape.<p>This interface models a property instead of an object, this may be\nunusual but consider it as a contract: interfaces are often said to\nbe contracts the implementor has to comply, the contract defined by\nthis interface implies convexity.<\/p><\/p>\n"
                          }]
                        },
                        "Vector": {
                          "ownKey": "Vector",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/interfaces/geometry",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "Vector",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/geometry/Vector"
                            },
                            "description": "",
                            "title": "Vector",
                            "content": "<p>A generic vector in a multidimensional space.\ndimensions\nThe dimensions of the space this vector belongs to.\ncoordinates\nCoordinates for a Cartesian space.\nImplementors must guarantee that internal state is not exposed.\nmagnitude\nFinds the magnitude of a vector.\nget\nThe coordinate of this vector in the specified dimension relatively to the basis its space is described with.\nplus\nSupport for sum.\nNote: the dimensions must coincide.\nminus\nSupport for subtraction.\nNote: the dimensions must coincide.\ntimes\nMultiplication by a Double.\ndiv\nDivision by a Double.\ndot\nComputes the dot product between two vectors.\nangleBetween\nComputes the angle in radians between two vectors.\ndistanceTo\nComputes the distance between two vectors, interpreted as points in an Euclidean space.\nthrows <a href=\"http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalArgumentException.html\">IllegalArgumentException<\/a> if vectors have different dimensions.\nresize\nResizes the vector in order for it to have a length equal\nto the specified parameter. Its direction and verse are preserved.\nnormalized\nNormalizes the vector.\nnormal\nFind the normal of a vector.<\/p>\n"
                          }]
                        }
                      },
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "geometry",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/geometry"
                        },
                        "description": "",
                        "title": "it.unibo.alchemist.model.interfaces.geometry",
                        "content": ""
                      }]
                    },
                    "ILsaAction": {
                      "ownKey": "ILsaAction",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/interfaces",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "ILsaAction",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces/ILsaAction"
                        },
                        "description": "",
                        "title": "ILsaAction",
                        "content": "<p>cloneAction<\/p>\n<p>getOutboundDependencies<\/p>\n<p>setExecutionContext\nSets the context in which this action will execute.<\/p>\n"
                      }]
                    }
                  },
                  "ownPages": [{
                    "reference": {
                      "path": "it/unibo/alchemist/model",
                      "baseUrl": "https://alchemistsimulator.github.io/latest",
                      "fileName": "interfaces",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/interfaces"
                    },
                    "description": "",
                    "title": "it.unibo.alchemist.model.interfaces",
                    "content": ""
                  }]
                },
                "SAPEREIncarnation": {
                  "ownKey": "SAPEREIncarnation",
                  "ownPages": [{
                    "reference": {
                      "path": "it/unibo/alchemist/model",
                      "baseUrl": "https://alchemistsimulator.github.io/latest",
                      "fileName": "SAPEREIncarnation",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/SAPEREIncarnation"
                    },
                    "description": "",
                    "title": "SAPEREIncarnation",
                    "content": "<p><init><\/p>\n<p>createNode<\/p>\n<p>createCondition<\/p>\n<p>createTimeDistribution<\/p>\n<p>toString<\/p>\n<p>createReaction<\/p>\n<p>createConcentration<\/p>\n<p>createAction<\/p>\n<p>createMolecule<\/p>\n<p>getProperty<\/p>\n"
                  }]
                },
                "ProtelisIncarnation": {
                  "ownKey": "ProtelisIncarnation",
                  "childrenPages": {
                    "ProtectedExecutionEnvironment": {
                      "ownKey": "ProtectedExecutionEnvironment",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/ProtelisIncarnation",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "ProtectedExecutionEnvironment",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/ProtelisIncarnation/ProtectedExecutionEnvironment"
                        },
                        "description": "",
                        "title": "ProtectedExecutionEnvironment",
                        "content": "<p>An ExecutionEnvironment that can read and shadow the content of a Node, but cannot modify it. This is used to prevent badly written properties to interact with the simulation flow.<init><\/p>\n<p>setup<\/p>\n<p>put<\/p>\n<p>has<\/p>\n<p>remove<\/p>\n<p>keySet<\/p>\n<p>get<\/p>\n<p>get<\/p>\n<p>commit<\/p>\n"
                      }]
                    },
                    "DummyContext": {
                      "ownKey": "DummyContext",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/ProtelisIncarnation",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "DummyContext",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/ProtelisIncarnation/DummyContext"
                        },
                        "description": "",
                        "title": "DummyContext",
                        "content": "<p>An org.protelis.vm.ExecutionContext that operates over a node, but does not modify it.<\/p>\n<p>getCurrentTime<\/p>\n<p>nextRandomDouble<\/p>\n<p>getDeviceUID<\/p>\n"
                      }]
                    }
                  },
                  "ownPages": [{
                    "reference": {
                      "path": "it/unibo/alchemist/model",
                      "baseUrl": "https://alchemistsimulator.github.io/latest",
                      "fileName": "ProtelisIncarnation",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/ProtelisIncarnation"
                    },
                    "description": "",
                    "title": "ProtelisIncarnation",
                    "content": "<p><init><\/p>\n<p>VALUE_TOKEN\nThe name that can be used in a property to refer to the extracted value.\ncreateNode<\/p>\n<p>toString<\/p>\n<p>createReaction<\/p>\n<p>createAction<\/p>\n<p>createMolecule<\/p>\n<p>getProperty<\/p>\n<p>createCondition<\/p>\n<p>createTimeDistribution<\/p>\n<p>createConcentration<\/p>\n"
                  }]
                },
                "smartcam": {
                  "ownKey": "smartcam",
                  "childrenPages": {"VisibleNodeImpl": {
                    "ownKey": "VisibleNodeImpl",
                    "ownPages": [{
                      "reference": {
                        "path": "it/unibo/alchemist/model/smartcam",
                        "baseUrl": "https://alchemistsimulator.github.io/latest",
                        "fileName": "VisibleNodeImpl",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/smartcam/VisibleNodeImpl"
                      },
                      "description": "",
                      "title": "VisibleNodeImpl",
                      "content": "<p>Basic implementation of VisibleNode.<init>\nBasic implementation of VisibleNode.\nnode\nThe node seen.\nposition\nThe position of the node.\nequals<\/p>\n<p>hashCode<\/p>\n<p>toString<\/p>\n"
                    }]
                  }},
                  "ownPages": [{
                    "reference": {
                      "path": "it/unibo/alchemist/model",
                      "baseUrl": "https://alchemistsimulator.github.io/latest",
                      "fileName": "smartcam",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/smartcam"
                    },
                    "description": "",
                    "title": "it.unibo.alchemist.model.smartcam",
                    "content": ""
                  }]
                },
                "influencesphere": {
                  "ownKey": "influencesphere",
                  "childrenPages": {
                    "InfluenceSphere": {
                      "ownKey": "InfluenceSphere",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/influencesphere",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "InfluenceSphere",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/influencesphere/InfluenceSphere"
                        },
                        "description": "",
                        "title": "InfluenceSphere",
                        "content": "<p>Area inside which nodes exert an influence on each other.<\/p>\n<p>influentialNodes\nThe list of nodes relevant for this sphere of influence.<\/p>\n"
                      }]
                    },
                    "InfluenceSphere2D": {
                      "ownKey": "InfluenceSphere2D",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/influencesphere",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "InfluenceSphere2D",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/influencesphere/InfluenceSphere2D"
                        },
                        "description": "",
                        "title": "InfluenceSphere2D",
                        "content": "<p>A sphere of influence in the Euclidean world.<init>\nA sphere of influence in the Euclidean world.<\/p>\n<p>influentialNodes\nThe list of nodes relevant for this sphere of influence.<\/p>\n"
                      }]
                    },
                    "FieldOfView2D": {
                      "ownKey": "FieldOfView2D",
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/influencesphere",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "FieldOfView2D",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/influencesphere/FieldOfView2D"
                        },
                        "description": "",
                        "title": "FieldOfView2D",
                        "content": "<p>A sphere of influence representing the sight of a node in the Euclidean world.<init>\nA sphere of influence representing the sight of a node in the Euclidean world.<\/p>\n"
                      }]
                    }
                  },
                  "ownPages": [{
                    "reference": {
                      "path": "it/unibo/alchemist/model",
                      "baseUrl": "https://alchemistsimulator.github.io/latest",
                      "fileName": "influencesphere",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/influencesphere"
                    },
                    "description": "",
                    "title": "it.unibo.alchemist.model.influencesphere",
                    "content": ""
                  }]
                },
                "BiochemistryIncarnation": {
                  "ownKey": "BiochemistryIncarnation",
                  "ownPages": [{
                    "reference": {
                      "path": "it/unibo/alchemist/model",
                      "baseUrl": "https://alchemistsimulator.github.io/latest",
                      "fileName": "BiochemistryIncarnation",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/BiochemistryIncarnation"
                    },
                    "description": "",
                    "title": "BiochemistryIncarnation",
                    "content": "<p><init><\/p>\n<p>createNode<\/p>\n<p>createCondition<\/p>\n<p>createTimeDistribution<\/p>\n<p>toString<\/p>\n<p>createReaction<\/p>\n<p>createConcentration<\/p>\n<p>createAction<\/p>\n<p>createMolecule<\/p>\n<p>getProperty<\/p>\n"
                  }]
                },
                "implementations": {
                  "ownKey": "implementations",
                  "childrenPages": {
                    "concentrations": {
                      "ownKey": "concentrations",
                      "childrenPages": {
                        "Local": {
                          "ownKey": "Local",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/concentrations",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "Local",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/concentrations/Local"
                            },
                            "description": "",
                            "title": "Local",
                            "content": "<p><init><\/p>\n<p><init>\nBuilds a new concentration.<\/p>\n<p>hashCode<\/p>\n<p>getContent<\/p>\n<p>equals<\/p>\n<p>toString<\/p>\n"
                          }]
                        },
                        "LsaConcentration": {
                          "ownKey": "LsaConcentration",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/concentrations",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "LsaConcentration",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/concentrations/LsaConcentration"
                            },
                            "description": "",
                            "title": "LsaConcentration",
                            "content": "<p>This class acts as a fake concentration. It is required in order to enforce compatibility with the basic Alchemist model<init>\nThis class acts as a fake concentration. It is required in order to enforce compatibility with the basic Alchemist model<\/p>\n<p>getContent<\/p>\n"
                          }]
                        }
                      },
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/implementations",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "concentrations",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/concentrations"
                        },
                        "description": "",
                        "title": "it.unibo.alchemist.model.implementations.concentrations",
                        "content": ""
                      }]
                    },
                    "neighborhoods": {
                      "ownKey": "neighborhoods",
                      "childrenPages": {
                        "Neighborhoods": {
                          "ownKey": "Neighborhoods",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/neighborhoods",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "Neighborhoods",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/neighborhoods/Neighborhoods"
                            },
                            "description": "",
                            "title": "Neighborhoods",
                            "content": "<p>Contains utility functions for neighborhoods.<\/p>\n"
                          }]
                        },
                        "SimpleNeighborhood": {
                          "ownKey": "SimpleNeighborhood",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/neighborhoods",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "SimpleNeighborhood",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/neighborhoods/SimpleNeighborhood"
                            },
                            "description": "",
                            "title": "SimpleNeighborhood",
                            "content": "<p>A basic implementation of the Neighborhood interface.<\/p>\n<p>clone<\/p>\n<p>contains<\/p>\n<p>getCenter<\/p>\n<p>getNeighborByNumber<\/p>\n<p>getNeighbors<\/p>\n<p>isEmpty<\/p>\n<p>iterator<\/p>\n<p>size<\/p>\n<p>toString<\/p>\n<p>equals<\/p>\n<p>hashCode<\/p>\n<p>add<\/p>\n<p>remove<\/p>\n<p>shuffled\n<a href=\"https://bit.ly/33Z3xFu\">Fisher\u2013Yates shuffle algorithm<\/a>\nusing Apache random number generator.\nMore information <a href=\"https://en.wikipedia.org/wiki/Fisher-Yates_shuffle\">on Wikipedia<\/a>.<\/p>\n"
                          }]
                        }
                      },
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/implementations",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "neighborhoods",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/neighborhoods"
                        },
                        "description": "",
                        "title": "it.unibo.alchemist.model.implementations.neighborhoods",
                        "content": ""
                      }]
                    },
                    "environments": {
                      "ownKey": "environments",
                      "childrenPages": {
                        "Continuous2DEnvironment": {
                          "ownKey": "Continuous2DEnvironment",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/environments",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "Continuous2DEnvironment",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/environments/Continuous2DEnvironment"
                            },
                            "description": "",
                            "title": "Continuous2DEnvironment",
                            "content": "<p>Implementation of Physics2DEnvironment.<init>\nImplementation of Physics2DEnvironment.\nshapeFactory\nA factory of shapes compatible with this environment.\ngetNodesWithin\nGets all nodes whose shape.intersect is true for the given shape.\ngetHeading\nGets the heading of a node as a direction vector.\nsetHeading\nSets the heading of a node.\ngetShape\nGets the shape of a node relatively to its position and heading in the environment.\nnodeAdded\nKeeps track of the largest diameter of the shapes.\nnodeRemoved\n{@inheritDoc}.\nmoveNodeToPosition\nMoves the node only if it doesn't collide with others.\nnodeShouldBeAdded\nA node should be added only if it doesn't collide with already existing nodes and fits in the environment's\nlimits.\nmakePosition\nCreates an euclidean position from the given coordinates.\ncanNodeFitPosition\nWhether or not a node can be placed in a position.\nmakePosition\nCreate a position from an array of double representing the coordinates of the point.\norigin\nCreate a position corresponding to the origin of this environment.\nshuffled\n<a href=\"https://bit.ly/33Z3xFu\">Fisher\u2013Yates shuffle algorithm<\/a>\nusing Apache random number generator.\nMore information <a href=\"https://en.wikipedia.org/wiki/Fisher-Yates_shuffle\">on Wikipedia<\/a>.<\/p>\n"
                          }]
                        },
                        "Continuous2DObstacles": {
                          "ownKey": "Continuous2DObstacles",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/environments",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "Continuous2DObstacles",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/environments/Continuous2DObstacles"
                            },
                            "description": "",
                            "title": "Continuous2DObstacles",
                            "content": "<p><init><\/p>\n<p>removeObstacle<\/p>\n<p>hasMobileObstacles\nSubclasses dealing with mobile obstacles may change this.\naddObstacle<\/p>\n<p>getObstacles<\/p>\n<p>next<\/p>\n<p>intersectsObstacle<\/p>\n<p>intersectsObstacle<\/p>\n<p>getObstaclesInRange<\/p>\n"
                          }]
                        },
                        "InfiniteHalls": {
                          "ownKey": "InfiniteHalls",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/environments",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "InfiniteHalls",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/environments/InfiniteHalls"
                            },
                            "description": "",
                            "title": "InfiniteHalls",
                            "content": "<p><init>\nDefault builder. Builds halls of size 10 with open doors.\n<init><\/p>\n<p><init><\/p>\n<p><init><\/p>\n<p>isDoorsOpen<\/p>\n<p>getHallSize<\/p>\n<p>getCi<\/p>\n<p>getSi<\/p>\n<p>setDoorsOpen<\/p>\n<p>allowed\nChecks whether a position is allowed or not.\ngetCf<\/p>\n<p>getSf<\/p>\n<p>getEx<\/p>\n"
                          }]
                        },
                        "BioRect2DEnvironmentNoOverlap": {
                          "ownKey": "BioRect2DEnvironmentNoOverlap",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/environments",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "BioRect2DEnvironmentNoOverlap",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/environments/BioRect2DEnvironmentNoOverlap"
                            },
                            "description": "",
                            "title": "BioRect2DEnvironmentNoOverlap",
                            "content": "<p>Implements a limited environment supporting cells with a defined shape, avoiding any overlapping among them.<init>\nReturns an infinite BioRect2DEnvironment.\n<init>\nReturns a limited rectangular BioRect2DEnvironment.<\/p>\n<p>moveNodeToPosition<\/p>\n<p>getMaxDiameterAmongCircularDeformableCells<\/p>\n"
                          }]
                        },
                        "AbstractEnvironment": {
                          "ownKey": "AbstractEnvironment",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/environments",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "AbstractEnvironment",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/environments/AbstractEnvironment"
                            },
                            "description": "",
                            "title": "AbstractEnvironment",
                            "content": "<p>Very generic and basic implementation for an environment. Basically, only manages an internal set of nodes and their position.<\/p>\n<p>getLayers<\/p>\n<p>getLinkingRule<\/p>\n<p>removeNode<\/p>\n<p>getIncarnation<\/p>\n<p>getNeighborhood<\/p>\n<p>getNodesNumber<\/p>\n<p>toString\nNot used internally. Override as you please.\nisTerminated<\/p>\n<p>addTerminator<\/p>\n<p>getSizeInDistanceUnits\nOverride this method if units measuring distance do not match with units used for coordinates. For instance, if your space is non-Euclidean, or if you are using polar coordinates. A notable example is using geographical latitude-longitude as y-x coordinates and meters as distance measure.\ngetLayer<\/p>\n<p>addLayer<\/p>\n<p>setSimulation<\/p>\n<p>getDistanceBetweenNodes<\/p>\n<p>getNodesWithinRange<\/p>\n<p>getNodesWithinRange<\/p>\n<p>setIncarnation<\/p>\n<p>setLinkingRule<\/p>\n<p>iterator<\/p>\n<p>getSimulation<\/p>\n<p>forEach<\/p>\n<p>spliterator<\/p>\n<p>getNodeByID<\/p>\n<p>getPosition\nThis method should not get overridden in general. However, if your\ngetNodes<\/p>\n<p>addNode<\/p>\n"
                          }]
                        },
                        "ImageEnvironmentWithGraph": {
                          "ownKey": "ImageEnvironmentWithGraph",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/environments",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "ImageEnvironmentWithGraph",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/environments/ImageEnvironmentWithGraph"
                            },
                            "description": "",
                            "title": "ImageEnvironmentWithGraph",
                            "content": "<p>An ImageEnvironment providing an Euclidean2DNavigationGraph.\nThe NaviGator algorithm is used to produce such graph (see generateNavigationGraph).\nThe positions where to plant initial seeds should be specified directly in the image,\nmarking each area of the environment with one or more pixels of a given color (defaults\nto blue).<init>\nAn ImageEnvironment providing an Euclidean2DNavigationGraph.\nThe NaviGator algorithm is used to produce such graph (see generateNavigationGraph).\nThe positions where to plant initial seeds should be specified directly in the image,\nmarking each area of the environment with one or more pixels of a given color (defaults\nto blue).<\/p>\n<p>graph<\/p>\n<p>makePosition\nCreate a position from an array of double representing the coordinates of the point.\norigin\nCreate a position corresponding to the origin of this environment.\nshuffled\n<a href=\"https://bit.ly/33Z3xFu\">Fisher\u2013Yates shuffle algorithm<\/a>\nusing Apache random number generator.\nMore information <a href=\"https://en.wikipedia.org/wiki/Fisher-Yates_shuffle\">on Wikipedia<\/a>.<\/p>\n"
                          }]
                        },
                        "BioRect2DEnvironment": {
                          "ownKey": "BioRect2DEnvironment",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/environments",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "BioRect2DEnvironment",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/environments/BioRect2DEnvironment"
                            },
                            "description": "",
                            "title": "BioRect2DEnvironment",
                            "content": "<p><init>\nBuilds a BioRect2DEnvironment with given bounds.\n<init>\nBuilds a BioRect2DEnvironment with infinite bounds.<\/p>\n<p>moveNode<\/p>\n"
                          }]
                        },
                        "MuseumHall": {
                          "ownKey": "MuseumHall",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/environments",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "MuseumHall",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/environments/MuseumHall"
                            },
                            "description": "",
                            "title": "MuseumHall",
                            "content": "<p><init><\/p>\n<p>toString<\/p>\n<p>moveNode<\/p>\n"
                          }]
                        },
                        "LimitedContinuos2D": {
                          "ownKey": "LimitedContinuos2D",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/environments",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "LimitedContinuos2D",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/environments/LimitedContinuos2D"
                            },
                            "description": "",
                            "title": "LimitedContinuos2D",
                            "content": "<p>This class represents a 2D continuous environment with spatial limitations. Those limitations will prevent nodes to move in positions which are not allowed.<init>\nThis class represents a 2D continuous environment with spatial limitations. Those limitations will prevent nodes to move in positions which are not allowed.<\/p>\n<p>moveNodeToPosition\n{@inheritDoc}<\/p>\n"
                          }]
                        },
                        "OSMEnvironment": {
                          "ownKey": "OSMEnvironment",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/environments",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "OSMEnvironment",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/environments/OSMEnvironment"
                            },
                            "description": "",
                            "title": "OSMEnvironment",
                            "content": "<p>This class serves as template for more specific implementations of environments using a map. It encloses the navigation logic, but leaves the subclasses to decide how to provide map data (e.g. loading from disk or rely on online services). The data is then stored in-memory for performance reasons.<init>\nBuilds a new OSMEnvironment, with nodes forced on streets.\n<init><\/p>\n<p><init><\/p>\n<p><init><\/p>\n<p><init><\/p>\n<p>DEFAULT_ALGORITHM\nThe default routing algorithm.\nROUTING_STRATEGY\nThe default routing strategy.\nDEFAULT_APPROXIMATION\nThe default value for approximating the positions comparison.\nDEFAULT_ON_STREETS\nThe default value for the force nodes on streets option.\nDEFAULT_FORCE_STREETS\nThe default value for the discard of nodes too far from streets option.\nenableBenchmark<\/p>\n<p>getSizeInDistanceUnits<\/p>\n<p>getBenchmarkResult<\/p>\n<p>makePosition<\/p>\n<p>computeRoute<\/p>\n<p>computeRoute<\/p>\n<p>computeRoute<\/p>\n<p>computeRoute<\/p>\n<p>computeRoute<\/p>\n"
                          }]
                        },
                        "Rectangular2DEnvironment": {
                          "ownKey": "Rectangular2DEnvironment",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/environments",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "Rectangular2DEnvironment",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/environments/Rectangular2DEnvironment"
                            },
                            "description": "",
                            "title": "Rectangular2DEnvironment",
                            "content": "<p>A bounded Physics2DEnvironment, nodes cannot exist nor move outside the rectangular boundaries centered\nin (0,0).<init>\nA bounded Physics2DEnvironment, nodes cannot exist nor move outside the rectangular boundaries centered\nin (0,0).\nboundaries\nThe boundaries.\nnodeShouldBeAdded\nA node should be added only if it doesn't collide with already existing nodes and fits in the environment's\nlimits.\ncanNodeFitPosition\nWhether or not a node can be placed in a position.\nmakePosition\nCreate a position from an array of double representing the coordinates of the point.\norigin\nCreate a position corresponding to the origin of this environment.\nshuffled\n<a href=\"https://bit.ly/33Z3xFu\">Fisher\u2013Yates shuffle algorithm<\/a>\nusing Apache random number generator.\nMore information <a href=\"https://en.wikipedia.org/wiki/Fisher-Yates_shuffle\">on Wikipedia<\/a>.<\/p>\n"
                          }]
                        },
                        "Abstract2DEnvironment": {
                          "ownKey": "Abstract2DEnvironment",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/environments",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "Abstract2DEnvironment",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/environments/Abstract2DEnvironment"
                            },
                            "description": "",
                            "title": "Abstract2DEnvironment",
                            "content": "<p>Models a bidimensional environment.<\/p>\n<p>getOffset<\/p>\n<p>getSize<\/p>\n<p>moveNodeToPosition\nSubclasses may override this method if they want to change the way a node moves towards some absolute position. Overriding this method will also influence <code>#moveNode(Node, Position2D)<\/code>, as it calls this method in the current implementation\nmoveNode\nSubclasses may override this method if they want to change the way a node moves towards some direction. The current implementation internally calls <code>#moveNodeToPosition(Node, Position2D)<\/code>, as such, overriding that method may suffice.\ngetDimensions<\/p>\n"
                          }]
                        },
                        "ImageEnvironment": {
                          "ownKey": "ImageEnvironment",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/environments",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "ImageEnvironment",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/environments/ImageEnvironment"
                            },
                            "description": "",
                            "title": "ImageEnvironment",
                            "content": "<p>This environment loads an image from the file system, and marks as obstacles all the pixels of a given color.<init><\/p>\n<p><init><\/p>\n<p><init><\/p>\n<p><init><\/p>\n<p>DEFAULT_COLOR\nDefault color to be parsed as obstacle.\nDEFAULT_ZOOM\nDefault zoom level.\nDEFAULT_DELTA_X\nDefault X starting position.\nDEFAULT_DELTA_Y\nDefault Y starting position.<\/p>\n"
                          }]
                        }
                      },
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/implementations",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "environments",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/environments"
                        },
                        "description": "",
                        "title": "it.unibo.alchemist.model.implementations.environments",
                        "content": ""
                      }]
                    },
                    "molecules": {
                      "ownKey": "molecules",
                      "childrenPages": {
                        "Biomolecule": {
                          "ownKey": "Biomolecule",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/molecules",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "Biomolecule",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/molecules/Biomolecule"
                            },
                            "description": "",
                            "title": "Biomolecule",
                            "content": "<p><init>\nCreate a new biomolecule.<\/p>\n"
                          }]
                        },
                        "SimpleMolecule": {
                          "ownKey": "SimpleMolecule",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/molecules",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "SimpleMolecule",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/molecules/SimpleMolecule"
                            },
                            "description": "",
                            "title": "SimpleMolecule",
                            "content": "<p>Simple implementation of Molecule. Ids are generated through a simple Singleton Pattern, no thread safeness is provided.<init><\/p>\n<p>hashCode\n{@inheritDoc}\nequals\n{@inheritDoc}\ngetName<\/p>\n<p>toString\n{@inheritDoc}\ngetId<\/p>\n"
                          }]
                        },
                        "LsaMolecule": {
                          "ownKey": "LsaMolecule",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/molecules",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "LsaMolecule",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/molecules/LsaMolecule"
                            },
                            "description": "",
                            "title": "LsaMolecule",
                            "content": "<p>This class realizes an LsaMolecule, where arguments are of type Expression.<init>\nEmpty molecule, no arguments.\n<init>\nBuilds a new LsaMolecule by interpreting a list of IExpressions. Dramatically faster than parsing, slower than copy.\n<init>\nVery fast constructor, produces a copy of an LsaMolecule. Use whenever possible.\n<init>\nBuilds a LsaMolecule by parsing the passed String. Slow, use only if strictly needed.\n<init>\nBuilds a LsaMolecule by parsing the passed String. Slow, use only if strictly needed.\nSYN_D\nSynthetic property representing the distance.\nSYN_MOL_ID\nSynthetic property representing an LSA ID.\nSYN_NEIGH\nSynthetic property representing the current neighborhood.\nSYN_NODE_ID\nSynthetic property representing the local node id.\nSYN_O\nSynthetic property representing the orientation.\nSYN_RAND\nSynthetic property representing a random value.\nSYN_ROUTE\nSynthetic property representing the distance. If the environment does not support route computation, it falls back to SYN_D.\nSYN_SELECTED\nSynthetic property representing the current selected neighbor (&quot;+&quot; conditions on the left).\nSYN_T\nSynthetic property representing the current simulation time.\nmoreGenericOf<\/p>\n<p>hashCode<\/p>\n<p>equals<\/p>\n<p>toString<\/p>\n<p>compareTo<\/p>\n<p>hasDuplicateVariables<\/p>\n<p>isIstance<\/p>\n<p>dependsOn<\/p>\n<p>toHashString<\/p>\n<p>iterator<\/p>\n<p>isIdenticalTo<\/p>\n<p>size<\/p>\n<p>forEach<\/p>\n<p>allocateVar<\/p>\n<p>argsNumber<\/p>\n<p>getArg<\/p>\n<p>spliterator<\/p>\n<p>generalize<\/p>\n<p>matches<\/p>\n<p>matches<\/p>\n"
                          }]
                        },
                        "Junction": {
                          "ownKey": "Junction",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/molecules",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "Junction",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/molecules/Junction"
                            },
                            "description": "",
                            "title": "Junction",
                            "content": "<p>Represents a junction between two cells.<init>\nBuild a junction.\n<init>\nBuilds a junction from another junction.<\/p>\n<p>reverse\nReturn the reversed junction of the current junction. E.g. junction A-B return junction B-A\ngetMoleculesInCurrentNode<\/p>\n<p>getMoleculesInNeighborNode<\/p>\n<p>dependsOn<\/p>\n"
                          }]
                        }
                      },
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/implementations",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "molecules",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/molecules"
                        },
                        "description": "",
                        "title": "it.unibo.alchemist.model.implementations.molecules",
                        "content": ""
                      }]
                    },
                    "terminators": {
                      "ownKey": "terminators",
                      "childrenPages": {
                        "AfterTime": {
                          "ownKey": "AfterTime",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/terminators",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "AfterTime",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/terminators/AfterTime"
                            },
                            "description": "",
                            "title": "AfterTime",
                            "content": "<p><init><\/p>\n<p>endTime\nthe end time.\ntest\nTries to access the simulation time from the environment.\nIf the simulation is unaccessible, throws an exception.\nOtherwise, reads the current time, and flips to true once it got past the provided endTime.<\/p>\n"
                          }]
                        },
                        "StableForSteps": {
                          "ownKey": "StableForSteps",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/terminators",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "StableForSteps",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/terminators/StableForSteps"
                            },
                            "description": "",
                            "title": "StableForSteps",
                            "content": "<p>A Predicate that tests if an environment's\nnodes (meaning their position and concentration) have\nremained unchanged for a certain amount of steps.<p>The check isn't performed on every step\nof a simulation,\ninstead an interval that determines how many steps are\nto be skipped between each check is specified.\nFor test to return true, an environment must remain unchanged for\n<code>checkInterval * equalIntervals<\/code> steps. This result might not be\nentirely consistent, since the check isn't performed every step so\nas not to cause performance issues. Therefore it might happen that\nsome changes occur in the environment but are reverted before the\nnext check is performed.<\/p><p>test should be called at every step of the simulation in order\nto avoid missing checks.<\/p><init>\nCreates a new StableForSteps with the given values.<\/p>\n<p>test<\/p>\n"
                          }]
                        }
                      },
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/implementations",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "terminators",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/terminators"
                        },
                        "description": "",
                        "title": "it.unibo.alchemist.model.implementations.terminators",
                        "content": ""
                      }]
                    },
                    "groups": {
                      "ownKey": "groups",
                      "childrenPages": {
                        "Friends": {
                          "ownKey": "Friends",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/groups",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "Friends",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/groups/Friends"
                            },
                            "description": "",
                            "title": "Friends",
                            "content": "<p>A generic, leaderless group of pedestrians.<init>\nA generic, leaderless group of pedestrians.<\/p>\n"
                          }]
                        },
                        "GenericGroup": {
                          "ownKey": "GenericGroup",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/groups",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "GenericGroup",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/groups/GenericGroup"
                            },
                            "description": "",
                            "title": "GenericGroup",
                            "content": "<p>Basic implementation of a group.<init>\nBasic implementation of a group.\nmembers\nThe list of pedestrians belonging to this group.\naddMember\nAdd a node in this group if not already part of it.\nremoveMember\nRemove a node from this group.<\/p>\n"
                          }]
                        },
                        "Family": {
                          "ownKey": "Family",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/groups",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "Family",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/groups/Family"
                            },
                            "description": "",
                            "title": "Family",
                            "content": "<p>A Family is modeled as a grup of pedestrians with a leader.<init>\nA Family is modeled as a grup of pedestrians with a leader.\nleader\nThe leader of the group.<\/p>\n"
                          }]
                        },
                        "Alone": {
                          "ownKey": "Alone",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/groups",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "Alone",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/groups/Alone"
                            },
                            "description": "",
                            "title": "Alone",
                            "content": "<p>Group representing a pedestrian alone.<init>\nGroup representing a pedestrian alone.\nmembers\nThe list of pedestrians belonging to this group.\naddMember\nAdd a node in this group if not already part of it.\nremoveMember\nRemove a node from this group.<\/p>\n"
                          }]
                        }
                      },
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/implementations",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "groups",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/groups"
                        },
                        "description": "",
                        "title": "it.unibo.alchemist.model.implementations.groups",
                        "content": ""
                      }]
                    },
                    "positions": {
                      "ownKey": "positions",
                      "childrenPages": {
                        "LatLongPosition": {
                          "ownKey": "LatLongPosition",
                          "childrenPages": {"DistanceFormula": {
                            "ownKey": "DistanceFormula",
                            "ownPages": [{
                              "reference": {
                                "path": "it/unibo/alchemist/model/implementations/positions/LatLongPosition",
                                "baseUrl": "https://alchemistsimulator.github.io/latest",
                                "fileName": "DistanceFormula",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/positions/LatLongPosition/DistanceFormula"
                              },
                              "description": "",
                              "title": "DistanceFormula",
                              "content": "<p>Possible methods to compute the distance between two latitude-longitude points.<\/p>\n"
                            }]
                          }},
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/positions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "LatLongPosition",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/positions/LatLongPosition"
                            },
                            "description": "",
                            "title": "LatLongPosition",
                            "content": "<p>Unmodifiable state version of LatLng, also implementing the GeoPosition interface.<init><\/p>\n<p><init><\/p>\n<p><init><\/p>\n<p><init><\/p>\n<p>y<\/p>\n<p>x<\/p>\n<p>coordinates<\/p>\n<p>dimensions<\/p>\n<p>DEFAULT_DISTANCE_FORMULA\nThe default distance formula.\nEARTH_MEAN_RADIUS_METERS\nMean Earth radius in meters.\nhashCode<\/p>\n<p>equals<\/p>\n<p>toString<\/p>\n<p>getLatitude<\/p>\n<p>minus<\/p>\n<p>getLongitude<\/p>\n<p>getCoordinate<\/p>\n<p>plus<\/p>\n<p>boundingBox<\/p>\n<p>distanceTo<\/p>\n<p>distance\nDistance between two points.\ndistance\nDistance between two points with arbitrary LengthUnit.\ndistanceInRadians<\/p>\n<p> This \"distance\" function is mostly for internal use. Most users will simply rely upon <code>#distance(LatLng, LatLng, LengthUnit, DistanceFormula)<\/code> <\/p> <p> Yields the internal angle for an arc between two points on the surface of a sphere in radians. This angle is in the plane of the great circle connecting the two points measured from an axis through one of the points and the center of the Earth. Multiply this value by the sphere's radius to get the length of the arc. <\/p>\n"
                          }]
                        },
                        "Euclidean2DPosition": {
                          "ownKey": "Euclidean2DPosition",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/positions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "Euclidean2DPosition",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/positions/Euclidean2DPosition"
                            },
                            "description": "",
                            "title": "Euclidean2DPosition",
                            "content": "<p><init><\/p>\n<p><init><\/p>\n<p>y<\/p>\n<p>x<\/p>\n<p>newFrom<\/p>\n<p>normal<\/p>\n"
                          }]
                        },
                        "Manhattan2DPosition": {
                          "ownKey": "Manhattan2DPosition",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/positions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "Manhattan2DPosition",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/positions/Manhattan2DPosition"
                            },
                            "description": "",
                            "title": "Manhattan2DPosition",
                            "content": "<p>This class measures distances as integers. Suitable for bidimensional discrete environments. The distance between two nodes is computed as Manhattan distance.<init><\/p>\n<p>y<\/p>\n<p>x<\/p>\n<p>coordinates<\/p>\n<p>dimensions<\/p>\n<p>hashCode<\/p>\n<p>equals<\/p>\n<p>toString<\/p>\n<p>minus<\/p>\n<p>getCoordinate<\/p>\n<p>plus<\/p>\n<p>boundingBox<\/p>\n<p>distanceTo<\/p>\n"
                          }]
                        },
                        "AbstractEuclideanPosition": {
                          "ownKey": "AbstractEuclideanPosition",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/positions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "AbstractEuclideanPosition",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/positions/AbstractEuclideanPosition"
                            },
                            "description": "",
                            "title": "AbstractEuclideanPosition",
                            "content": "<p>N-dimensional Euclidean position.\ncoordinates<\/p>\n<p>dimensions<\/p>\n<p>samePosition<\/p>\n<p>times\nMultiplication by a number.\nget<\/p>\n<p>boundingBox<\/p>\n<p>div\nDivision by a number.\nhashCode<\/p>\n<p>equals<\/p>\n<p>toString\nCurrently a print of the array of coordinates.\nminus<\/p>\n<p>getCoordinate<\/p>\n<p>plus<\/p>\n<p>distanceTo<\/p>\n"
                          }]
                        },
                        "GPSPointImpl": {
                          "ownKey": "GPSPointImpl",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/positions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "GPSPointImpl",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/positions/GPSPointImpl"
                            },
                            "description": "",
                            "title": "GPSPointImpl",
                            "content": "<p><init><\/p>\n<p><init><\/p>\n<p>y<\/p>\n<p>x<\/p>\n<p>coordinates<\/p>\n<p>dimensions<\/p>\n<p>hashCode<\/p>\n<p>addTime<\/p>\n<p>equals<\/p>\n<p>toString<\/p>\n<p>compareTo<\/p>\n<p>subtractTime<\/p>\n<p>getLatitude<\/p>\n<p>minus<\/p>\n<p>getTime<\/p>\n<p>getLongitude<\/p>\n<p>getCoordinate<\/p>\n<p>plus<\/p>\n<p>boundingBox<\/p>\n<p>distanceTo<\/p>\n"
                          }]
                        }
                      },
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/implementations",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "positions",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/positions"
                        },
                        "description": "",
                        "title": "it.unibo.alchemist.model.implementations.positions",
                        "content": ""
                      }]
                    },
                    "movestrategies": {
                      "ownKey": "movestrategies",
                      "childrenPages": {
                        "AbstractStrategyWithGPS": {
                          "ownKey": "AbstractStrategyWithGPS",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/movestrategies",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "AbstractStrategyWithGPS",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/movestrategies/AbstractStrategyWithGPS"
                            },
                            "description": "",
                            "title": "AbstractStrategyWithGPS",
                            "content": "<p>basic move strategy that use a GPSTrace.<init>\nbasic move strategy that use a GPSTrace.<\/p>\n<p>setTrace<\/p>\n"
                          }]
                        },
                        "RandomTarget": {
                          "ownKey": "RandomTarget",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/movestrategies",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "RandomTarget",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/movestrategies/RandomTarget"
                            },
                            "description": "",
                            "title": "RandomTarget",
                            "content": "<p>Selects a target based on a random direction extracted from directionRng,\nand a random distance extracted from distanceDistribution.\ngetCurrentPosition should return the current position of the object to move.\nT is the type of the concentration of the node.<init>\nHandy constructor for Alchemist where the object to move is a node in the env.\n<init>\nSelects a target based on a random direction extracted from directionRng,\nand a random distance extracted from distanceDistribution.\ngetCurrentPosition should return the current position of the object to move.\nT is the type of the concentration of the node.<\/p>\n<p>chooseTarget\nThe target selection strategy.\nReturns the new target to reach.<\/p>\n"
                          }]
                        },
                        "routing": {
                          "ownKey": "routing",
                          "childrenPages": {
                            "OnStreets": {
                              "ownKey": "OnStreets",
                              "ownPages": [{
                                "reference": {
                                  "path": "it/unibo/alchemist/model/implementations/movestrategies/routing",
                                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                                  "fileName": "OnStreets",
                                  "extension": "html",
                                  "usePrettyUrl": true,
                                  "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/movestrategies/routing/OnStreets"
                                },
                                "description": "",
                                "title": "OnStreets",
                                "content": "<p>This strategy computes a route along streets allowed for a selected Vehicle connecting the starting and ending point.<init><\/p>\n<p>computeRoute<\/p>\n"
                              }]
                            },
                            "IgnoreStreets": {
                              "ownKey": "IgnoreStreets",
                              "ownPages": [{
                                "reference": {
                                  "path": "it/unibo/alchemist/model/implementations/movestrategies/routing",
                                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                                  "fileName": "IgnoreStreets",
                                  "extension": "html",
                                  "usePrettyUrl": true,
                                  "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/movestrategies/routing/IgnoreStreets"
                                },
                                "description": "",
                                "title": "IgnoreStreets",
                                "content": "<p>This strategy ignores any information about the map, and connects the starting and ending point with a straight line using PolygonalChain.<init>\nThis strategy ignores any information about the map, and connects the starting and ending point with a straight line using PolygonalChain.<\/p>\n<p>computeRoute<\/p>\n"
                              }]
                            }
                          },
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/movestrategies",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "routing",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/movestrategies/routing"
                            },
                            "description": "",
                            "title": "it.unibo.alchemist.model.implementations.movestrategies.routing",
                            "content": ""
                          }]
                        },
                        "ZigZagRandomTarget": {
                          "ownKey": "ZigZagRandomTarget",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/movestrategies",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "ZigZagRandomTarget",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/movestrategies/ZigZagRandomTarget"
                            },
                            "description": "",
                            "title": "ZigZagRandomTarget",
                            "content": "<p>Strategy to move an object in a zigzag fashion. It uses euclidean geometry to determine the next position.<p>getCurrentPosition must return the current position of the object to move.\nmakePosition must be able to create a 2D position given the X and Y coordinates in this order.\nrng is the random number generator to use\nmaxDistance defines the maximum distance the object can move before a random change in direction is forced.\nminChangeInDirection is the minimum change in the direction (in degrees) that must be made each\ntime a new direction is chosen.<\/p><p>T is the type of the concentration of the node used in the secondary constructor.<\/p><init>\nHandy constructor for Alchemist where the object to move is a node in the env.\nrng is the random number generator to use\nmaxDistance defines the maximum distance the object can move before a random change in direction is forced.\n<init>\nStrategy to move an object in a zigzag fashion. It uses euclidean geometry to determine the next position.<p>getCurrentPosition must return the current position of the object to move.\nmakePosition must be able to create a 2D position given the X and Y coordinates in this order.\nrng is the random number generator to use\nmaxDistance defines the maximum distance the object can move before a random change in direction is forced.\nminChangeInDirection is the minimum change in the direction (in degrees) that must be made each\ntime a new direction is chosen.<\/p><p>T is the type of the concentration of the node used in the secondary constructor.<\/p><\/p>\n<p>initializePositions\nUtility to initialize lazyinit variables dependent on the environment.\nIt is guaranteed to be called before shouldChangeTarget and chooseTarget.\nshouldChangeTarget\nReturns a boolean indicating whether it is time to change the target or not.\nBy default if it hasn't moved (assuming it's because of an obstacle)\nor or it has reached the previous, then choose another one.\nchooseTarget\nThe target selection strategy.\nReturns the new target to reach.<\/p>\n"
                          }]
                        },
                        "ChangeTargetOnCollision": {
                          "ownKey": "ChangeTargetOnCollision",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/movestrategies",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "ChangeTargetOnCollision",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/movestrategies/ChangeTargetOnCollision"
                            },
                            "description": "",
                            "title": "ChangeTargetOnCollision",
                            "content": "<p>Base class for TargetSelectionStrategy offering automatic target change\non collision and utilities for initialization.\ngetCurrentPosition should return the current position of the object to move.\nP is the position type to use.<init>\nBase class for TargetSelectionStrategy offering automatic target change\non collision and utilities for initialization.\ngetCurrentPosition should return the current position of the object to move.\nP is the position type to use.\ngetCurrentPosition\nReturns the current position of the object to move.\ngetTarget<\/p>\n<p>initializePositions\nUtility to initialize lazyinit variables dependent on the environment.\nIt is guaranteed to be called before shouldChangeTarget and chooseTarget.\nshouldChangeTarget\nReturns a boolean indicating whether it is time to change the target or not.\nBy default if it hasn't moved (assuming it's because of an obstacle)\nor or it has reached the previous, then choose another one.\nchooseTarget\nThe target selection strategy.\nReturns the new target to reach.<\/p>\n"
                          }]
                        },
                        "speed": {
                          "ownKey": "speed",
                          "childrenPages": {
                            "TraceDependantSpeed": {
                              "ownKey": "TraceDependantSpeed",
                              "ownPages": [{
                                "reference": {
                                  "path": "it/unibo/alchemist/model/implementations/movestrategies/speed",
                                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                                  "fileName": "TraceDependantSpeed",
                                  "extension": "html",
                                  "usePrettyUrl": true,
                                  "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/movestrategies/speed/TraceDependantSpeed"
                                },
                                "description": "",
                                "title": "TraceDependantSpeed",
                                "content": "<p>This strategy dynamically tries to move the node adjusting its speed to synchronize the reaction rate and the traces data.<init><\/p>\n<p>getNodeMovementLength<\/p>\n"
                              }]
                            },
                            "GloballyConstantSpeed": {
                              "ownKey": "GloballyConstantSpeed",
                              "ownPages": [{
                                "reference": {
                                  "path": "it/unibo/alchemist/model/implementations/movestrategies/speed",
                                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                                  "fileName": "GloballyConstantSpeed",
                                  "extension": "html",
                                  "usePrettyUrl": true,
                                  "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/movestrategies/speed/GloballyConstantSpeed"
                                },
                                "description": "",
                                "title": "GloballyConstantSpeed",
                                "content": "<p>Similar to ConstantSpeed but takes in consideration the time distribution's rate instead of the reaction's rate.<init>\nSimilar to ConstantSpeed but takes in consideration the time distribution's rate instead of the reaction's rate.<\/p>\n<p>getNodeMovementLength<\/p>\n"
                              }]
                            },
                            "InteractWithOthers": {
                              "ownKey": "InteractWithOthers",
                              "ownPages": [{
                                "reference": {
                                  "path": "it/unibo/alchemist/model/implementations/movestrategies/speed",
                                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                                  "fileName": "InteractWithOthers",
                                  "extension": "html",
                                  "usePrettyUrl": true,
                                  "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/movestrategies/speed/InteractWithOthers"
                                },
                                "description": "",
                                "title": "InteractWithOthers",
                                "content": "<p>This strategy slows down nodes depending on how many &quot;interacting&quot; nodes are found in the surroundings. It is an attempt at modeling crowding slow-downs.<init><\/p>\n<p>getNodeMovementLength<\/p>\n"
                              }]
                            },
                            "RoutingTraceDependantSpeed": {
                              "ownKey": "RoutingTraceDependantSpeed",
                              "ownPages": [{
                                "reference": {
                                  "path": "it/unibo/alchemist/model/implementations/movestrategies/speed",
                                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                                  "fileName": "RoutingTraceDependantSpeed",
                                  "extension": "html",
                                  "usePrettyUrl": true,
                                  "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/movestrategies/speed/RoutingTraceDependantSpeed"
                                },
                                "description": "",
                                "title": "RoutingTraceDependantSpeed",
                                "content": "<p>This TraceDependantSpeed strategy computes the remaining distance by relying on maps data for a selected Vehicle.<init><\/p>\n"
                              }]
                            },
                            "ConstantSpeed": {
                              "ownKey": "ConstantSpeed",
                              "ownPages": [{
                                "reference": {
                                  "path": "it/unibo/alchemist/model/implementations/movestrategies/speed",
                                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                                  "fileName": "ConstantSpeed",
                                  "extension": "html",
                                  "usePrettyUrl": true,
                                  "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/movestrategies/speed/ConstantSpeed"
                                },
                                "description": "",
                                "title": "ConstantSpeed",
                                "content": "<p>This strategy makes the node move at an average constant speed, which is influenced by the it.unibo.alchemist.model.interfaces.TimeDistribution of the Reaction hosting this it.unibo.alchemist.model.interfaces.Action. This action tries to normalize on the Reaction rate, but if the it.unibo.alchemist.model.interfaces.TimeDistribution has a high variance, the movements on the map will inherit this tract.<init><\/p>\n<p>getNodeMovementLength<\/p>\n"
                              }]
                            },
                            "StraightLineTraceDependantSpeed": {
                              "ownKey": "StraightLineTraceDependantSpeed",
                              "ownPages": [{
                                "reference": {
                                  "path": "it/unibo/alchemist/model/implementations/movestrategies/speed",
                                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                                  "fileName": "StraightLineTraceDependantSpeed",
                                  "extension": "html",
                                  "usePrettyUrl": true,
                                  "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/movestrategies/speed/StraightLineTraceDependantSpeed"
                                },
                                "description": "",
                                "title": "StraightLineTraceDependantSpeed",
                                "content": "<p>This TraceDependantSpeed uses the distance between coordinates for estimating the distance.<init><\/p>\n"
                              }]
                            },
                            "ConstantSpace": {
                              "ownKey": "ConstantSpace",
                              "ownPages": [{
                                "reference": {
                                  "path": "it/unibo/alchemist/model/implementations/movestrategies/speed",
                                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                                  "fileName": "ConstantSpace",
                                  "extension": "html",
                                  "usePrettyUrl": true,
                                  "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/movestrategies/speed/ConstantSpace"
                                },
                                "description": "",
                                "title": "ConstantSpace",
                                "content": "<p>This strategy makes the node move every time of a fixed amount of space.<init><\/p>\n<p>getNodeMovementLength<\/p>\n"
                              }]
                            }
                          },
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/movestrategies",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "speed",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/movestrategies/speed"
                            },
                            "description": "",
                            "title": "it.unibo.alchemist.model.implementations.movestrategies.speed",
                            "content": ""
                          }]
                        },
                        "target": {
                          "ownKey": "target",
                          "childrenPages": {
                            "FollowTarget": {
                              "ownKey": "FollowTarget",
                              "ownPages": [{
                                "reference": {
                                  "path": "it/unibo/alchemist/model/implementations/movestrategies/target",
                                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                                  "fileName": "FollowTarget",
                                  "extension": "html",
                                  "usePrettyUrl": true,
                                  "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/movestrategies/target/FollowTarget"
                                },
                                "description": "",
                                "title": "FollowTarget",
                                "content": "<p>This strategy reads the value of a &quot;target&quot; molecule and tries to interpret it as a coordinate.<init><\/p>\n<p>getTarget<\/p>\n"
                              }]
                            },
                            "FollowTargetOnMap": {
                              "ownKey": "FollowTargetOnMap",
                              "ownPages": [{
                                "reference": {
                                  "path": "it/unibo/alchemist/model/implementations/movestrategies/target",
                                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                                  "fileName": "FollowTargetOnMap",
                                  "extension": "html",
                                  "usePrettyUrl": true,
                                  "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/movestrategies/target/FollowTargetOnMap"
                                },
                                "description": "",
                                "title": "FollowTargetOnMap",
                                "content": "<p>This strategy reads the value of a &quot;target&quot; molecule and tries to interpret it as a coordinate.<init><\/p>\n"
                              }]
                            },
                            "FollowTrace": {
                              "ownKey": "FollowTrace",
                              "ownPages": [{
                                "reference": {
                                  "path": "it/unibo/alchemist/model/implementations/movestrategies/target",
                                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                                  "fileName": "FollowTrace",
                                  "extension": "html",
                                  "usePrettyUrl": true,
                                  "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/movestrategies/target/FollowTrace"
                                },
                                "description": "",
                                "title": "FollowTrace",
                                "content": "<p>This strategy follows a Route.<init><\/p>\n<p>getTarget<\/p>\n"
                              }]
                            }
                          },
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/movestrategies",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "target",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/movestrategies/target"
                            },
                            "description": "",
                            "title": "it.unibo.alchemist.model.implementations.movestrategies.target",
                            "content": ""
                          }]
                        }
                      },
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/implementations",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "movestrategies",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/movestrategies"
                        },
                        "description": "",
                        "title": "it.unibo.alchemist.model.implementations.movestrategies",
                        "content": ""
                      }]
                    },
                    "graph": {
                      "ownKey": "graph",
                      "childrenPages": {
                        "Path": {
                          "ownKey": "Path",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/graph",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "Path",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/graph/Path"
                            },
                            "description": "",
                            "title": "Path",
                            "content": "<p>Models a path composed by a list of nodes and a weight.<init>\nModels a path composed by a list of nodes and a weight.\npath<\/p>\n<p>weight<\/p>\n"
                          }]
                        },
                        "NavigationGraphImpl": {
                          "ownKey": "NavigationGraphImpl",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/graph",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "NavigationGraphImpl",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/graph/NavigationGraphImpl"
                            },
                            "description": "",
                            "title": "NavigationGraphImpl",
                            "content": "<p>An implementation of NavigationGraph.<init>\nAn implementation of NavigationGraph.<\/p>\n<p>destinations\nA list of positions of interest (usually destinations).\nedges<\/p>\n<p>isReachable\nChecks if there is a path between two provided nodes.\ndepthFirstSearch\nPerforms a depth-first search starting from the provided node and looking for the target node.\ndestinationsWithin<\/p>\n<p>containsAnyDestination\nChecks whether the provided node contains any destination.\nnodeContaining<\/p>\n<p>dijkstraShortestPath\nFinds the shortest path between the provided nodes, returns null if no path between them\ncould be found. If the two nodes coincide, the path will contain only such node and will\nweight 0.\ndijkstraShortestPath\nSee dijkstraShortestPath. In a navigation graph, the weight assigned by\ndefault to each edge is computed as the distance between the centroids of the\ntwo ConvexGeometricShapes the edge connects.\nprimMinimumSpanningForest\nComputes the minimum spanning forest of the graph using Prim's algorithm.\nNote that the graph must be undirected (i.e. each edge must be duplicated).\nprimMinimumSpanningForest\nSee primMinimumSpanningForest.<\/p>\n"
                          }]
                        },
                        "GraphImpl": {
                          "ownKey": "GraphImpl",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/graph",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "GraphImpl",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/graph/GraphImpl"
                            },
                            "description": "",
                            "title": "GraphImpl",
                            "content": "<p>An implementation of Graph.<init>\nAn implementation of Graph.<\/p>\n<p>nodes\nA list is used to allow predictable iteration order.\nedgesFrom<\/p>\n<p>edges<\/p>\n<p>isReachable\nChecks if there is a path between two provided nodes.\ndepthFirstSearch\nPerforms a depth-first search starting from the provided node and looking for the target node.\ndijkstraShortestPath\nFinds the shortest path between the provided nodes, returns null if no path between them\ncould be found. If the two nodes coincide, the path will contain only such node and will\nweight 0.\nprimMinimumSpanningForest\nComputes the minimum spanning forest of the graph using Prim's algorithm.\nNote that the graph must be undirected (i.e. each edge must be duplicated).<\/p>\n"
                          }]
                        },
                        "builder": {
                          "ownKey": "builder",
                          "childrenPages": {
                            "NavigationGraphBuilder": {
                              "ownKey": "NavigationGraphBuilder",
                              "ownPages": [{
                                "reference": {
                                  "path": "it/unibo/alchemist/model/implementations/graph/builder",
                                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                                  "fileName": "NavigationGraphBuilder",
                                  "extension": "html",
                                  "usePrettyUrl": true,
                                  "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/graph/builder/NavigationGraphBuilder"
                                },
                                "description": "",
                                "title": "NavigationGraphBuilder",
                                "content": "<p><init><\/p>\n<p>build<\/p>\n<p>addEdge<\/p>\n<p>addEdge<\/p>\n<p>addUndirectedEdge\nAdds two edges: one connecting node1 to node2 and another connecting node2 to node1.\naddUndirectedEdge<\/p>\n"
                              }]
                            },
                            "GraphBuilder": {
                              "ownKey": "GraphBuilder",
                              "ownPages": [{
                                "reference": {
                                  "path": "it/unibo/alchemist/model/implementations/graph/builder",
                                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                                  "fileName": "GraphBuilder",
                                  "extension": "html",
                                  "usePrettyUrl": true,
                                  "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/graph/builder/GraphBuilder"
                                },
                                "description": "",
                                "title": "GraphBuilder",
                                "content": "<p>A builder for Graph.<init>\nA builder for Graph.\nadjacencyList<\/p>\n<p>nodes\nThe builder allows to access already added node.\naddNode<\/p>\n<p>edgesFrom\nThe builder allows to access already added edges.\naddEdge<\/p>\n<p>build\nBuilds the graph.\naddEdge<\/p>\n<p>addEdge<\/p>\n<p>addUndirectedEdge\nAdds two edges: one connecting node1 to node2 and another connecting node2 to node1.\naddUndirectedEdge<\/p>\n"
                              }]
                            }
                          },
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/graph",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "builder",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/graph/builder"
                            },
                            "description": "",
                            "title": "it.unibo.alchemist.model.implementations.graph.builder",
                            "content": "<p>addEdge<\/p>\n<p>addEdge<\/p>\n<p>addUndirectedEdge\nAdds two edges: one connecting node1 to node2 and another connecting node2 to node1.\naddUndirectedEdge<\/p>\n"
                          }]
                        }
                      },
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/implementations",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "graph",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/graph"
                        },
                        "description": "",
                        "title": "it.unibo.alchemist.model.implementations.graph",
                        "content": "<p>edges<\/p>\n<p>isReachable\nChecks if there is a path between two provided nodes.\ndepthFirstSearch\nPerforms a depth-first search starting from the provided node and looking for the target node.\ndestinationsWithin<\/p>\n<p>containsAnyDestination\nChecks whether the provided node contains any destination.\nnodeContaining<\/p>\n<p>dijkstraShortestPath\nFinds the shortest path between the provided nodes, returns null if no path between them\ncould be found. If the two nodes coincide, the path will contain only such node and will\nweight 0.\ndijkstraShortestPath\nSee dijkstraShortestPath. In a navigation graph, the weight assigned by\ndefault to each edge is computed as the distance between the centroids of the\ntwo ConvexGeometricShapes the edge connects.\nprimMinimumSpanningForest\nComputes the minimum spanning forest of the graph using Prim's algorithm.\nNote that the graph must be undirected (i.e. each edge must be duplicated).\nprimMinimumSpanningForest\nSee primMinimumSpanningForest.<\/p>\n"
                      }]
                    },
                    "routes": {
                      "ownKey": "routes",
                      "childrenPages": {
                        "GraphHopperRoute": {
                          "ownKey": "GraphHopperRoute",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/routes",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "GraphHopperRoute",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/routes/GraphHopperRoute"
                            },
                            "description": "",
                            "title": "GraphHopperRoute",
                            "content": "<p><init><\/p>\n<p>length<\/p>\n<p>stream<\/p>\n<p>getPoint<\/p>\n<p>iterator<\/p>\n<p>size<\/p>\n<p>getPoints<\/p>\n<p>getTripTime<\/p>\n"
                          }]
                        },
                        "PolygonalChain": {
                          "ownKey": "PolygonalChain",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/routes",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "PolygonalChain",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/routes/PolygonalChain"
                            },
                            "description": "",
                            "title": "PolygonalChain",
                            "content": "<p>Abstract route implementation.<init><\/p>\n<p><init><\/p>\n<p>hashCode<\/p>\n<p>length<\/p>\n<p>stream<\/p>\n<p>getPoint<\/p>\n<p>equals<\/p>\n<p>iterator<\/p>\n<p>toString\nPrints the class name and the list of positions.\nsize<\/p>\n<p>getPoints<\/p>\n"
                          }]
                        },
                        "GPSTraceImpl": {
                          "ownKey": "GPSTraceImpl",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/routes",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "GPSTraceImpl",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/routes/GPSTraceImpl"
                            },
                            "description": "",
                            "title": "GPSTraceImpl",
                            "content": "<p><init><\/p>\n<p><init><\/p>\n<p>getFinalPosition<\/p>\n<p>getPreviousPosition<\/p>\n<p>getTripTime<\/p>\n<p>interpolate<\/p>\n<p>getInitialPosition<\/p>\n<p>startAt<\/p>\n<p>getStartTime<\/p>\n<p>getFinalTime<\/p>\n<p>getNextPosition<\/p>\n"
                          }]
                        }
                      },
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/implementations",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "routes",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/routes"
                        },
                        "description": "",
                        "title": "it.unibo.alchemist.model.implementations.routes",
                        "content": ""
                      }]
                    },
                    "times": {
                      "ownKey": "times",
                      "childrenPages": {"DoubleTime": {
                        "ownKey": "DoubleTime",
                        "ownPages": [{
                          "reference": {
                            "path": "it/unibo/alchemist/model/implementations/times",
                            "baseUrl": "https://alchemistsimulator.github.io/latest",
                            "fileName": "DoubleTime",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/times/DoubleTime"
                          },
                          "description": "",
                          "title": "DoubleTime",
                          "content": "<p>This class is meant to provide a reasonably fast time implementation. Should be suitable for most usages, but it inherits the problem of the loss of precision of double numbers when comparing big numbers with low numbers. It could become a real problem with long simulations.<init>\nDefault empty constructor, builds a DoubleTime with value 0.\n<init>\nBuilds a new DoubleTime starting from the specified value.<\/p>\n<p>toDouble<\/p>\n<p>hashCode<\/p>\n<p>equals<\/p>\n<p>times<\/p>\n<p>toString<\/p>\n<p>compareTo<\/p>\n<p>isInfinite<\/p>\n<p>minus<\/p>\n<p>plus<\/p>\n"
                        }]
                      }},
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/implementations",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "times",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/times"
                        },
                        "description": "",
                        "title": "it.unibo.alchemist.model.implementations.times",
                        "content": ""
                      }]
                    },
                    "nodes": {
                      "ownKey": "nodes",
                      "childrenPages": {
                        "CognitivePedestrian2D": {
                          "ownKey": "CognitivePedestrian2D",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/nodes",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "CognitivePedestrian2D",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/nodes/CognitivePedestrian2D"
                            },
                            "description": "",
                            "title": "CognitivePedestrian2D",
                            "content": "<p>Implementation of a cognitive pedestrian in the Euclidean world.<init><\/p>\n<p><init><\/p>\n<p><init>\nImplementation of a cognitive pedestrian in the Euclidean world.<\/p>\n<p>getShape<\/p>\n<p>targetDistance\nCalculate the distance between this pedestrian current position and the specified steering action target.\nshuffled\n<a href=\"https://bit.ly/33Z3xFu\">Fisher\u2013Yates shuffle algorithm<\/a>\nusing Apache random number generator.\nMore information <a href=\"https://en.wikipedia.org/wiki/Fisher-Yates_shuffle\">on Wikipedia<\/a>.<\/p>\n"
                          }]
                        },
                        "AbstractNode": {
                          "ownKey": "AbstractNode",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/nodes",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "AbstractNode",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/nodes/AbstractNode"
                            },
                            "description": "",
                            "title": "AbstractNode",
                            "content": "<p>This class realizes an abstract node. You may extend it to realize your own nodes.<init><\/p>\n<p>contains\n{@inheritDoc}\nhashCode<\/p>\n<p>getChemicalSpecies\n{@inheritDoc}\nequals<\/p>\n<p>setConcentration\n{@inheritDoc}\ntoString\n{@inheritDoc}\ngetId<\/p>\n<p>compareTo<\/p>\n<p>getShape\nOverride to provide a different shape than the default adimensional one.\naddReaction<\/p>\n<p>cloneNode\nDefault implementation fails: override correctly calling the constructor.\nremoveConcentration\n{@inheritDoc}\ngetReactions<\/p>\n<p>getConcentration\n{@inheritDoc}\niterator<\/p>\n<p>getContents\n{@inheritDoc}\nforEach<\/p>\n<p>spliterator<\/p>\n<p>removeReaction<\/p>\n"
                          }]
                        },
                        "IntegerNode": {
                          "ownKey": "IntegerNode",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/nodes",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "IntegerNode",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/nodes/IntegerNode"
                            },
                            "description": "",
                            "title": "IntegerNode",
                            "content": "<p><init>\nCreate a new integer node.<\/p>\n"
                          }]
                        },
                        "OrientingHomogeneousPedestrian2D": {
                          "ownKey": "OrientingHomogeneousPedestrian2D",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/nodes",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "OrientingHomogeneousPedestrian2D",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/nodes/OrientingHomogeneousPedestrian2D"
                            },
                            "description": "",
                            "title": "OrientingHomogeneousPedestrian2D",
                            "content": "<p>A homogeneous OrientingPedestrian in an EuclideanPhysics2DEnvironmentWithGraph.<init>\nA homogeneous OrientingPedestrian in an EuclideanPhysics2DEnvironmentWithGraph.<\/p>\n<p>getShape<\/p>\n<p>targetDistance\nCalculate the distance between this pedestrian current position and the specified steering action target.\nshuffled\n<a href=\"https://bit.ly/33Z3xFu\">Fisher\u2013Yates shuffle algorithm<\/a>\nusing Apache random number generator.\nMore information <a href=\"https://en.wikipedia.org/wiki/Fisher-Yates_shuffle\">on Wikipedia<\/a>.<\/p>\n"
                          }]
                        },
                        "EnvironmentNodeImpl": {
                          "ownKey": "EnvironmentNodeImpl",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/nodes",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "EnvironmentNodeImpl",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/nodes/EnvironmentNodeImpl"
                            },
                            "description": "",
                            "title": "EnvironmentNodeImpl",
                            "content": "<p><init>\nCreate a new environment node.<\/p>\n<p>setConcentration<\/p>\n"
                          }]
                        },
                        "DoubleNode": {
                          "ownKey": "DoubleNode",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/nodes",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "DoubleNode",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/nodes/DoubleNode"
                            },
                            "description": "",
                            "title": "DoubleNode",
                            "content": "<p><init>\nBuilds a new DoubleNode.<\/p>\n"
                          }]
                        },
                        "ProtelisNode": {
                          "ownKey": "ProtelisNode",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/nodes",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "ProtelisNode",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/nodes/ProtelisNode"
                            },
                            "description": "",
                            "title": "ProtelisNode",
                            "content": "<p><init>\nBuilds a new ProtelisNode.<\/p>\n<p>getNetworkManager<\/p>\n<p>commit<\/p>\n<p>cloneNode<\/p>\n<p>has<\/p>\n<p>get<\/p>\n<p>get<\/p>\n<p>setup<\/p>\n<p>putField\nWrites a Map representation of the Field on the environment.\nput<\/p>\n<p>toString<\/p>\n<p>remove<\/p>\n<p>addNetworkManger\nAdds a new AlchemistNetworkManager.\nkeySet<\/p>\n"
                          }]
                        },
                        "CircleNode": {
                          "ownKey": "CircleNode",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/nodes",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "CircleNode",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/nodes/CircleNode"
                            },
                            "description": "",
                            "title": "CircleNode",
                            "content": "<p>A it.unibo.alchemist.model.interfaces.Node with a circle shape meant to be added to a\nit.unibo.alchemist.model.interfaces.environments.PhysicsEnvironment.<init>\nA it.unibo.alchemist.model.interfaces.Node with a circle shape meant to be added to a\nit.unibo.alchemist.model.interfaces.environments.PhysicsEnvironment.<\/p>\n<p>getShape\n{@inheritDoc}.\ncreateT\nReturns null because T is unknown.\nshuffled\n<a href=\"https://bit.ly/33Z3xFu\">Fisher\u2013Yates shuffle algorithm<\/a>\nusing Apache random number generator.\nMore information <a href=\"https://en.wikipedia.org/wiki/Fisher-Yates_shuffle\">on Wikipedia<\/a>.<\/p>\n"
                          }]
                        },
                        "OrientingCognitivePedestrian2D": {
                          "ownKey": "OrientingCognitivePedestrian2D",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/nodes",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "OrientingCognitivePedestrian2D",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/nodes/OrientingCognitivePedestrian2D"
                            },
                            "description": "",
                            "title": "OrientingCognitivePedestrian2D",
                            "content": "<p>A cognitive OrientingPedestrian in an EuclideanPhysics2DEnvironmentWithGraph.<init>\nAllows to specify age and gender with a string.\n<init>\nAllows to specify age with an int and gender with a string.\n<init>\nA cognitive OrientingPedestrian in an EuclideanPhysics2DEnvironmentWithGraph.\ncompliance\nValue between 0 and 1 representing the attitude towards conforming to social rules of this pedestrian.\nage\nThe age of this pedestrian.\ngender\nThe gender of this pedestrian.\ngetShape<\/p>\n<p>probabilityOfHelping\nValue between 0 and 1 representing the probability this pedestrian will help another pedestrian in difficulty.\ndangerBelief\nValue representing the current belief of the situation dangerousness for this pedestrian.\nfear\nValue representing the level of fear of this pedestrian.\nwantsToEvacuate\nWhether or not this pedestrian intends to evacuate.\ncognitiveCharacteristics\nThe list of all the cognitive characteristics of this pedestrian.\ninfluencialPeople\nA list of all the pedestrians inside at least one of the sensory spheres of this pedestrian.\ntargetDistance\nCalculate the distance between this pedestrian current position and the specified steering action target.\nshuffled\n<a href=\"https://bit.ly/33Z3xFu\">Fisher\u2013Yates shuffle algorithm<\/a>\nusing Apache random number generator.\nMore information <a href=\"https://en.wikipedia.org/wiki/Fisher-Yates_shuffle\">on Wikipedia<\/a>.<\/p>\n"
                          }]
                        },
                        "LsaNode": {
                          "ownKey": "LsaNode",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/nodes",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "LsaNode",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/nodes/LsaNode"
                            },
                            "description": "",
                            "title": "LsaNode",
                            "content": "<p>This class realizes a node with LSA concentration.<init><\/p>\n<p>contains<\/p>\n<p>getChemicalSpecies<\/p>\n<p>setConcentration<\/p>\n<p>setConcentration<\/p>\n<p>toString<\/p>\n<p>removeConcentration<\/p>\n<p>getConcentration<\/p>\n<p>getLsaSpace<\/p>\n<p>getContents<\/p>\n"
                          }]
                        },
                        "IntNode": {
                          "ownKey": "IntNode",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/nodes",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "IntNode",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/nodes/IntNode"
                            },
                            "description": "",
                            "title": "IntNode",
                            "content": "<p>An integer node.<init>\nAn integer node.<\/p>\n<p>createT<\/p>\n<p>shuffled\n<a href=\"https://bit.ly/33Z3xFu\">Fisher\u2013Yates shuffle algorithm<\/a>\nusing Apache random number generator.\nMore information <a href=\"https://en.wikipedia.org/wiki/Fisher-Yates_shuffle\">on Wikipedia<\/a>.<\/p>\n"
                          }]
                        },
                        "AbstractOrientingPedestrian": {
                          "ownKey": "AbstractOrientingPedestrian",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/nodes",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "AbstractOrientingPedestrian",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/nodes/AbstractOrientingPedestrian"
                            },
                            "description": "",
                            "title": "AbstractOrientingPedestrian",
                            "content": "<p>An abstract OrientingPedestrian.\nThis class defines an algorithm capable of generating a pseudo-random cognitiveMap\nbased on a NavigationGraph of the environment. The latter can be obtained from\nEnvironment2DWithGraphs, which is the only type of environment this pedestrian can\nbe placed into. The creation of landmarks is left to subclasses via factory method.<init>\nAn abstract OrientingPedestrian.\nThis class defines an algorithm capable of generating a pseudo-random cognitiveMap\nbased on a NavigationGraph of the environment. The latter can be obtained from\nEnvironment2DWithGraphs, which is the only type of environment this pedestrian can\nbe placed into. The creation of landmarks is left to subclasses via factory method.\nvolatileMemory\nThe volatile memory of the agent, it models the ability to remember rooms\nor spaces of the environment already visited by the agent since the start\nof the simulation. In particular, each room is paired with the number of\nvisits.\ncognitiveMap\nThe cognitive map of the agent. A cognitive map is composed of landmarks\n(elements of the environment easy to remember due to their uniqueness)\nand spatial relations between them, it is represented using a NavigationGraph.\nknowledgeDegree\nThe knowledge degree of the agent concerning the environment. It's\na percentage value in <a href=\"#\">0,1<\/a>.\nrandomGenerator\nThe random generator to use in order to preserve reproducibility.\nenvironment\nThe environment this pedestrian is into.\ngenerateLandmarkWithin\nGenerates a landmark entirely contained in the given region. If such region contains\none or more destinations, the generated landmark must contain at least one of them.\ntargetDistance\nCalculate the distance between this pedestrian current position and the specified steering action target.\nshuffled\n<a href=\"https://bit.ly/33Z3xFu\">Fisher\u2013Yates shuffle algorithm<\/a>\nusing Apache random number generator.\nMore information <a href=\"https://en.wikipedia.org/wiki/Fisher-Yates_shuffle\">on Wikipedia<\/a>.<\/p>\n"
                          }]
                        },
                        "CircularDeformableCellImpl": {
                          "ownKey": "CircularDeformableCellImpl",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/nodes",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "CircularDeformableCellImpl",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/nodes/CircularDeformableCellImpl"
                            },
                            "description": "",
                            "title": "CircularDeformableCellImpl",
                            "content": "<p>Implementation of a circular deformable cell.<init>\nCreate a circular deformable cell of maxDiam = maxDiameter and minDiam = deformability * maxDiam.<\/p>\n<p>getMaxRadius<\/p>\n<p>getMaxDiameter<\/p>\n"
                          }]
                        },
                        "HomogeneousPedestrianImpl": {
                          "ownKey": "HomogeneousPedestrianImpl",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/nodes",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "HomogeneousPedestrianImpl",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/nodes/HomogeneousPedestrianImpl"
                            },
                            "description": "",
                            "title": "HomogeneousPedestrianImpl",
                            "content": "<p>Implementation of a basic pedestrian.<init>\nImplementation of a basic pedestrian.\nmembershipGroup\nThe group this pedestrian belongs to.\nwalkingSpeed\nThe speed at which the pedestrian moves if it's walking.\nrunningSpeed\nThe speed at which the pedestrian moves if it's running.\nsenses\nThe list of influence spheres belonging to this pedestrian.\ncreateT<\/p>\n<p>speed\nThe speed at which the pedestrian is moving.\ntargetDistance\nCalculate the distance between this pedestrian current position and the specified steering action target.\nshuffled\n<a href=\"https://bit.ly/33Z3xFu\">Fisher\u2013Yates shuffle algorithm<\/a>\nusing Apache random number generator.\nMore information <a href=\"https://en.wikipedia.org/wiki/Fisher-Yates_shuffle\">on Wikipedia<\/a>.<\/p>\n"
                          }]
                        },
                        "CognitivePedestrianImpl": {
                          "ownKey": "CognitivePedestrianImpl",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/nodes",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "CognitivePedestrianImpl",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/nodes/CognitivePedestrianImpl"
                            },
                            "description": "",
                            "title": "CognitivePedestrianImpl",
                            "content": "<p>Implementation of a cognitive pedestrian.<init>\nImplementation of a cognitive pedestrian.<\/p>\n<p>speed\nThe speed at which the pedestrian is moving.\ndangerBelief\nValue representing the current belief of the situation dangerousness for this pedestrian.\nfear\nValue representing the level of fear of this pedestrian.\ncognitiveCharacteristics\nThe list of all the cognitive characteristics of this pedestrian.\nwantsToEvacuate\nWhether or not this pedestrian intends to evacuate.\ninfluencialPeople\nA list of all the pedestrians inside at least one of the sensory spheres of this pedestrian.\ntargetDistance\nCalculate the distance between this pedestrian current position and the specified steering action target.\nshuffled\n<a href=\"https://bit.ly/33Z3xFu\">Fisher\u2013Yates shuffle algorithm<\/a>\nusing Apache random number generator.\nMore information <a href=\"https://en.wikipedia.org/wiki/Fisher-Yates_shuffle\">on Wikipedia<\/a>.<\/p>\n"
                          }]
                        },
                        "HeterogeneousPedestrian2D": {
                          "ownKey": "HeterogeneousPedestrian2D",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/nodes",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "HeterogeneousPedestrian2D",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/nodes/HeterogeneousPedestrian2D"
                            },
                            "description": "",
                            "title": "HeterogeneousPedestrian2D",
                            "content": "<p>Implementation of an heterogeneous pedestrian in the Euclidean world.<init><\/p>\n<p><init><\/p>\n<p><init>\nImplementation of an heterogeneous pedestrian in the Euclidean world.<\/p>\n<p>getShape<\/p>\n<p>targetDistance\nCalculate the distance between this pedestrian current position and the specified steering action target.\nshuffled\n<a href=\"https://bit.ly/33Z3xFu\">Fisher\u2013Yates shuffle algorithm<\/a>\nusing Apache random number generator.\nMore information <a href=\"https://en.wikipedia.org/wiki/Fisher-Yates_shuffle\">on Wikipedia<\/a>.<\/p>\n"
                          }]
                        },
                        "HeterogeneousPedestrianImpl": {
                          "ownKey": "HeterogeneousPedestrianImpl",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/nodes",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "HeterogeneousPedestrianImpl",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/nodes/HeterogeneousPedestrianImpl"
                            },
                            "description": "",
                            "title": "HeterogeneousPedestrianImpl",
                            "content": "<p>Implementation of an heterogeneous pedestrian.<init>\nImplementation of an heterogeneous pedestrian.\ncompliance\nValue between 0 and 1 representing the attitude towards conforming to social rules of this pedestrian.\nwalkingSpeed\nThe speed at which the pedestrian moves if it's walking.\nrunningSpeed\nThe speed at which the pedestrian moves if it's running.\nage\nthe age of this pedestrian.\ngender\nthe gender of this pedestrian\nprobabilityOfHelping\nValue between 0 and 1 representing the probability this pedestrian will help another pedestrian in difficulty.\ntargetDistance\nCalculate the distance between this pedestrian current position and the specified steering action target.\nshuffled\n<a href=\"https://bit.ly/33Z3xFu\">Fisher\u2013Yates shuffle algorithm<\/a>\nusing Apache random number generator.\nMore information <a href=\"https://en.wikipedia.org/wiki/Fisher-Yates_shuffle\">on Wikipedia<\/a>.<\/p>\n"
                          }]
                        },
                        "CellNodeImpl": {
                          "ownKey": "CellNodeImpl",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/nodes",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "CellNodeImpl",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/nodes/CellNodeImpl"
                            },
                            "description": "",
                            "title": "CellNodeImpl",
                            "content": "<p><init>\ncreate a new cell node.\n<init><\/p>\n<p>contains<\/p>\n<p>getJunctionsCount<\/p>\n<p>removeJunction<\/p>\n<p>setConcentration<\/p>\n<p>getNeighborsLinkWithJunction<\/p>\n<p>containsJunction<\/p>\n<p>getDiameter<\/p>\n<p>setPolarization<\/p>\n<p>getJunctions<\/p>\n<p>getPolarizationVersor<\/p>\n<p>toString\n{@inheritDoc}\ngetAllNodesLinkWithJunction<\/p>\n<p>addJunction<\/p>\n<p>getRadius<\/p>\n<p>addPolarization<\/p>\n"
                          }]
                        },
                        "OrientingPedestrian2D": {
                          "ownKey": "OrientingPedestrian2D",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/nodes",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "OrientingPedestrian2D",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/nodes/OrientingPedestrian2D"
                            },
                            "description": "",
                            "title": "OrientingPedestrian2D",
                            "content": "<p>An OrientingPedestrian in an euclidean bidimensional space.\nThis class defines the method responsible for the creation of landmarks, which\nare represented as Ellipses. These can represent both the human error concerning\nthe exact position of a landmark inside the ellipse and the error concerning the\nangles formed by the connections between landmarks.\nThis class accepts an environment whose graph contains nodes which are (subclasses\nof) ConvexPolygons.<init>\nAn OrientingPedestrian in an euclidean bidimensional space.\nThis class defines the method responsible for the creation of landmarks, which\nare represented as Ellipses. These can represent both the human error concerning\nthe exact position of a landmark inside the ellipse and the error concerning the\nangles formed by the connections between landmarks.\nThis class accepts an environment whose graph contains nodes which are (subclasses\nof) ConvexPolygons.<\/p>\n<p>generateLandmarkWithin\nGenerates a landmark entirely contained in the given region. If such region contains\none or more destinations, the generated landmark must contain at least one of them.\ntargetDistance\nCalculate the distance between this pedestrian current position and the specified steering action target.\nshuffled\n<a href=\"https://bit.ly/33Z3xFu\">Fisher\u2013Yates shuffle algorithm<\/a>\nusing Apache random number generator.\nMore information <a href=\"https://en.wikipedia.org/wiki/Fisher-Yates_shuffle\">on Wikipedia<\/a>.<\/p>\n"
                          }]
                        },
                        "HomogeneousPedestrian2D": {
                          "ownKey": "HomogeneousPedestrian2D",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/nodes",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "HomogeneousPedestrian2D",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/nodes/HomogeneousPedestrian2D"
                            },
                            "description": "",
                            "title": "HomogeneousPedestrian2D",
                            "content": "<p>Implementation of a basic pedestrian in the Euclidean world.<init>\nImplementation of a basic pedestrian in the Euclidean world.<\/p>\n<p>getShape<\/p>\n<p>targetDistance\nCalculate the distance between this pedestrian current position and the specified steering action target.\nshuffled\n<a href=\"https://bit.ly/33Z3xFu\">Fisher\u2013Yates shuffle algorithm<\/a>\nusing Apache random number generator.\nMore information <a href=\"https://en.wikipedia.org/wiki/Fisher-Yates_shuffle\">on Wikipedia<\/a>.<\/p>\n"
                          }]
                        }
                      },
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/implementations",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "nodes",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/nodes"
                        },
                        "description": "",
                        "title": "it.unibo.alchemist.model.implementations.nodes",
                        "content": ""
                      }]
                    },
                    "utils": {
                      "ownKey": "utils",
                      "childrenPages": {
                        "RealDistributionUtil": {
                          "ownKey": "RealDistributionUtil",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/utils",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "RealDistributionUtil",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/utils/RealDistributionUtil"
                            },
                            "description": "",
                            "title": "RealDistributionUtil",
                            "content": "<p>Utility to translate statistics names into a RealDistribution.<\/p>\n<p>makeRealDistribution<\/p>\n"
                          }]
                        },
                        "RectObstacle2D": {
                          "ownKey": "RectObstacle2D",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/utils",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "RectObstacle2D",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/utils/RectObstacle2D"
                            },
                            "description": "",
                            "title": "RectObstacle2D",
                            "content": "<p>This class implements a rectangular obstacle, whose sides are parallel to the cartesian axis.<init>\nBuilds a new RectObstacle2D, given a point, the width and the height.<\/p>\n<p>contains<\/p>\n<p>getId<\/p>\n<p>nearestIntersection<\/p>\n<p>getMinX<\/p>\n<p>next<\/p>\n<p>getMaxX<\/p>\n<p>toString<\/p>\n<p>getMinY<\/p>\n<p>getMaxY<\/p>\n"
                          }]
                        },
                        "BidimensionalGaussian": {
                          "ownKey": "BidimensionalGaussian",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/utils",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "BidimensionalGaussian",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/utils/BidimensionalGaussian"
                            },
                            "description": "",
                            "title": "BidimensionalGaussian",
                            "content": "<p>A 2D gaussian function.<init>\nA 2D gaussian function.<\/p>\n<p>value<\/p>\n<p>integral\nThe integral of the function.<\/p>\n"
                          }]
                        }
                      },
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/implementations",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "utils",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/utils"
                        },
                        "description": "",
                        "title": "it.unibo.alchemist.model.implementations.utils",
                        "content": "<p>makePosition\nCreate a position from an array of double representing the coordinates of the point.\norigin\nCreate a position corresponding to the origin of this environment.\nsurrounding\nCreate a list of points equally distributed in the circle of given radius with center in this position.\nrotate\nPerform the rotation of a position.\nnextDouble\nGenerate a random double between the given bounds.\ndirection\nGenerate a random Euclidean direction.\nposition\nGenerate a random Euclidean position.\nshuffled\n<a href=\"https://bit.ly/33Z3xFu\">Fisher\u2013Yates shuffle algorithm<\/a>\nusing Apache random number generator.\nMore information <a href=\"https://en.wikipedia.org/wiki/Fisher-Yates_shuffle\">on Wikipedia<\/a>.<\/p>\n"
                      }]
                    },
                    "layers": {
                      "ownKey": "layers",
                      "childrenPages": {
                        "BidimensionalGaussianLayer": {
                          "ownKey": "BidimensionalGaussianLayer",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/layers",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "BidimensionalGaussianLayer",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/layers/BidimensionalGaussianLayer"
                            },
                            "description": "",
                            "title": "BidimensionalGaussianLayer",
                            "content": "<p>A Layer based on a 2D gaussian function and an optional baseline value.<init>\nA Layer based on a 2D gaussian function and an optional baseline value.\nfunction\nThe function on which the layer is based.\ncenterX\nx coord of the layer's center.\ncenterY\ny coord of the layer's center.\ngetValue<\/p>\n"
                          }]
                        },
                        "BiomolGradientLayer": {
                          "ownKey": "BiomolGradientLayer",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/layers",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "BiomolGradientLayer",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/layers/BiomolGradientLayer"
                            },
                            "description": "",
                            "title": "BiomolGradientLayer",
                            "content": "<p>A Layer representing a linear distribution in space of a molecule.<init>\nInitialize a gradient layer which grows in concentration proportionally in space.\n<init>\nInitialize a gradient layer which grows in concentration proportionally in space.<\/p>\n<p>getSteep<\/p>\n<p>getParameters<\/p>\n<p>toString<\/p>\n<p>getValue<\/p>\n"
                          }]
                        },
                        "UniformLayer": {
                          "ownKey": "UniformLayer",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/layers",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "UniformLayer",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/layers/UniformLayer"
                            },
                            "description": "",
                            "title": "UniformLayer",
                            "content": "<p>a Layer where the concentration is the same at every point in space.<init><\/p>\n<p>getValue<\/p>\n"
                          }]
                        },
                        "StepLayer": {
                          "ownKey": "StepLayer",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/layers",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "StepLayer",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/layers/StepLayer"
                            },
                            "description": "",
                            "title": "StepLayer",
                            "content": "<p>Implements a Layer with a discontinue spatial distribution: the plane is divided in two parts, both with a constant concentration but with a different in value.<init>\nInitialize a StepLayer.\n<init>\nInitialize a StepLayer where concentration is at its maximum value in first quadrant (for positive values of x and y).<\/p>\n<p>getValue<\/p>\n"
                          }]
                        }
                      },
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/implementations",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "layers",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/layers"
                        },
                        "description": "",
                        "title": "it.unibo.alchemist.model.implementations.layers",
                        "content": ""
                      }]
                    },
                    "timedistributions": {
                      "ownKey": "timedistributions",
                      "childrenPages": {
                        "ExponentialTime": {
                          "ownKey": "ExponentialTime",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/timedistributions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "ExponentialTime",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/timedistributions/ExponentialTime"
                            },
                            "description": "",
                            "title": "ExponentialTime",
                            "content": "<p>Markovian events.<init><\/p>\n<p><init><\/p>\n<p>updateStatus<\/p>\n<p>clone\nMust be overridden by subclasses returning the correct instance.\ngetRate<\/p>\n"
                          }]
                        },
                        "Trigger": {
                          "ownKey": "Trigger",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/timedistributions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "Trigger",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/timedistributions/Trigger"
                            },
                            "description": "",
                            "title": "Trigger",
                            "content": "<p><init><\/p>\n<p>clone<\/p>\n<p>getRate<\/p>\n"
                          }]
                        },
                        "SAPERETimeDistribution": {
                          "ownKey": "SAPERETimeDistribution",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/timedistributions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "SAPERETimeDistribution",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/timedistributions/SAPERETimeDistribution"
                            },
                            "description": "",
                            "title": "SAPERETimeDistribution",
                            "content": "<p>Interface for TimeDistribution that need matches.<\/p>\n<p>getRateEquation<\/p>\n<p>isStatic<\/p>\n<p>setMatches<\/p>\n"
                          }]
                        },
                        "SAPEREExponentialTime": {
                          "ownKey": "SAPEREExponentialTime",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/timedistributions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "SAPEREExponentialTime",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/timedistributions/SAPEREExponentialTime"
                            },
                            "description": "",
                            "title": "SAPEREExponentialTime",
                            "content": "<p>Allows for a Markovian event whose lambda is computed dynamically using a rate equation.<init><\/p>\n<p><init><\/p>\n<p>setMatches<\/p>\n<p>getRateEquation<\/p>\n<p>isStatic<\/p>\n<p>getRate<\/p>\n"
                          }]
                        },
                        "RandomDiracComb": {
                          "ownKey": "RandomDiracComb",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/timedistributions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "RandomDiracComb",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/timedistributions/RandomDiracComb"
                            },
                            "description": "",
                            "title": "RandomDiracComb",
                            "content": "<p>A DiracComb whose rate is determined (uniformly) randomly within the provided bounds.<init><\/p>\n<p><init><\/p>\n"
                          }]
                        },
                        "AnyRealDistribution": {
                          "ownKey": "AnyRealDistribution",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/timedistributions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "AnyRealDistribution",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/timedistributions/AnyRealDistribution"
                            },
                            "description": "",
                            "title": "AnyRealDistribution",
                            "content": "<p>This class is able to use any distribution provided by Apache Math 3 as a subclass of RealDistribution. Being generic, however, it does not allow for dynamic rate tuning (namely, it can't be used to generate events with varying frequency based on <code>it.unibo.alchemist.model.interfaces.Condition#getPropensityContribution()<\/code>.<init><\/p>\n<p><init><\/p>\n<p><init><\/p>\n<p><init><\/p>\n<p>clone\n{@inheritDoc}\ngetRate<\/p>\n"
                          }]
                        },
                        "AbstractDistribution": {
                          "ownKey": "AbstractDistribution",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/timedistributions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "AbstractDistribution",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/timedistributions/AbstractDistribution"
                            },
                            "description": "",
                            "title": "AbstractDistribution",
                            "content": "<p>This class provides, through a template method pattern, an utility that ensures that the distribution does not trigger events before its initial scheduling time.<init><\/p>\n<p>update<\/p>\n<p>getNextOccurence<\/p>\n<p>clone<\/p>\n"
                          }]
                        },
                        "WeibullDistributedWeibullTime": {
                          "ownKey": "WeibullDistributedWeibullTime",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/timedistributions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "WeibullDistributedWeibullTime",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/timedistributions/WeibullDistributedWeibullTime"
                            },
                            "description": "",
                            "title": "WeibullDistributedWeibullTime",
                            "content": "<p>Weibull distributed events, with different (Weibull distributed) mean.<init><\/p>\n<p><init><\/p>\n<p><init><\/p>\n"
                          }]
                        },
                        "DiracComb": {
                          "ownKey": "DiracComb",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/timedistributions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "DiracComb",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/timedistributions/DiracComb"
                            },
                            "description": "",
                            "title": "DiracComb",
                            "content": "<p>A DiracComb is a sequence of events that happen every fixed time interval.<init><\/p>\n<p><init><\/p>\n<p>clone<\/p>\n<p>toString\n{@inheritDoc}\ngetRate<\/p>\n"
                          }]
                        },
                        "WeibullTime": {
                          "ownKey": "WeibullTime",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/timedistributions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "WeibullTime",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/timedistributions/WeibullTime"
                            },
                            "description": "",
                            "title": "WeibullTime",
                            "content": "<p>Weibull distributed events.<init><\/p>\n<p><init><\/p>\n<p><init><\/p>\n<p>updateStatus<\/p>\n<p>clone\n{@inheritDoc}\ngetDeviation<\/p>\n<p>getMean<\/p>\n<p>getRate<\/p>\n"
                          }]
                        }
                      },
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/implementations",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "timedistributions",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/timedistributions"
                        },
                        "description": "",
                        "title": "it.unibo.alchemist.model.implementations.timedistributions",
                        "content": ""
                      }]
                    },
                    "geometry": {
                      "ownKey": "geometry",
                      "childrenPages": {
                        "AwtShapeCompatible": {
                          "ownKey": "AwtShapeCompatible",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/geometry",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "AwtShapeCompatible",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/geometry/AwtShapeCompatible"
                            },
                            "description": "",
                            "title": "AwtShapeCompatible",
                            "content": "<p>Anything which can be represented as a <a href=\"http://docs.oracle.com/javase/6/docs/api/java/awt/Shape.html\">java.awt.Shape<\/a>.<\/p>\n<p>asAwtShape<\/p>\n"
                          }]
                        },
                        "AdimensionalShape": {
                          "ownKey": "AdimensionalShape",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/geometry",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "AdimensionalShape",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/geometry/AdimensionalShape"
                            },
                            "description": "",
                            "title": "AdimensionalShape",
                            "content": "<p>A special shape which does not occupy space and does not intersect with any other, not even with itself.\nIt also ignores any transformation.<init>\nA special shape which does not occupy space and does not intersect with any other, not even with itself.\nIt also ignores any transformation.\ndiameter\nThe largest distance between any pair of vertices.\ncentroid\nThe geometric center.\nintersects\nA shape intersects another if any of its points is contained in the other one.\ncontains\nCheck if the shape contains a vector.\ntransformed\nAny transformation is ignored.<\/p>\n"
                          }]
                        },
                        "AbstractShapeFactory": {
                          "ownKey": "AbstractShapeFactory",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/geometry",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "AbstractShapeFactory",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/geometry/AbstractShapeFactory"
                            },
                            "description": "",
                            "title": "AbstractShapeFactory",
                            "content": "<p>Base class for GeometricTransformation providing a standard implementation for\nGeometricShapeFactory.adimensional.<init>\nBase class for GeometricTransformation providing a standard implementation for\nGeometricShapeFactory.adimensional.\norigin\nThe default origin for the shapes.\nadimensional\nA special shape which does not occupy space and does not intersect with any other, not even with itself.<\/p>\n"
                          }]
                        },
                        "LinesIntersectionResult": {
                          "ownKey": "LinesIntersectionResult",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/geometry",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "LinesIntersectionResult",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/geometry/LinesIntersectionResult"
                            },
                            "description": "",
                            "title": "LinesIntersectionResult",
                            "content": "<p>Describes the result of the intersection between two lines in an euclidean space.<init>\nDescribes the result of the intersection between two lines in an euclidean space.\ntype<\/p>\n<p>point<\/p>\n"
                          }]
                        },
                        "SegmentsIntersectionResult": {
                          "ownKey": "SegmentsIntersectionResult",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/geometry",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "SegmentsIntersectionResult",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/geometry/SegmentsIntersectionResult"
                            },
                            "description": "",
                            "title": "SegmentsIntersectionResult",
                            "content": "<p>Describes the result of the intersection between two segments in an euclidean space.<init>\nDescribes the result of the intersection between two segments in an euclidean space.\ntype<\/p>\n<p>point<\/p>\n"
                          }]
                        },
                        "CircleSegmentIntersectionResult": {
                          "ownKey": "CircleSegmentIntersectionResult",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/geometry",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "CircleSegmentIntersectionResult",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/geometry/CircleSegmentIntersectionResult"
                            },
                            "description": "",
                            "title": "CircleSegmentIntersectionResult",
                            "content": "<p>Describes the result of the intersection between a circle and a segment in an euclidean space.<init>\nDescribes the result of the intersection between a circle and a segment in an euclidean space.\ntype<\/p>\n<p>point1<\/p>\n<p>point2<\/p>\n"
                          }]
                        },
                        "CircleSegmentIntersectionType": {
                          "ownKey": "CircleSegmentIntersectionType",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/geometry",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "CircleSegmentIntersectionType",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/geometry/CircleSegmentIntersectionType"
                            },
                            "description": "",
                            "title": "CircleSegmentIntersectionType",
                            "content": ""
                          }]
                        },
                        "DoubleInterval": {
                          "ownKey": "DoubleInterval",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/geometry",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "DoubleInterval",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/geometry/DoubleInterval"
                            },
                            "description": "",
                            "title": "DoubleInterval",
                            "content": "<p>Defines an interval with double precision.<init>\nDefines an interval with double precision.\nfirst<\/p>\n<p>second<\/p>\n<p>isContained\nChecks whether the interval is contained in another given interval.\nintersection\nFinds the intersection between two intervals. If the intervals do not\nintersect, null is returned.\nintersects\nChecks whether the interval intersects with the one given.\nintersectionEndpointsExcluded\nFinds the intersection between two intervals. If the intervals do not\nintersect or share a single endpoint, null is returned.\nintersectsEndpointsExcluded\nChecks whether the interval intersects with the one given, endpoints are exluded.\nsubtract\nSubtracts a given interval from the current one.\nsubtractAll\nSubtracts all the given intervals from the current one.<\/p>\n"
                          }]
                        },
                        "euclidean": {
                          "ownKey": "euclidean",
                          "childrenPages": {"twod": {
                            "ownKey": "twod",
                            "childrenPages": {
                              "Ellipse": {
                                "ownKey": "Ellipse",
                                "ownPages": [{
                                  "reference": {
                                    "path": "it/unibo/alchemist/model/implementations/geometry/euclidean/twod",
                                    "baseUrl": "https://alchemistsimulator.github.io/latest",
                                    "fileName": "Ellipse",
                                    "extension": "html",
                                    "usePrettyUrl": true,
                                    "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/geometry/euclidean/twod/Ellipse"
                                  },
                                  "description": "",
                                  "title": "Ellipse",
                                  "content": "<p>Adapter of <a href=\"http://docs.oracle.com/javase/6/docs/api/java/awt/geom/Ellipse2D.html\">java.awt.geom.Ellipse2D<\/a> to Euclidean2DConvexShape.<init>\nAdapter of <a href=\"http://docs.oracle.com/javase/6/docs/api/java/awt/geom/Ellipse2D.html\">java.awt.geom.Ellipse2D<\/a> to Euclidean2DConvexShape.\ncentroid\nThe geometric center.\ndiameter\nThe largest distance between any pair of vertices.\nintersects\nA shape intersects another if any of its points is contained in the other one.\ncontains\nCheck if the shape contains a vector.\ntransformed\nTransforms the shape.\nasAwtShape<\/p>\n"
                                }]
                              },
                              "MutableConvexPolygonImpl": {
                                "ownKey": "MutableConvexPolygonImpl",
                                "ownPages": [{
                                  "reference": {
                                    "path": "it/unibo/alchemist/model/implementations/geometry/euclidean/twod",
                                    "baseUrl": "https://alchemistsimulator.github.io/latest",
                                    "fileName": "MutableConvexPolygonImpl",
                                    "extension": "html",
                                    "usePrettyUrl": true,
                                    "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/geometry/euclidean/twod/MutableConvexPolygonImpl"
                                  },
                                  "description": "",
                                  "title": "MutableConvexPolygonImpl",
                                  "content": "<p>Implementation of MutableConvexPolygon.<p>Each modification operation on this object has a time complexity of\nO(n), where n is the number of vertices/edges.<\/p><p>Degenerate edges (of length 0) and collinear points are allowed, but\nbe aware that the majority of algorithms working on convex polygons\nrequires no degeneration at all.<\/p><init>\nImplementation of MutableConvexPolygon.<p>Each modification operation on this object has a time complexity of\nO(n), where n is the number of vertices/edges.<\/p><p>Degenerate edges (of length 0) and collinear points are allowed, but\nbe aware that the majority of algorithms working on convex polygons\nrequires no degeneration at all.<\/p>\ndiameter\nThe largest distance between any pair of vertices.\ncentroid\nThe geometric center.\nvertices\nA list is used because vertices do have an order.\naddVertex\nAdds a vertex in the specified position.<p>If the operation would cause the violation of the convexity, false\nis returned and the operation is not performed.<\/p>\nremoveVertex\nRemoves the specified vertex.<p>If the operation would cause the violation of the convexity, false\nis returned and the operation is not performed.<\/p>\nmoveVertex\nMoves the specified vertex to the new absolute coordinates provided.<p>If the operation would cause the violation of the convexity, false\nis returned and the operation is not performed.<\/p>\ngetEdge\nThe index parameter specify which edge to get: edge i connects\nvertices i and i+1.\nmoveEdge\nMoves the specified edge to the new absolute coordinates provided.<p>If the operation would cause the violation of the convexity, false\nis returned and the operation is not performed.<\/p>\nintersects\nA shape intersects another if any of its points is contained in the other one.\nintersects\nThis method is &quot;exact&quot; (no bounding box are used).\ncontains\nCheck if the shape contains a vector.\nunion\nPerforms a union in-place with a collection of overlapping\npolygons. Returns a boolean indicating whether the union was\nsuccessful or not (e.g. because the polygon would have lost its\nconvexity or the provided polygons did not overlap).\ntransformed\nTransforms the shape.\nasAwtShape<\/p>\n<p>equals<\/p>\n<p>hashCode<\/p>\n<p>mutateTo\nMutates this polygon to a copy of the specified one.\ncircularPrev<\/p>\n<p>circularNext<\/p>\n"
                                }]
                              },
                              "navigator": {
                                "ownKey": "navigator",
                                "childrenPages": {"ExtendableConvexPolygonImpl": {
                                  "ownKey": "ExtendableConvexPolygonImpl",
                                  "ownPages": [{
                                    "reference": {
                                      "path": "it/unibo/alchemist/model/implementations/geometry/euclidean/twod/navigator",
                                      "baseUrl": "https://alchemistsimulator.github.io/latest",
                                      "fileName": "ExtendableConvexPolygonImpl",
                                      "extension": "html",
                                      "usePrettyUrl": true,
                                      "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/geometry/euclidean/twod/navigator/ExtendableConvexPolygonImpl"
                                    },
                                    "description": "",
                                    "title": "ExtendableConvexPolygonImpl",
                                    "content": "<p>Implementation of ExtendableConvexPolygon.<init>\nImplementation of ExtendableConvexPolygon.<\/p>\n<p>addVertex\nAdds a vertex in the specified position.<p>If the operation would cause the violation of the convexity, false\nis returned and the operation is not performed.<\/p>\nremoveVertex\nRemoves the specified vertex.<p>If the operation would cause the violation of the convexity, false\nis returned and the operation is not performed.<\/p>\nmoveVertex\nMoves the specified vertex to the new absolute coordinates provided.<p>If the operation would cause the violation of the convexity, false\nis returned and the operation is not performed.<\/p>\nmoveEdge\nMoves the specified edge to the new absolute coordinates provided.<p>If the operation would cause the violation of the convexity, false\nis returned and the operation is not performed.<\/p>\nmutateTo\nMutates this polygon to a copy of the specified one.\nadvanceEdge\nAdvances the specified edge in its normal direction. The step\nparameter represents the length of the vector that will be used\nto translate the edge. Returns a boolean indicating whether the\nadvancement was performed or not (e.g. because it would have\ncaused the lost of the convexity).\nextend\nTries to extend the polygon in each direction. Each edge is given\na chance to advance in its normal direction. The step parameter\nrepresents the length of the vector that will be used to advance\nthe edges.\nReturns a boolean indicating whether the polygon extended (e.g. at\nleast one edge advanced) or not (e.g. for the presence of obstacles).\nThe boundaries of the environment need to be specified as well, in\norder to prevent the polygon from growing beyond them (a rectangular\nshaped environment is assumed, its origin, width and height are to\nbe provided, width and height should be positive). This method is\nable to cope with non axis-aligned convex polygonal obstacles as well.\nequals<\/p>\n<p>hashCode<\/p>\n"
                                  }]
                                }},
                                "ownPages": [{
                                  "reference": {
                                    "path": "it/unibo/alchemist/model/implementations/geometry/euclidean/twod",
                                    "baseUrl": "https://alchemistsimulator.github.io/latest",
                                    "fileName": "navigator",
                                    "extension": "html",
                                    "usePrettyUrl": true,
                                    "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/geometry/euclidean/twod/navigator"
                                  },
                                  "description": "",
                                  "title": "it.unibo.alchemist.model.implementations.geometry.euclidean.twod.navigator",
                                  "content": "<p>generateNavigationGraph\nNaviGator (Navigation Graphs Generator) is an algorithm capable of generating an\nEuclidean2DNavigationGraph of a given environment with obstacles. The nodes of\nthe produced graph are convex polygons representing the areas of the environment\ntraversable by agents (namely, walkable areas), whereas edges represent connections\nbetween them.<p>NaviGator works with rectangular-shaped bidimensional environments with euclidean\ngeometry and double precision coordinates. Note that this algorithm:<\/p><ul><li>does not guarantee the coverage of 100% of the walkable area.<\/li><li>is only capable to deal with convex polygonal obstacles (concave ones can be\ndecomposed into convex meshes, whereas for curves bounding boxes can be used).<\/li><li>is only capable to detect axis-aligned crossings.<\/li><li>can take a significant amount of time to generate a navigation graph.<\/li><\/ul><p>Here's a brief description of how the algorithm operates:\nFirstly, a certain number of seeds is planted in the environment. Each seed is a\nsquare-shaped region of unitary side that will grow maintaining a convex shape.\nSecondly, planted seeds are extended until possible (i.e. until they are in contact\nwith an obstacle or another seed on each side). Finally, crossings are found between\nthe grown seeds.<\/p><\/p>\n"
                                }]
                              }
                            },
                            "ownPages": [{
                              "reference": {
                                "path": "it/unibo/alchemist/model/implementations/geometry/euclidean",
                                "baseUrl": "https://alchemistsimulator.github.io/latest",
                                "fileName": "twod",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/geometry/euclidean/twod"
                              },
                              "description": "",
                              "title": "it.unibo.alchemist.model.implementations.geometry.euclidean.twod",
                              "content": "<p>fromShape\nCreates a MutableConvexPolygon from a java.awt.Shape.\nIf the Polygon could not be created (e.g. because of the\nnon-convexity of the given shape), an empty optional is\nreturned.\nEach curved segment of the shape will be considered as\na straight line.<\/p>\n"
                            }]
                          }}
                        },
                        "SegmentsIntersectionTypes": {
                          "ownKey": "SegmentsIntersectionTypes",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/geometry",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "SegmentsIntersectionTypes",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/geometry/SegmentsIntersectionTypes"
                            },
                            "description": "",
                            "title": "SegmentsIntersectionTypes",
                            "content": "<p>In euclidean geometry, the intersection of two segments can be\nan empty set, a point, or a segment (in other words, infinite points).<\/p>\n"
                          }]
                        },
                        "LinesIntersectionType": {
                          "ownKey": "LinesIntersectionType",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/geometry",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "LinesIntersectionType",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/geometry/LinesIntersectionType"
                            },
                            "description": "",
                            "title": "LinesIntersectionType",
                            "content": "<p>In euclidean geometry, the intersection of two lines can be\nan empty set, a point, or a line (in other words, infinite points).<\/p>\n"
                          }]
                        }
                      },
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/implementations",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "geometry",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/geometry"
                        },
                        "description": "",
                        "title": "it.unibo.alchemist.model.implementations.geometry",
                        "content": "<p>isInBoundaries\nChecks whether the given edge is inside a rectangular region described by an origin\npoint and width and height values (only positive).\nisInBoundaries\nChecks whether the given point is inside a rectangular region described by an origin\npoint and width and height values (only positive).\nareCollinear\nDetermines if three points are collinear (i.e. they lie on the same line).\ncreateSegment\nCreates an <a href=\"#\">Euclidean2DSegment<\/a>. x2 defaults to x1 and y2 defaults to y1.\nintersectionLines\nFinds the intersection of two lines represented by two segments.\nSuch segments are required not to be degenerate (of length 0).\nintersection\nFinds the intersection point of two given segments (if exists). This method is\nable to deal with degenerate edges (of length zero) and collinear segments.\nintersection\nFinds the intersection between a circle and a segment.\nvertices\nObtains the vertices of a polygonal shape. Any curved segment connecting\ntwo points will be considered as a straight line between them.\nliesBetween\nChecks if a value lies between two values (included) provided in any order.<\/p>\n"
                      }]
                    },
                    "reactions": {
                      "ownKey": "reactions",
                      "childrenPages": {
                        "BiochemicalReaction": {
                          "ownKey": "BiochemicalReaction",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/reactions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "BiochemicalReaction",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/reactions/BiochemicalReaction"
                            },
                            "description": "",
                            "title": "BiochemicalReaction",
                            "content": "<p>A biochemical Reaction.<init><\/p>\n<p>cloneOnNewNode<\/p>\n<p>execute<\/p>\n<p>setConditions<\/p>\n"
                          }]
                        },
                        "BlendedSteering": {
                          "ownKey": "BlendedSteering",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/reactions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "BlendedSteering",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/reactions/BlendedSteering"
                            },
                            "description": "",
                            "title": "BlendedSteering",
                            "content": "<p>Steering behavior which sums all the actions with a different weight based on their target distance.<init>\nSteering behavior which sums all the actions with a different weight based on their target distance.<\/p>\n"
                          }]
                        },
                        "SAPEREReaction": {
                          "ownKey": "SAPEREReaction",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/reactions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "SAPEREReaction",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/reactions/SAPEREReaction"
                            },
                            "description": "",
                            "title": "SAPEREReaction",
                            "content": "<p>This class realizes a reaction with Lsa concentrations.<init><\/p>\n<p>cloneOnNewNode<\/p>\n<p>execute<\/p>\n<p>setConditions<\/p>\n<p>getRate<\/p>\n<p>setActions<\/p>\n<p>getRateAsString<\/p>\n"
                          }]
                        },
                        "AbstractOrientingBehavior": {
                          "ownKey": "AbstractOrientingBehavior",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/reactions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "AbstractOrientingBehavior",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/reactions/AbstractOrientingBehavior"
                            },
                            "description": "",
                            "title": "AbstractOrientingBehavior",
                            "content": "<p>A reaction representing the orienting behavior of an OrientingPedestrian.\nThis class obtains a route from the pedestrian's cognitive map and exploits that and the\nother spatial information available to navigate the environment towards (or in search of)\na destination.\nTwo tasks are left to the derived classes via template method, see computeEdgeRankings\nand computeSubdestination.<init>\nA reaction representing the orienting behavior of an OrientingPedestrian.\nThis class obtains a route from the pedestrian's cognitive map and exploits that and the\nother spatial information available to navigate the environment towards (or in search of)\na destination.\nTwo tasks are left to the derived classes via template method, see computeEdgeRankings\nand computeSubdestination.\nenvironment\nThe environment the pedestrian is into.\npedestrian\nThe owner of this behavior.\nupdateInternalStatus<\/p>\n<p>getRate<\/p>\n<p>execute<\/p>\n<p>computeEdgeRankings\nMaps each edge outgoing from the given room to an integer rank indicating its\nsuitability in order to reach the provided destination (which is outside of the scope\nof the agent). Rankings should be in <a href=\"#\">1,E<\/a>, where E is the number of edges, a lower\nrank means the correspondent edge is preferable to reach the given destination.<p>When following a route provided by the cognitive map, the agent often is in the following\nsituation: he knows the spatial structure of the current room and the next sub-destination\nhe want to reach, but has no other information regarding the spatial structure between\nhis room and that position (remember that it is assumed the cognitive map provide only\na boolean information regarding the connection of landmarks, no extra info is stored).\nThis method should implement an algorithm allowing the pedestrian to perform an educated\nguess of which crossing to take in order to get closer to the provided destination.<\/p>\ncomputeSubdestination\nComputes the next sub-destination the pedestrian will move towards, provided an edge he\nwants to cross. The provided edge belongs to the room the agent is into (i.e. it is in\nsight of the agent), the returned position must be in sight of him as well, which means\nno obstacle should be placed between such destination and his current position.<p>This method is mainly about exploiting the extra data stored in the edge (for instance\nits shape and location in the room boundary) to determine which point the pedestrian\nshall point towards.<\/p>\nmoveTowards\nMoves the pedestrian towards a position which is guaranteed to be in sight (i.e. no\nobstacle is placed between him and such position).\nweight\nAssign a weight to a given edge. The one with minimum weight will be chosen and crossed.<\/p>\n"
                          }]
                        },
                        "AbstractReaction": {
                          "ownKey": "AbstractReaction",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/reactions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "AbstractReaction",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/reactions/AbstractReaction"
                            },
                            "description": "",
                            "title": "AbstractReaction",
                            "content": "<p>The type which describes the concentration of a molecule This class offers a partial implementation of Reaction. In particular, it allows to write new reaction specifying only which distribution time to adopt<init>\nBuilds a new reaction, starting at time t.<\/p>\n<p>initializationComplete<\/p>\n<p>getOutputContext<\/p>\n<p>getOutboundDependencies<\/p>\n<p>getConditions\nOverride only if you need to implement extremely tricky behaviours. Must be overridden along with <code>#setConditions(List)<\/code>.\ngetTau<\/p>\n<p>update<\/p>\n<p>canExecute\nThe default implementation verifies if all the conditions are valid.\ngetNode<\/p>\n<p>getInboundDependencies<\/p>\n<p>hashCode<\/p>\n<p>equals<\/p>\n<p>toString<\/p>\n<p>compareTo<\/p>\n<p>execute\nThe default execution iterates all the actions in order and executes them. Override to change the behaviour.\ngetTimeDistribution<\/p>\n<p>getInputContext<\/p>\n<p>setConditions\nThis should get overridden only if very tricky behaviours are implemented, such that the default Alchemist condition addition model is no longer usable. Must be overridden along with <code>#getConditions()<\/code>.\ngetActions\nOverride only if you need to implement extremely tricky behaviours. Must be overridden along with <code>#setActions(List)<\/code>.\nsetActions\nThis should get overridden only if very tricky behaviours are implemented, such that the default Alchemist action addition model is no longer usable. Must be overridden along with <code>#getActions()<\/code>.<\/p>\n"
                          }]
                        },
                        "SteeringBehavior": {
                          "ownKey": "SteeringBehavior",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/reactions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "SteeringBehavior",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/reactions/SteeringBehavior"
                            },
                            "description": "",
                            "title": "SteeringBehavior",
                            "content": "<p>Reaction representing the steering behavior of a pedestrian.<init>\nReaction representing the steering behavior of a pedestrian.\nsteerStrategy\nthe logic according to the steering actions are combined.\nsteerActions\nThe list of only the steering actions between all the actions in this reaction.\ncloneOnNewNode<\/p>\n<p>getRate<\/p>\n<p>updateInternalStatus<\/p>\n<p>execute<\/p>\n"
                          }]
                        },
                        "PrioritySteering": {
                          "ownKey": "PrioritySteering",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/reactions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "PrioritySteering",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/reactions/PrioritySteering"
                            },
                            "description": "",
                            "title": "PrioritySteering",
                            "content": "<p>Steering behavior where only the action whose target is the nearest to the current pedestrian position is executed.<init>\nSteering behavior where only the action whose target is the nearest to the current pedestrian position is executed.<\/p>\n"
                          }]
                        },
                        "CognitiveBehavior": {
                          "ownKey": "CognitiveBehavior",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/reactions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "CognitiveBehavior",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/reactions/CognitiveBehavior"
                            },
                            "description": "",
                            "title": "CognitiveBehavior",
                            "content": "<p>Reaction representing the cognitive behavior of a pedestrian.<init>\nReaction representing the cognitive behavior of a pedestrian.<\/p>\n<p>cloneOnNewNode<\/p>\n<p>getRate<\/p>\n<p>updateInternalStatus<\/p>\n"
                          }]
                        },
                        "SAPEREGradient": {
                          "ownKey": "SAPEREGradient",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/reactions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "SAPEREGradient",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/reactions/SAPEREGradient"
                            },
                            "description": "",
                            "title": "SAPEREGradient",
                            "content": "<p>This class provides a fast and stable gradient implementation, inspired on the NBR construct used in Proto.<init>\nBuilds a new SAPERE Gradient.\n<init>\nBuilds a new SAPERE Gradient. This constructor is slower, and is provided for compatibility with the YAML-based Alchemist loader. It should be avoided when possible, by relying on the other constructor instead.<\/p>\n<p>getConditions<\/p>\n<p>getLsaNode<\/p>\n<p>canExecute<\/p>\n<p>cloneOnNewNode<\/p>\n<p>execute<\/p>\n<p>getActions<\/p>\n<p>getRate<\/p>\n"
                          }]
                        },
                        "Event": {
                          "ownKey": "Event",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/reactions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "Event",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/reactions/Event"
                            },
                            "description": "",
                            "title": "Event",
                            "content": "<p>This reaction completely ignores the propensity conditioning of the conditions, and tries to run every time the TimeDistribution wants to.<init><\/p>\n<p>cloneOnNewNode<\/p>\n<p>getRate<\/p>\n"
                          }]
                        },
                        "ChemicalReaction": {
                          "ownKey": "ChemicalReaction",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/reactions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "ChemicalReaction",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/reactions/ChemicalReaction"
                            },
                            "description": "",
                            "title": "ChemicalReaction",
                            "content": "<p><init><\/p>\n<p>initializationComplete<\/p>\n<p>cloneOnNewNode\n{@inheritDoc}\ngetRate<\/p>\n"
                          }]
                        },
                        "OrientingSteeringBehavior2D": {
                          "ownKey": "OrientingSteeringBehavior2D",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/reactions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "OrientingSteeringBehavior2D",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/reactions/OrientingSteeringBehavior2D"
                            },
                            "description": "",
                            "title": "OrientingSteeringBehavior2D",
                            "content": "<p>An OrientingBehavior2D with SteeringActions as well. This class implements a\nbasic algorithm capable of mixing the steering behavior and the orienting behavior\nsmartly (e.g. avoiding situations in which the agent is blocked due to the voiding\nof opposite forces). However, the resulting movements still present some shaking.<init>\nAn OrientingBehavior2D with SteeringActions as well. This class implements a\nbasic algorithm capable of mixing the steering behavior and the orienting behavior\nsmartly (e.g. avoiding situations in which the agent is blocked due to the voiding\nof opposite forces). However, the resulting movements still present some shaking.<\/p>\n<p>moveTowards\nMoves the pedestrian towards a position which is guaranteed to be in sight (i.e. no\nobstacle is placed between him and such position).<\/p>\n"
                          }]
                        },
                        "BiochemicalReactionBuilder": {
                          "ownKey": "BiochemicalReactionBuilder",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/reactions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "BiochemicalReactionBuilder",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/reactions/BiochemicalReactionBuilder"
                            },
                            "description": "",
                            "title": "BiochemicalReactionBuilder",
                            "content": "<p>This class implements a builder for chemical reactions.<init>\nConstruct a builder for biochemical reactions.<\/p>\n<p>randomGenerator\nset the random generator to the passed object.\ntimeDistribution\nSet the time distribution to the passed object.\nprogram\nSet the reaction to the passed program string.\nbuild\nBuilds the chemical reaction.<\/p>\n"
                          }]
                        },
                        "OrientingBehavior2D": {
                          "ownKey": "OrientingBehavior2D",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/reactions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "OrientingBehavior2D",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/reactions/OrientingBehavior2D"
                            },
                            "description": "",
                            "title": "OrientingBehavior2D",
                            "content": "<p>An AbstractOrientingBehavior in an euclidean bidimensional space.\nThis class accepts an Euclidean2DEnvironmentWithGraph whose graph features\nConvexPolygonal nodes (or any subclass of it) and whose edges store extra\ninformation regarding the shape of each passage (see type parameters M and F).\nIn particular, edges are any subtype of GraphEdgeWithData storing an\n<a href=\"#\">Euclidean2DSegment<\/a>. Similarly to an Euclidean2DCrossing, given an edge e\nconnecting convex polygon a to convex polygon b, the segment provided by e MUST\nbelong to the boundary of a, but can or cannot belong the boundary of b.\nAdditionally, this class redefines moveTowards in order to perform a more\nsophisticated movement (using some utils only available in two dimensions).<init>\nAn AbstractOrientingBehavior in an euclidean bidimensional space.\nThis class accepts an Euclidean2DEnvironmentWithGraph whose graph features\nConvexPolygonal nodes (or any subclass of it) and whose edges store extra\ninformation regarding the shape of each passage (see type parameters M and F).\nIn particular, edges are any subtype of GraphEdgeWithData storing an\n<a href=\"#\">Euclidean2DSegment<\/a>. Similarly to an Euclidean2DCrossing, given an edge e\nconnecting convex polygon a to convex polygon b, the segment provided by e MUST\nbelong to the boundary of a, but can or cannot belong the boundary of b.\nAdditionally, this class redefines moveTowards in order to perform a more\nsophisticated movement (using some utils only available in two dimensions).\nenvironment\nThe environment the pedestrian is into.\nmoveTowards\nMoves the pedestrian towards a position which is guaranteed to be in sight (i.e. no\nobstacle is placed between him and such position).\ncomputeEdgeRankings\nMaps each edge outgoing from the given room to an integer rank indicating its\nsuitability in order to reach the provided destination (which is outside of the scope\nof the agent). Rankings should be in <a href=\"#\">1,E<\/a>, where E is the number of edges, a lower\nrank means the correspondent edge is preferable to reach the given destination.<p>When following a route provided by the cognitive map, the agent often is in the following\nsituation: he knows the spatial structure of the current room and the next sub-destination\nhe want to reach, but has no other information regarding the spatial structure between\nhis room and that position (remember that it is assumed the cognitive map provide only\na boolean information regarding the connection of landmarks, no extra info is stored).\nThis method should implement an algorithm allowing the pedestrian to perform an educated\nguess of which crossing to take in order to get closer to the provided destination.<\/p>\ncomputeSubdestination\nComputes the next sub-destination the pedestrian will move towards, provided an edge he\nwants to cross. The provided edge belongs to the room the agent is into (i.e. it is in\nsight of the agent), the returned position must be in sight of him as well, which means\nno obstacle should be placed between such destination and his current position.<p>This method is mainly about exploiting the extra data stored in the edge (for instance\nits shape and location in the room boundary) to determine which point the pedestrian\nshall point towards.<\/p>\nweight\nThe congestionFactor is added.\ncloneOnNewNode<\/p>\n"
                          }]
                        }
                      },
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/implementations",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "reactions",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/reactions"
                        },
                        "description": "",
                        "title": "it.unibo.alchemist.model.implementations.reactions",
                        "content": ""
                      }]
                    },
                    "conditions": {
                      "ownKey": "conditions",
                      "childrenPages": {
                        "GenericMoleculeUnderLevel": {
                          "ownKey": "GenericMoleculeUnderLevel",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/conditions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "GenericMoleculeUnderLevel",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/conditions/GenericMoleculeUnderLevel"
                            },
                            "description": "",
                            "title": "GenericMoleculeUnderLevel",
                            "content": "<p><init><\/p>\n<p>cloneCondition<\/p>\n<p>getPropensityContribution<\/p>\n<p>isValid<\/p>\n"
                          }]
                        },
                        "NeighborhoodPresent": {
                          "ownKey": "NeighborhoodPresent",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/conditions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "NeighborhoodPresent",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/conditions/NeighborhoodPresent"
                            },
                            "description": "",
                            "title": "NeighborhoodPresent",
                            "content": "<p>A condition is valid if the node has a neighborhood, formally if the node has at least one node connected by a linking rule.<init>\nCreate the condition.<\/p>\n<p>cloneCondition<\/p>\n<p>toString<\/p>\n<p>isValid<\/p>\n"
                          }]
                        },
                        "GenericMoleculePresent": {
                          "ownKey": "GenericMoleculePresent",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/conditions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "GenericMoleculePresent",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/conditions/GenericMoleculePresent"
                            },
                            "description": "",
                            "title": "GenericMoleculePresent",
                            "content": "<p>This class implements a condition which checks if a molecule is present or not.<init>\nBuilds a new condition, which checks if the molecule exists or not inside the node n.<\/p>\n<p>cloneCondition\n{@inheritDoc}\ntoString\n{@inheritDoc}\ngetPropensityContribution\nPropensity influence is computed through the binomial coefficient. See Bernardo, Degano, Zavattaro - Formal Methods for Computational Systems Biology for the formulae.\ngetContext\n{@inheritDoc}\ngetQuantity\nAllows to access the threshold.\ngetMolecule\nAllows to access the molecule.\nisValid<\/p>\n"
                          }]
                        },
                        "MoleculeHasConcentration": {
                          "ownKey": "MoleculeHasConcentration",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/conditions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "MoleculeHasConcentration",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/conditions/MoleculeHasConcentration"
                            },
                            "description": "",
                            "title": "MoleculeHasConcentration",
                            "content": "<p>A condition that is valid iff a molecule has exactly the desired concentration.<init><\/p>\n<p>cloneCondition<\/p>\n<p>toString<\/p>\n<p>getPropensityContribution<\/p>\n<p>isValid<\/p>\n<p>getContext<\/p>\n"
                          }]
                        },
                        "BiomolPresentInEnv": {
                          "ownKey": "BiomolPresentInEnv",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/conditions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "BiomolPresentInEnv",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/conditions/BiomolPresentInEnv"
                            },
                            "description": "",
                            "title": "BiomolPresentInEnv",
                            "content": "<p><init>\nInitialize condition for extra-cellular environment, implemented as a set of EnvironmentNode.<\/p>\n<p>cloneCondition<\/p>\n<p>getPropensityContribution<\/p>\n<p>getContext<\/p>\n<p>isValid<\/p>\n"
                          }]
                        },
                        "JunctionPresentInCell": {
                          "ownKey": "JunctionPresentInCell",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/conditions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "JunctionPresentInCell",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/conditions/JunctionPresentInCell"
                            },
                            "description": "",
                            "title": "JunctionPresentInCell",
                            "content": "<p><init><\/p>\n<p>cloneCondition<\/p>\n<p>toString<\/p>\n<p>getNode<\/p>\n<p>isValid<\/p>\n"
                          }]
                        },
                        "ConcentrationChanged": {
                          "ownKey": "ConcentrationChanged",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/conditions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "ConcentrationChanged",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/conditions/ConcentrationChanged"
                            },
                            "description": "",
                            "title": "ConcentrationChanged",
                            "content": "<p>A condition that holds true only if the tracked Molecule changed its it.unibo.alchemist.model.interfaces.Concentration.<init><\/p>\n<p>cloneCondition<\/p>\n<p>toString<\/p>\n<p>getPropensityContribution<\/p>\n<p>isValid<\/p>\n<p>getContext<\/p>\n"
                          }]
                        },
                        "AbstractNeighborCondition": {
                          "ownKey": "AbstractNeighborCondition",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/conditions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "AbstractNeighborCondition",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/conditions/AbstractNeighborCondition"
                            },
                            "description": "",
                            "title": "AbstractNeighborCondition",
                            "content": "<p>Represents a condition on a neighbor. Formally this conditions is satisfied if at least one neighbor satisfy the condition.<\/p>\n<p>cloneCondition<\/p>\n<p>getPropensityContribution\nOverride if desired behavior differs. Default is returning the sum of the neighbor's propensities\ngetContext<\/p>\n<p>getValidNeighbors\nSearches in the given neighborhood which nodes satisfy the condition, and returns a list of valid neighbors. NOTE, it is NOT guaranteed that this method checks if the passed neighborhood is the actual neighborhood of the node. Make sure the passed neighborhood is up to date for avoid problems.<\/p>\n"
                          }]
                        },
                        "BiomolPresentInNeighbor": {
                          "ownKey": "BiomolPresentInNeighbor",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/conditions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "BiomolPresentInNeighbor",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/conditions/BiomolPresentInNeighbor"
                            },
                            "description": "",
                            "title": "BiomolPresentInNeighbor",
                            "content": "<p><init><\/p>\n<p>cloneCondition<\/p>\n<p>toString<\/p>\n<p>isValid<\/p>\n"
                          }]
                        },
                        "BiomolPresentInCell": {
                          "ownKey": "BiomolPresentInCell",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/conditions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "BiomolPresentInCell",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/conditions/BiomolPresentInCell"
                            },
                            "description": "",
                            "title": "BiomolPresentInCell",
                            "content": "<p><init><\/p>\n"
                          }]
                        },
                        "EnvPresent": {
                          "ownKey": "EnvPresent",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/conditions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "EnvPresent",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/conditions/EnvPresent"
                            },
                            "description": "",
                            "title": "EnvPresent",
                            "content": "<p><init><\/p>\n<p>cloneCondition<\/p>\n<p>toString<\/p>\n<p>getPropensityContribution<\/p>\n<p>isValid<\/p>\n<p>getContext<\/p>\n"
                          }]
                        },
                        "Else": {
                          "ownKey": "Else",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/conditions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "Else",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/conditions/Else"
                            },
                            "description": "",
                            "title": "Else",
                            "content": "<p>The condition is valid if all the other reactions having at least one condition can not execute.<init>\nThe condition is valid if all the other reactions having at least one condition can not execute.<\/p>\n<p>getContext<\/p>\n<p>getPropensityContribution<\/p>\n<p>isValid<\/p>\n"
                          }]
                        },
                        "ContainsMolecule": {
                          "ownKey": "ContainsMolecule",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/conditions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "ContainsMolecule",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/conditions/ContainsMolecule"
                            },
                            "description": "",
                            "title": "ContainsMolecule",
                            "content": "<p>The condition is valid if the node contains the molecule.<init>\nThe condition is valid if the node contains the molecule.<\/p>\n<p>getContext<\/p>\n<p>getPropensityContribution<\/p>\n<p>isValid<\/p>\n"
                          }]
                        },
                        "ComputationalRoundComplete": {
                          "ownKey": "ComputationalRoundComplete",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/conditions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "ComputationalRoundComplete",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/conditions/ComputationalRoundComplete"
                            },
                            "description": "",
                            "title": "ComputationalRoundComplete",
                            "content": "<p><init><\/p>\n<p>cloneCondition<\/p>\n<p>toString<\/p>\n<p>getNode<\/p>\n<p>getPropensityContribution<\/p>\n<p>isValid<\/p>\n<p>getContext<\/p>\n"
                          }]
                        },
                        "LsaNeighborhoodCondition": {
                          "ownKey": "LsaNeighborhoodCondition",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/conditions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "LsaNeighborhoodCondition",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/conditions/LsaNeighborhoodCondition"
                            },
                            "description": "",
                            "title": "LsaNeighborhoodCondition",
                            "content": "<p><init><\/p>\n<p>cloneCondition<\/p>\n<p>toString<\/p>\n<p>getContext<\/p>\n<p>filter<\/p>\n"
                          }]
                        },
                        "WantToEvacuate": {
                          "ownKey": "WantToEvacuate",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/conditions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "WantToEvacuate",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/conditions/WantToEvacuate"
                            },
                            "description": "",
                            "title": "WantToEvacuate",
                            "content": "<p>The intention of the pedestrian to evacuate or not.<init>\nThe intention of the pedestrian to evacuate or not.<\/p>\n<p>getContext<\/p>\n<p>getPropensityContribution<\/p>\n<p>isValid<\/p>\n"
                          }]
                        },
                        "TensionPresent": {
                          "ownKey": "TensionPresent",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/conditions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "TensionPresent",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/conditions/TensionPresent"
                            },
                            "description": "",
                            "title": "TensionPresent",
                            "content": "<p><init><\/p>\n<p>cloneCondition<\/p>\n<p>getPropensityContribution<\/p>\n<p>isValid<\/p>\n<p>getContext<\/p>\n"
                          }]
                        },
                        "LsaStandardCondition": {
                          "ownKey": "LsaStandardCondition",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/conditions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "LsaStandardCondition",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/conditions/LsaStandardCondition"
                            },
                            "description": "",
                            "title": "LsaStandardCondition",
                            "content": "<p>simple LSA-condition (example: ). Search an instance of a template in a node. The LSAMolecule matched, if exist, will not be deleted from the node Lsa-space . It can be deleted from the reaction, if necessary.<init>\nBuilds an LsaStandardCondition.<\/p>\n<p>cloneCondition\n{@inheritDoc}\ntoString\n{@inheritDoc}\ngetPropensityContribution<\/p>\n<p>getContext\n{@inheritDoc}\nfilter\n{@inheritDoc}\nisValid<\/p>\n"
                          }]
                        },
                        "AbstractCondition": {
                          "ownKey": "AbstractCondition",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/conditions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "AbstractCondition",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/conditions/AbstractCondition"
                            },
                            "description": "",
                            "title": "AbstractCondition",
                            "content": "<p><init><\/p>\n<p>cloneCondition\n{@inheritDoc} How to override: create a new action of your concrete subtype.\ntoString<\/p>\n<p>getNode\n{@inheritDoc} Override if your Condition can return a more specific type of node. The typical way is to cast the call to super.getNode().\ngetInboundDependencies\n{@inheritDoc} How to override: if you intend your condition to be potentially changed by any change in the context, return null.<\/p>\n"
                          }]
                        },
                        "LsaAbstractCondition": {
                          "ownKey": "LsaAbstractCondition",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/conditions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "LsaAbstractCondition",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/conditions/LsaAbstractCondition"
                            },
                            "description": "",
                            "title": "LsaAbstractCondition",
                            "content": "<p><init><\/p>\n<p>cloneCondition<\/p>\n<p>toString<\/p>\n<p>getNode<\/p>\n"
                          }]
                        }
                      },
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/implementations",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "conditions",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/conditions"
                        },
                        "description": "",
                        "title": "it.unibo.alchemist.model.implementations.conditions",
                        "content": ""
                      }]
                    },
                    "actions": {
                      "ownKey": "actions",
                      "childrenPages": {
                        "LsaAscendingGradientDist": {
                          "ownKey": "LsaAscendingGradientDist",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "LsaAscendingGradientDist",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/LsaAscendingGradientDist"
                            },
                            "description": "",
                            "title": "LsaAscendingGradientDist",
                            "content": "<p><init><\/p>\n<p>execute<\/p>\n"
                          }]
                        },
                        "AbstractMoveNode": {
                          "ownKey": "AbstractMoveNode",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "AbstractMoveNode",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/AbstractMoveNode"
                            },
                            "description": "",
                            "title": "AbstractMoveNode",
                            "content": "<p>This action moves a node inside a given environment.<\/p>\n<p>execute\nDetects if the move is in absolute or relative coordinates, then calls the correct method on the Environment.\ngetContext<\/p>\n<p>getEnvironment<\/p>\n<p>getNextPosition<\/p>\n"
                          }]
                        },
                        "ChemotacticPolarization": {
                          "ownKey": "ChemotacticPolarization",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "ChemotacticPolarization",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/ChemotacticPolarization"
                            },
                            "description": "",
                            "title": "ChemotacticPolarization",
                            "content": "<p><init><\/p>\n<p><init>\nInitialize a polarization activity regulated by environmental concentration of a molecule.<\/p>\n<p>execute<\/p>\n<p>getContext<\/p>\n<p>cloneAction<\/p>\n<p>getNode<\/p>\n"
                          }]
                        },
                        "SocialForceEuropeanAgent": {
                          "ownKey": "SocialForceEuropeanAgent",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "SocialForceEuropeanAgent",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/SocialForceEuropeanAgent"
                            },
                            "description": "",
                            "title": "SocialForceEuropeanAgent",
                            "content": "<p><init>\nBuilds an European pedestrian.\nVMIN\nMinimum speed of a pedestrian.\nMY_DIMENSION\nDimension of a pedestrian.\nDESIRED_SPACE\nDesired space of a pedestrian: minimum &quot;vital&quot; space that the agent wants to maintain around himself.\nTURN_RIGHT_PROBABILITY\nThe probability of turn to the right if another pedestrian is too near.<\/p>\n"
                          }]
                        },
                        "SAPEREWalkerRiseGradient": {
                          "ownKey": "SAPEREWalkerRiseGradient",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "SAPEREWalkerRiseGradient",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/SAPEREWalkerRiseGradient"
                            },
                            "description": "",
                            "title": "SAPEREWalkerRiseGradient",
                            "content": "<p><init><\/p>\n<p><init><\/p>\n"
                          }]
                        },
                        "Seek2D": {
                          "ownKey": "Seek2D",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "Seek2D",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/Seek2D"
                            },
                            "description": "",
                            "title": "Seek2D",
                            "content": "<p>Seek behavior in a bidimensional environment. The actions performed are more\nsophisticated and allow the pedestrian to try to avoid other agents on its path.\nThis behavior is restricted to two dimensions because some geometry utils available\nonly in 2D are required to implement it.<init>\nSeek behavior in a bidimensional environment. The actions performed are more\nsophisticated and allow the pedestrian to try to avoid other agents on its path.\nThis behavior is restricted to two dimensions because some geometry utils available\nonly in 2D are required to implement it.<\/p>\n<p>interpolatePositions<\/p>\n"
                          }]
                        },
                        "RemoveNode": {
                          "ownKey": "RemoveNode",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "RemoveNode",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/RemoveNode"
                            },
                            "description": "",
                            "title": "RemoveNode",
                            "content": "<p><init><\/p>\n<p>toString\n{@inheritDoc}\nexecute<\/p>\n<p>getContext<\/p>\n<p>cloneAction\n{@inheritDoc}<\/p>\n"
                          }]
                        },
                        "LsaAscendingAgent": {
                          "ownKey": "LsaAscendingAgent",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "LsaAscendingAgent",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/LsaAscendingAgent"
                            },
                            "description": "",
                            "title": "LsaAscendingAgent",
                            "content": "<p><init><\/p>\n<p>execute<\/p>\n"
                          }]
                        },
                        "SteeringActionImpl": {
                          "ownKey": "SteeringActionImpl",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "SteeringActionImpl",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/SteeringActionImpl"
                            },
                            "description": "",
                            "title": "SteeringActionImpl",
                            "content": "<p>Generic implementation of an action adhering the SteeringAction interface.<init>\nGeneric implementation of an action adhering the SteeringAction interface.<\/p>\n<p>cloneAction<\/p>\n<p>interpolatePositions<\/p>\n<p>nextPosition\nThe position the owner of this action moves to when it is executed.\ntarget\nThe position the owner of this action moves towards.<\/p>\n"
                          }]
                        },
                        "TargetWalker": {
                          "ownKey": "TargetWalker",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "TargetWalker",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/TargetWalker"
                            },
                            "description": "",
                            "title": "TargetWalker",
                            "content": "<p><init><\/p>\n<p><init><\/p>\n<p><init><\/p>\n<p><init><\/p>\n<p><init><\/p>\n<p><init><\/p>\n<p>DEFAULT_SPEED\nDefault speed in meters per second.\nDEFAULT_RANGE\nDefault interaction range.\nDEFAULT_INTERACTION\nDefault interaction factor.<\/p>\n"
                          }]
                        },
                        "Arrive": {
                          "ownKey": "Arrive",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "Arrive",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/Arrive"
                            },
                            "description": "",
                            "title": "Arrive",
                            "content": "<p>Move the agent towards a target position.\nIt is similar to Seek but it attempts to arrive at the target position with a zero velocity.<init>\nMove the agent towards a target position.\nIt is similar to Seek but it attempts to arrive at the target position with a zero velocity.<\/p>\n"
                          }]
                        },
                        "AbstractConfigurableMoveNodeWithAccurateEuclideanDestination": {
                          "ownKey": "AbstractConfigurableMoveNodeWithAccurateEuclideanDestination",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "AbstractConfigurableMoveNodeWithAccurateEuclideanDestination",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/AbstractConfigurableMoveNodeWithAccurateEuclideanDestination"
                            },
                            "description": "",
                            "title": "AbstractConfigurableMoveNodeWithAccurateEuclideanDestination",
                            "content": "<p>It's an AbstractConfigurableMoveNode for Euclidean2DPosition which provides a default interpolatePositions\nthat is accurate with respect to the target given and the current maximum speed.<init>\nIt's an AbstractConfigurableMoveNode for Euclidean2DPosition which provides a default interpolatePositions\nthat is accurate with respect to the target given and the current maximum speed.<\/p>\n<p>interpolatePositions\nIf maxWalk is greater than the speed needed to reach target then it positions precisely on target\nwithout going farther.<\/p>\n"
                          }]
                        },
                        "ProtelisProgram": {
                          "ownKey": "ProtelisProgram",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "ProtelisProgram",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/ProtelisProgram"
                            },
                            "description": "",
                            "title": "ProtelisProgram",
                            "content": "<p>Class to retain backwards compatibility with the Alchemist XML loader.<init><\/p>\n"
                          }]
                        },
                        "RandomlyToggleMolecule": {
                          "ownKey": "RandomlyToggleMolecule",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "RandomlyToggleMolecule",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/RandomlyToggleMolecule"
                            },
                            "description": "",
                            "title": "RandomlyToggleMolecule",
                            "content": "<p>Toggles a molecule randomly.<init>\nToggles a molecule randomly.<\/p>\n<p>cloneAction<\/p>\n<p>execute\nRolls the dice and toggles the molecule.\nshouldToggle\nReturns true if it is time to toggle the molecule.<\/p>\n"
                          }]
                        },
                        "AbstractRandomizableAction": {
                          "ownKey": "AbstractRandomizableAction",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "AbstractRandomizableAction",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/AbstractRandomizableAction"
                            },
                            "description": "",
                            "title": "AbstractRandomizableAction",
                            "content": "<p><init><\/p>\n"
                          }]
                        },
                        "CrowdSensor": {
                          "ownKey": "CrowdSensor",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "CrowdSensor",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/CrowdSensor"
                            },
                            "description": "",
                            "title": "CrowdSensor",
                            "content": "<p>The count N of neighbors containing &quot;person&quot; is stored within a tuple of the form &quot;crowd, N&quot;.<init><\/p>\n<p>execute<\/p>\n"
                          }]
                        },
                        "AbstractAction": {
                          "ownKey": "AbstractAction",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "AbstractAction",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/AbstractAction"
                            },
                            "description": "",
                            "title": "AbstractAction",
                            "content": "<p>An abstract class facility with some generic methods implemented.<\/p>\n<p>toString\n{@inheritDoc}\ngetOutboundDependencies\n{@inheritDoc} How to override: if you intend your action to influence any reaction with compatible context, return null.\ngetNode<\/p>\n"
                          }]
                        },
                        "FollowAtDistance": {
                          "ownKey": "FollowAtDistance",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "FollowAtDistance",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/FollowAtDistance"
                            },
                            "description": "",
                            "title": "FollowAtDistance",
                            "content": "<p>Follows a target at distance.<init>\nFollows a target at distance.<\/p>\n<p>cloneAction<\/p>\n<p>execute<\/p>\n<p>getContext<\/p>\n"
                          }]
                        },
                        "RandomPolarization": {
                          "ownKey": "RandomPolarization",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "RandomPolarization",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/RandomPolarization"
                            },
                            "description": "",
                            "title": "RandomPolarization",
                            "content": "<p><init><\/p>\n<p>execute<\/p>\n<p>getContext<\/p>\n<p>cloneAction<\/p>\n<p>getNode<\/p>\n"
                          }]
                        },
                        "ChangeBiomolConcentrationInEnv": {
                          "ownKey": "ChangeBiomolConcentrationInEnv",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "ChangeBiomolConcentrationInEnv",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/ChangeBiomolConcentrationInEnv"
                            },
                            "description": "",
                            "title": "ChangeBiomolConcentrationInEnv",
                            "content": "<p>Action implementing the changing of the concentration of a given biomolecule in environment.<init>\nInitialize a new Action that change concentration of the given Biomolecule of a &quot;deltaCon&quot; quantity.\n<init>\nInitialize a ChangeBiomolConcentrationInEnv with delta = -1.<\/p>\n<p>toString<\/p>\n<p>execute<\/p>\n<p>getContext<\/p>\n<p>cloneAction<\/p>\n"
                          }]
                        },
                        "SAPEREMoveNodeAgent": {
                          "ownKey": "SAPEREMoveNodeAgent",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "SAPEREMoveNodeAgent",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/SAPEREMoveNodeAgent"
                            },
                            "description": "",
                            "title": "SAPEREMoveNodeAgent",
                            "content": "<p><init>\nCreates a new SAPERE Local Agent stub. If you use this constructor, you must be sure that your agent does not modify any molecule (e.g. an agent that just moves a node).\n<init>\nCreates a new SAPERE Local Agent stub. Use this constructor if you agent modifies a molecule (locally!)<\/p>\n"
                          }]
                        },
                        "Flee": {
                          "ownKey": "Flee",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "Flee",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/Flee"
                            },
                            "description": "",
                            "title": "Flee",
                            "content": "<p>Move the agent away from a target position. It's the opposite of Seek.<init>\nMove the agent away from a target position. It's the opposite of Seek.<\/p>\n<p>interpolatePositions<\/p>\n"
                          }]
                        },
                        "SAPERENeighborAgent": {
                          "ownKey": "SAPERENeighborAgent",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "SAPERENeighborAgent",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/SAPERENeighborAgent"
                            },
                            "description": "",
                            "title": "SAPERENeighborAgent",
                            "content": "<p>A SAPERE Agent that modifies something on neighboring nodes.<init>\nCreates a new SAPERE Neighbor Agent stub. If you use this constructor, you must be sure that your agent only modifies molecules matching the template passed as m1.\n<init>\nCreates a new SAPERE Agent stub. If you use this constructor, you must be sure that your agent only modifies molecules matching the template passed as m1 and/or the template passed in m2.\n<init>\nCreates a new SAPERE Agent stub. If you use this constructor, you must be sure that your agent only modifies molecules matching the template passed as m1 and/or the template passed in m2 and/or the template passed in m3.<\/p>\n<p>getContext<\/p>\n"
                          }]
                        },
                        "ChangeBiomolConcentrationInNeighbor": {
                          "ownKey": "ChangeBiomolConcentrationInNeighbor",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "ChangeBiomolConcentrationInNeighbor",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/ChangeBiomolConcentrationInNeighbor"
                            },
                            "description": "",
                            "title": "ChangeBiomolConcentrationInNeighbor",
                            "content": "<p><init><\/p>\n<p>toString<\/p>\n<p>execute<\/p>\n<p>execute<\/p>\n<p>cloneAction<\/p>\n"
                          }]
                        },
                        "MoveForwardAndTeleport": {
                          "ownKey": "MoveForwardAndTeleport",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "MoveForwardAndTeleport",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/MoveForwardAndTeleport"
                            },
                            "description": "",
                            "title": "MoveForwardAndTeleport",
                            "content": "<p><init><\/p>\n<p>cloneAction<\/p>\n<p>getNextPosition<\/p>\n"
                          }]
                        },
                        "AbstractConfigurableMoveNode": {
                          "ownKey": "AbstractConfigurableMoveNode",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "AbstractConfigurableMoveNode",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/AbstractConfigurableMoveNode"
                            },
                            "description": "",
                            "title": "AbstractConfigurableMoveNode",
                            "content": "<p>An abstract class that factorizes code for multiple different movements. With three strategies can be defined: the next target to be reached, the routing strategy to adopt, the speed to move at.<\/p>\n<p>getNextPosition<\/p>\n"
                          }]
                        },
                        "ExtractClosestVisibleNodeAtDistance": {
                          "ownKey": "ExtractClosestVisibleNodeAtDistance",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "ExtractClosestVisibleNodeAtDistance",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/ExtractClosestVisibleNodeAtDistance"
                            },
                            "description": "",
                            "title": "ExtractClosestVisibleNodeAtDistance",
                            "content": "<p>Extracts the closest VisibleNode to the position at the given distance from the given node's position\nin the direction of the node's heading.<init>\nvisionMolecule is expected to contain a list of VisibleNode.\nIf there are no visible nodes then targetMolecule will be removed from <a href=\"#\">node<\/a>,\notherwise the VisibleNode's position will be inserted in targetMolecule.<\/p>\n<p>cloneAction<\/p>\n<p>execute<\/p>\n<p>getContext<\/p>\n"
                          }]
                        },
                        "LsaAbstractAction": {
                          "ownKey": "LsaAbstractAction",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "LsaAbstractAction",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/LsaAbstractAction"
                            },
                            "description": "",
                            "title": "LsaAbstractAction",
                            "content": "<p><init><\/p>\n<p>cloneAction<\/p>\n<p>getNode<\/p>\n<p>setExecutionContext\n{@inheritDoc}\ntoString<\/p>\n"
                          }]
                        },
                        "SocialForceAgent": {
                          "ownKey": "SocialForceAgent",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "SocialForceAgent",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/SocialForceAgent"
                            },
                            "description": "",
                            "title": "SocialForceAgent",
                            "content": "<p><init>\nConstruct a pedestrian agent. with\n<init>\nConstruct a pedestrian agent. with\nDECELERATION_FACTOR\nThe proximity deceleration factor.\nDELTA_T\nStep time interval.\nDESIRED_FORCE_FACTOR\nDesired force (the attractive force contribution from the target node) weight factor.\nDODGE_FORCE_FACTOR\nDodge force (the turn repulsive force contribution) weight factor.\nDODGE_FORCE_STRENGTH\nThe dodge strength.\nETA\nThe strength of the pedestrian repulsive force.\nMIN_DISP_CYC_TH\nMinimum Displacement Cycle Threshold: used to stop a pedestrian if he can't move enough for a certain number of cycles.\nMIN_DISPLACEMENT\nMinimum Displacement.\nMIN_PHEROMONE_DISTANCE\nA minimum distance value used to check if a pedestrian has reached the target node.\nMOMENTUM_FACTOR\nMomentum factor used to compute the new speed value.\nNEW_W\nOLD_W and NEW_W are weights used to compute the new direction as a weighted average starting from old and freshly computed directions. NEW_W is the freshly computed direction weight.\nOBSTACLE_FORCE_FACTOR\nObstacle force (the repulsive force contribution from obstacles) weight factor.\nOBSTACLE_FORCE_STRENGTH\nThe obstacle force strength.\nOBSTACLE_INTERACTION_RANGE\nThe pedestrian interaction range with obstacles.\nOLD_W\nOLD_W and NEW_W are weights used to compute the new direction as a weighted average starting from old and freshly computed directions. OLD_W is the old direction weight.\nPEJORATIVE_MOVE_PROBABILITY\nThe probability of choosing a pejorative move.\nPROXIMITY_DEC_RANGE\nRange in which a pedestrian will decelerate because of the presence of other pedestrians.\nPROXIMITY_TURN_RANGE\nRange in which a pedestrian will turn because of the presence of other pedestrians.\nSOCIAL_FORCE_FACTOR\nSocial force (the repulsive force contribution from other pedestrians) weight factor.\ncomputeInteractions\nFIRST SOLUTION. Method used to compute the interaction (so the repulsive force contribution) between pedestrians\ngetSpeed\nGet speed of this agent.\nexecute<\/p>\n"
                          }]
                        },
                        "SetLocalMoleculeConcentration": {
                          "ownKey": "SetLocalMoleculeConcentration",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "SetLocalMoleculeConcentration",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/SetLocalMoleculeConcentration"
                            },
                            "description": "",
                            "title": "SetLocalMoleculeConcentration",
                            "content": "<p><init><\/p>\n<p>execute<\/p>\n<p>getContext<\/p>\n<p>cloneAction<\/p>\n"
                          }]
                        },
                        "steeringstrategies": {
                          "ownKey": "steeringstrategies",
                          "childrenPages": {
                            "DistanceWeighted": {
                              "ownKey": "DistanceWeighted",
                              "ownPages": [{
                                "reference": {
                                  "path": "it/unibo/alchemist/model/implementations/actions/steeringstrategies",
                                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                                  "fileName": "DistanceWeighted",
                                  "extension": "html",
                                  "usePrettyUrl": true,
                                  "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/steeringstrategies/DistanceWeighted"
                                },
                                "description": "",
                                "title": "DistanceWeighted",
                                "content": "<p>Weighted steering logic where the weight of each steering action is\nthe inverse of its distance from the target.<init>\nWeighted steering logic where the weight of each steering action is\nthe inverse of its distance from the target.<\/p>\n"
                              }]
                            },
                            "Weighted": {
                              "ownKey": "Weighted",
                              "ownPages": [{
                                "reference": {
                                  "path": "it/unibo/alchemist/model/implementations/actions/steeringstrategies",
                                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                                  "fileName": "Weighted",
                                  "extension": "html",
                                  "usePrettyUrl": true,
                                  "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/steeringstrategies/Weighted"
                                },
                                "description": "",
                                "title": "Weighted",
                                "content": "<p>Steering logic where each steering action is associated to a weight\nand the final computed position is their weighted sum.<init>\nSteering logic where each steering action is associated to a weight\nand the final computed position is their weighted sum.<\/p>\n<p>computeNextPosition\nComputes the next position starting from the steering actions the pedestrian obey to.\ncomputeTarget\nComputes the target to reach starting from the steering actions the pedestrian obey to.<\/p>\n"
                              }]
                            },
                            "Nearest": {
                              "ownKey": "Nearest",
                              "ownPages": [{
                                "reference": {
                                  "path": "it/unibo/alchemist/model/implementations/actions/steeringstrategies",
                                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                                  "fileName": "Nearest",
                                  "extension": "html",
                                  "usePrettyUrl": true,
                                  "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/steeringstrategies/Nearest"
                                },
                                "description": "",
                                "title": "Nearest",
                                "content": "<p>Steering logic where only the steering action and the group steering action (if present) whose target is\nthe nearest to the current pedestrian position is taken into consideration.<init>\nSteering logic where only the steering action and the group steering action (if present) whose target is\nthe nearest to the current pedestrian position is taken into consideration.<\/p>\n"
                              }]
                            },
                            "Filtered": {
                              "ownKey": "Filtered",
                              "ownPages": [{
                                "reference": {
                                  "path": "it/unibo/alchemist/model/implementations/actions/steeringstrategies",
                                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                                  "fileName": "Filtered",
                                  "extension": "html",
                                  "usePrettyUrl": true,
                                  "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/steeringstrategies/Filtered"
                                },
                                "description": "",
                                "title": "Filtered",
                                "content": "<p>Steering logic in which a filter is applied to the steering actions\nin order to execute another steering logic with only some of these.<init>\nSteering logic in which a filter is applied to the steering actions\nin order to execute another steering logic with only some of these.<\/p>\n<p>computeNextPosition\nComputes the next position starting from the steering actions the pedestrian obey to.<\/p>\n"
                              }]
                            },
                            "TypeBased": {
                              "ownKey": "TypeBased",
                              "ownPages": [{
                                "reference": {
                                  "path": "it/unibo/alchemist/model/implementations/actions/steeringstrategies",
                                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                                  "fileName": "TypeBased",
                                  "extension": "html",
                                  "usePrettyUrl": true,
                                  "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/steeringstrategies/TypeBased"
                                },
                                "description": "",
                                "title": "TypeBased",
                                "content": "<p>Steering strategy which gives a weight based on the type of steering action you are considering.\nFor each type,\nonly the action with the target nearest to the current pedestrian position is taken into consideration.<init>\nSteering strategy which gives a weight based on the type of steering action you are considering.\nFor each type,\nonly the action with the target nearest to the current pedestrian position is taken into consideration.<\/p>\n"
                              }]
                            }
                          },
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "steeringstrategies",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/steeringstrategies"
                            },
                            "description": "",
                            "title": "it.unibo.alchemist.model.implementations.actions.steeringstrategies",
                            "content": "<p>targetDistance\nCalculate the distance between this pedestrian current position and the specified steering action target.<\/p>\n"
                          }]
                        },
                        "LsaDeleteNodeAction": {
                          "ownKey": "LsaDeleteNodeAction",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "LsaDeleteNodeAction",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/LsaDeleteNodeAction"
                            },
                            "description": "",
                            "title": "LsaDeleteNodeAction",
                            "content": "<p><init><\/p>\n<p>cloneAction<\/p>\n<p>setExecutionContext<\/p>\n"
                          }]
                        },
                        "ChangeBiomolConcentrationInCell": {
                          "ownKey": "ChangeBiomolConcentrationInCell",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "ChangeBiomolConcentrationInCell",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/ChangeBiomolConcentrationInCell"
                            },
                            "description": "",
                            "title": "ChangeBiomolConcentrationInCell",
                            "content": "<p><init><\/p>\n<p>toString<\/p>\n<p>execute<\/p>\n<p>getContext<\/p>\n<p>cloneAction<\/p>\n"
                          }]
                        },
                        "ObstacleAvoidance": {
                          "ownKey": "ObstacleAvoidance",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "ObstacleAvoidance",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/ObstacleAvoidance"
                            },
                            "description": "",
                            "title": "ObstacleAvoidance",
                            "content": "<p>Move the agent avoiding potential obstacles in its path.<init>\nMove the agent avoiding potential obstacles in its path.<\/p>\n<p>interpolatePositions<\/p>\n"
                          }]
                        },
                        "SAPEREWalker": {
                          "ownKey": "SAPEREWalker",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "SAPEREWalker",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/SAPEREWalker"
                            },
                            "description": "",
                            "title": "SAPEREWalker",
                            "content": "<p><init><\/p>\n<p><init><\/p>\n<p>DEFAULT_INTERACTING_TAG\nThe default molecule that identifies an interacting object.\ncloneAction<\/p>\n<p>getNode<\/p>\n<p>setExecutionContext<\/p>\n"
                          }]
                        },
                        "SocialForceOldEuropeanAgent": {
                          "ownKey": "SocialForceOldEuropeanAgent",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "SocialForceOldEuropeanAgent",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/SocialForceOldEuropeanAgent"
                            },
                            "description": "",
                            "title": "SocialForceOldEuropeanAgent",
                            "content": "<p><init>\nBuilds an European pedestrian.\nVMIN\nMinimum speed of a pedestrian.\nMY_DIMENSION\nDimension of a pedestrian.\nDESIRED_SPACE\nDesired space of a pedestrian: minimum &quot;vital&quot; space that the agent wants to maintain around himself.\nTURN_RIGHT_PROBABILITY\nThe probability of turn to the right if another pedestrian is too near.<\/p>\n"
                          }]
                        },
                        "MoveOnMap": {
                          "ownKey": "MoveOnMap",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "MoveOnMap",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/MoveOnMap"
                            },
                            "description": "",
                            "title": "MoveOnMap",
                            "content": "<p><init><\/p>\n<p>cloneAction\nFails, can't be cloned.\ngetEnvironment<\/p>\n"
                          }]
                        },
                        "See": {
                          "ownKey": "See",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "See",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/See"
                            },
                            "description": "",
                            "title": "See",
                            "content": "<p>Checks nodes in the env and writes in outputMolecule a list of it.unibo.alchemist.model.interfaces.VisibleNode,\nfiltered by those containing filterByMolecule.\ndistance and angle define the field of view.<init>\nChecks nodes in the env and writes in outputMolecule a list of it.unibo.alchemist.model.interfaces.VisibleNode,\nfiltered by those containing filterByMolecule.\ndistance and angle define the field of view.\ndistance\nDistance of the field of view.\nangle\nAngle in degrees of the field of view.\ncloneAction<\/p>\n<p>execute<\/p>\n<p>getContext<\/p>\n"
                          }]
                        },
                        "SAPERELocalAgent": {
                          "ownKey": "SAPERELocalAgent",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "SAPERELocalAgent",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/SAPERELocalAgent"
                            },
                            "description": "",
                            "title": "SAPERELocalAgent",
                            "content": "<p>A SAPERE Agent that does not do actions on neighbors.<init>\nCreates a new SAPERE Local Agent stub. If you use this constructor, you must be sure that your agent does not modify any molecule (e.g. an agent that just moves a node).\n<init>\nCreates a new SAPERE Agent stub. If you use this constructor, you must be sure that your agent only modifies molecules matching the template passed as m1.\n<init>\nCreates a new SAPERE Agent stub. If you use this constructor, you must be sure that your agent only modifies molecules matching the template passed as m1 and/or the template passed in m2.\n<init>\nCreates a new SAPERE Agent stub. If you use this constructor, you must be sure that your agent only modifies molecules matching the template passed as m1 and/or the template passed in m2 and/or the template passed in m3.<\/p>\n<p>getContext<\/p>\n"
                          }]
                        },
                        "SocialForceAsianAgent": {
                          "ownKey": "SocialForceAsianAgent",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "SocialForceAsianAgent",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/SocialForceAsianAgent"
                            },
                            "description": "",
                            "title": "SocialForceAsianAgent",
                            "content": "<p><init>\nConstruct an Asian pedestrian. with\nVMIN\nMinimum speed of a pedestrian.\nMY_DIMENSION\nDimension of a pedestrian.\nDESIRED_SPACE\nDesired space of a pedestrian: minimum &quot;vital&quot; space that the agent wants to maintain around himself.\nTURN_RIGHT_PROBABILITY\nThe probability of turn to the right if another pedestrian is too near.<\/p>\n"
                          }]
                        },
                        "RemoveJunctionInNeighbor": {
                          "ownKey": "RemoveJunctionInNeighbor",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "RemoveJunctionInNeighbor",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/RemoveJunctionInNeighbor"
                            },
                            "description": "",
                            "title": "RemoveJunctionInNeighbor",
                            "content": "<p>Represent the action of removing a junction between a neighbor and the current node. <br> This action only remove the junction reference inside the neighbor node, the current one totally ignore that a junction has been removed. <br> This is a part of the junction removal process. <br> See RemoveJunctionInCell for the other part of the process.<init><\/p>\n<p>toString<\/p>\n<p>execute\nIf no target node is given DO NOTHING. The junction can not be removed.\nexecute<\/p>\n<p>cloneAction<\/p>\n<p>getNode<\/p>\n"
                          }]
                        },
                        "ZigZagMove": {
                          "ownKey": "ZigZagMove",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "ZigZagMove",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/ZigZagMove"
                            },
                            "description": "",
                            "title": "ZigZagMove",
                            "content": "<p>Moves toward a randomly chosen direction for up to distance meters, then chooses another one and so on.<init>\nMoves toward a randomly chosen direction for up to distance meters, then chooses another one and so on.<\/p>\n<p>cloneAction<\/p>\n"
                          }]
                        },
                        "ToggleMolecule": {
                          "ownKey": "ToggleMolecule",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "ToggleMolecule",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/ToggleMolecule"
                            },
                            "description": "",
                            "title": "ToggleMolecule",
                            "content": "<p>Toggles a molecule.<init>\nToggles a molecule.\nmolecule\nthe molecule to toggle\nconcentration\nthe concentration to set\ncloneAction<\/p>\n<p>execute\nToggles concentration.\nisOn\nReturns true if it is on, already toggled.\ngetContext<\/p>\n"
                          }]
                        },
                        "ReproduceGPSTrace": {
                          "ownKey": "ReproduceGPSTrace",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "ReproduceGPSTrace",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/ReproduceGPSTrace"
                            },
                            "description": "",
                            "title": "ReproduceGPSTrace",
                            "content": "<p><init><\/p>\n<p><init><\/p>\n"
                          }]
                        },
                        "Seek": {
                          "ownKey": "Seek",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "Seek",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/Seek"
                            },
                            "description": "",
                            "title": "Seek",
                            "content": "<p>Move the pedestrian towards the target position as fast as possible.<init>\nMove the pedestrian towards the target position as fast as possible.<\/p>\n"
                          }]
                        },
                        "AbstractActionOnSingleMolecule": {
                          "ownKey": "AbstractActionOnSingleMolecule",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "AbstractActionOnSingleMolecule",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/AbstractActionOnSingleMolecule"
                            },
                            "description": "",
                            "title": "AbstractActionOnSingleMolecule",
                            "content": "<p>This class offers the basic structures to provide operations with numeric concentrations on a single molecule.<\/p>\n<p>getMolecule<\/p>\n"
                          }]
                        },
                        "AddJunctionInNeighbor": {
                          "ownKey": "AddJunctionInNeighbor",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "AddJunctionInNeighbor",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/AddJunctionInNeighbor"
                            },
                            "description": "",
                            "title": "AddJunctionInNeighbor",
                            "content": "<p>Represent the action of add a junction between a neighbor and the current node. <br> This action only create the junction reference inside the neighbor, the current node totally ignore that a junction has been created. <br> This is a part of the junction creation process. <br> See AddJunctionInCell for the other part of the process<init><\/p>\n<p>toString<\/p>\n<p>execute\nIf no target node is given DO NOTHING. The junction can not be created.\nexecute\nCreate the junction that links the target node and the node when this action is executed.\ncloneAction<\/p>\n<p>getNode<\/p>\n"
                          }]
                        },
                        "Cohesion": {
                          "ownKey": "Cohesion",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "Cohesion",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/Cohesion"
                            },
                            "description": "",
                            "title": "Cohesion",
                            "content": "<p>Move the agent towards the other members of his group.<init>\nMove the agent towards the other members of his group.<\/p>\n<p>group\nThe list of pedestrians used to compute the group steering action.\ninterpolatePositions<\/p>\n"
                          }]
                        },
                        "AddJunctionInCell": {
                          "ownKey": "AddJunctionInCell",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "AddJunctionInCell",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/AddJunctionInCell"
                            },
                            "description": "",
                            "title": "AddJunctionInCell",
                            "content": "<p>Represent the action of add a junction between the current node and a neighbor. <br> This action only create the junction reference inside this node, the neighbor totally ignore that a junction has been created. <br> This is a part of the junction creation process. <br> See AddJunctionInNeighbor for the other part of the process<init><\/p>\n<p>toString<\/p>\n<p>execute\nIf no target node is given DO NOTHING. The junction can not be created.\nexecute\nCreate the junction that links the node where this action is executed and the target node.\ncloneAction<\/p>\n<p>getNode<\/p>\n"
                          }]
                        },
                        "Separation": {
                          "ownKey": "Separation",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "Separation",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/Separation"
                            },
                            "description": "",
                            "title": "Separation",
                            "content": "<p>Move the agent away from the pedestrians near to him.<init>\nMove the agent away from the pedestrians near to him.<\/p>\n<p>group\nThe list of pedestrians used to compute the group steering action.\ninterpolatePositions<\/p>\n"
                          }]
                        },
                        "LsaAllNeighborsAction": {
                          "ownKey": "LsaAllNeighborsAction",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "LsaAllNeighborsAction",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/LsaAllNeighborsAction"
                            },
                            "description": "",
                            "title": "LsaAllNeighborsAction",
                            "content": "<p>The execution involves all neighbours. The molecule can be different from a neighbor to the other, because some special Variable (#D) are specific for each node. This is why N molecules are instanced if there are N neighbours.<init><\/p>\n<p><init><\/p>\n<p>toString<\/p>\n<p>execute<\/p>\n"
                          }]
                        },
                        "BrownianMove": {
                          "ownKey": "BrownianMove",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "BrownianMove",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/BrownianMove"
                            },
                            "description": "",
                            "title": "BrownianMove",
                            "content": "<p>Moves the node randomly.<init><\/p>\n<p>cloneAction<\/p>\n<p>getNextPosition<\/p>\n"
                          }]
                        },
                        "Spin": {
                          "ownKey": "Spin",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "Spin",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/Spin"
                            },
                            "description": "",
                            "title": "Spin",
                            "content": "<p>Spins a <a href=\"#\">node<\/a> around itself at angularSpeedDegrees normalized according to the speed of the reaction.<init>\nSpins a <a href=\"#\">node<\/a> around itself at angularSpeedDegrees normalized according to the speed of the reaction.<\/p>\n<p>cloneAction<\/p>\n<p>execute\nSpins the node around itself.\ngetContext<\/p>\n"
                          }]
                        },
                        "Combine": {
                          "ownKey": "Combine",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "Combine",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/Combine"
                            },
                            "description": "",
                            "title": "Combine",
                            "content": "<p>Combination of multiple steering actions.<init>\nCombination of multiple steering actions.<\/p>\n<p>interpolatePositions<\/p>\n"
                          }]
                        },
                        "LsaCountNeighborsAction": {
                          "ownKey": "LsaCountNeighborsAction",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "LsaCountNeighborsAction",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/LsaCountNeighborsAction"
                            },
                            "description": "",
                            "title": "LsaCountNeighborsAction",
                            "content": "<p><init>\nBuilds a new action that counts neighbors which contain in their lsaSpace an lsaMolecule matching mol. The effect of this Action is to add to the matches list the variable countVar. The execution has no effect on the set of influenced molecules for the reaction.\n<init>\nBuilds a new action that counts neighbors which contain in their lsaSpace an lsaMolecule matching mol. The effect of this Action is to add to the matches list the variable countVar. The execution has no effect on the set of influenced molecules for the reaction.<\/p>\n<p>cloneAction<\/p>\n<p>toString<\/p>\n<p>execute<\/p>\n"
                          }]
                        },
                        "AvoidFlowField": {
                          "ownKey": "AvoidFlowField",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "AvoidFlowField",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/AvoidFlowField"
                            },
                            "description": "",
                            "title": "AvoidFlowField",
                            "content": "<p>Move the pedestrian towards positions of the environment with a low concentration of the target molecule.<init>\nMove the pedestrian towards positions of the environment with a low concentration of the target molecule.<\/p>\n"
                          }]
                        },
                        "SAPEREMoveLSAToAgent": {
                          "ownKey": "SAPEREMoveLSAToAgent",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "SAPEREMoveLSAToAgent",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/SAPEREMoveLSAToAgent"
                            },
                            "description": "",
                            "title": "SAPEREMoveLSAToAgent",
                            "content": "<p>This agent matches a template, removes a single instance of it from the current node and moves the LSA to another node (specified at creation time). Please note that, since the destination could be anywhere in the system, this action has a GLOBAL Context, and thus may trigger a large number of updates, slowing down the whole simulation. Handle with care.<init>\nThis is the constructor that should be called from DSL. Dynamically computes the destination node if an id is given.\n<init><\/p>\n<p>execute<\/p>\n<p>getContext<\/p>\n"
                          }]
                        },
                        "Wander": {
                          "ownKey": "Wander",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "Wander",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/Wander"
                            },
                            "description": "",
                            "title": "Wander",
                            "content": "<p>Give the impression of a random walk through the environment targeting an ever changing pseudo-randomly point\nof a circumference at a given distance and with a given radius from the current pedestrian position.<init>\nGive the impression of a random walk through the environment targeting an ever changing pseudo-randomly point\nof a circumference at a given distance and with a given radius from the current pedestrian position.<\/p>\n<p>interpolatePositions<\/p>\n"
                          }]
                        },
                        "SAPEREAgent": {
                          "ownKey": "SAPEREAgent",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "SAPEREAgent",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/SAPEREAgent"
                            },
                            "description": "",
                            "title": "SAPEREAgent",
                            "content": "<p><init>\nCreates a new SAPERE Agent stub. If you use this constructor, you must be sure that your agent does not modify any molecule (e.g. an agent that just moves a node).\n<init>\nCreates a new SAPERE Agent stub. If you use this constructor, you must be sure that your agent only modifies molecules matching the template passed as m1.\n<init>\nCreates a new SAPERE Agent stub. If you use this constructor, you must be sure that your agent only modifies molecules matching the template passed as m1 and/or the template passed in m2.\n<init>\nCreates a new SAPERE Agent stub. If you use this constructor, you must be sure that your agent only modifies molecules matching the template passed as m1 and/or the template passed in m2 and/or the template passed in m3.<\/p>\n<p>cloneAction\n{@inheritDoc}\ntoString\n{@inheritDoc}<\/p>\n"
                          }]
                        },
                        "FollowFlowField": {
                          "ownKey": "FollowFlowField",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "FollowFlowField",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/FollowFlowField"
                            },
                            "description": "",
                            "title": "FollowFlowField",
                            "content": "<p>Move the pedestrian towards positions of the environment with a high concentration of the target molecule.<init>\nMove the pedestrian towards positions of the environment with a high concentration of the target molecule.<\/p>\n"
                          }]
                        },
                        "SendToNeighbor": {
                          "ownKey": "SendToNeighbor",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "SendToNeighbor",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/SendToNeighbor"
                            },
                            "description": "",
                            "title": "SendToNeighbor",
                            "content": "<p><init><\/p>\n<p>toString<\/p>\n<p>getProtelisProgram<\/p>\n<p>execute<\/p>\n<p>getContext<\/p>\n<p>cloneAction<\/p>\n<p>getNode<\/p>\n"
                          }]
                        },
                        "GPSTraceWalker": {
                          "ownKey": "GPSTraceWalker",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "GPSTraceWalker",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/GPSTraceWalker"
                            },
                            "description": "",
                            "title": "GPSTraceWalker",
                            "content": "<p>A walker that follows a trace. The trace is mandatory.<init><\/p>\n<p>cloneAction<\/p>\n"
                          }]
                        },
                        "RemoveJunctionInCell": {
                          "ownKey": "RemoveJunctionInCell",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "RemoveJunctionInCell",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/RemoveJunctionInCell"
                            },
                            "description": "",
                            "title": "RemoveJunctionInCell",
                            "content": "<p>Represent the action of removing a junction between the current node and a neighbor. <br> This action only remove the junction reference inside this node, the neighbor totally ignore that a junction has been removed. <br> This is a part of the junction removal process. <br> See RemoveJunctionInNeighbor for the other part of the process<init><\/p>\n<p>toString<\/p>\n<p>execute\nIf no target node is given DO NOTHING. The junction can not be removed.\nexecute\nRemoves the junction that links the node where this action is executed and the target node.\ncloneAction<\/p>\n<p>getNode<\/p>\n"
                          }]
                        },
                        "AbstractNeighborAction": {
                          "ownKey": "AbstractNeighborAction",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "AbstractNeighborAction",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/AbstractNeighborAction"
                            },
                            "description": "",
                            "title": "AbstractNeighborAction",
                            "content": "<p>Represents an action on a neighbor.<\/p>\n<p>execute\nExecute the action on a random neighbor if the node has a neighborhood. Otherwise do nothing.\nexecute\nExecute the action on the given target node. NOTE, it is NOT guaranteed that this method checks if the target node is in the actual neighborhood of the node.\ngetContext<\/p>\n<p>cloneAction<\/p>\n"
                          }]
                        },
                        "MoveOnMapWithGPS": {
                          "ownKey": "MoveOnMapWithGPS",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "MoveOnMapWithGPS",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/MoveOnMapWithGPS"
                            },
                            "description": "",
                            "title": "MoveOnMapWithGPS",
                            "content": "<p>basic action that follow a GPSTrace.<init><\/p>\n<p><init><\/p>\n<p>traceFor<\/p>\n"
                          }]
                        },
                        "CellMove": {
                          "ownKey": "CellMove",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "CellMove",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/CellMove"
                            },
                            "description": "",
                            "title": "CellMove",
                            "content": "<p><init>\nInitialize an Action that move the cell of a given space delta, which can be expressed in percent of the cell's diameter or in absolute. If the cell has diameter 0, the only way to express delta is absolute. There's no way to decide the direction of the cell by this it.unibo.alchemist.model.interfaces.Action. This is inferred by the polarization vector contained in the cell.<\/p>\n<p>execute<\/p>\n<p>cloneAction<\/p>\n<p>getNode<\/p>\n<p>getNextPosition<\/p>\n"
                          }]
                        },
                        "LsaStandardAction": {
                          "ownKey": "LsaStandardAction",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "LsaStandardAction",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/LsaStandardAction"
                            },
                            "description": "",
                            "title": "LsaStandardAction",
                            "content": "<p>This action add LsaMolecule in a single node.<init>\nBuilds a new local action, withouth any RandomGenerator. #RANDOM.\n<init>\nBuilds a new local action.<\/p>\n<p>cloneAction\n{@inheritDoc}\ngetMolecule<\/p>\n<p>toString\n{@inheritDoc}\nexecute\n{@inheritDoc}\ngetContext\n{@inheritDoc}<\/p>\n"
                          }]
                        },
                        "LevyWalk": {
                          "ownKey": "LevyWalk",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "LevyWalk",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/LevyWalk"
                            },
                            "description": "",
                            "title": "LevyWalk",
                            "content": "<p>Selects a target based on a random direction extracted from rng,\nand a random distance extracted from a <a href=\"#\">ParetoDistribution<\/a> of parameters scale and shape.\nMoves toward the targets at a constant speed and changes targets on collision.<init>\nSelects a target based on a random direction extracted from rng,\nand a random distance extracted from a <a href=\"#\">ParetoDistribution<\/a> of parameters scale and shape.\nMoves toward the targets at a constant speed and changes targets on collision.<\/p>\n<p>cloneAction<\/p>\n"
                          }]
                        },
                        "RandomRotate": {
                          "ownKey": "RandomRotate",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "RandomRotate",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/RandomRotate"
                            },
                            "description": "",
                            "title": "RandomRotate",
                            "content": "<p>Changes the heading of the node randomly.<init>\nChanges the heading of the node randomly.<\/p>\n<p>cloneAction\n{@inheritDoc}.\nexecute\nChanges the heading of the node randomly.\ngetContext\n{@inheritDoc}.<\/p>\n"
                          }]
                        },
                        "LsaChangeArgument": {
                          "ownKey": "LsaChangeArgument",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "LsaChangeArgument",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/LsaChangeArgument"
                            },
                            "description": "",
                            "title": "LsaChangeArgument",
                            "content": "<p><init>\nBuilds a new action that test neighbors which contain in their lsaSpace an lsaMolecule matching . The effect of this Action is to add to the matches map the variable PreferredType (the most present type in neighborhood). The execution has no effect on influenced molecule of reaction.<\/p>\n<p>toString<\/p>\n<p>execute<\/p>\n"
                          }]
                        },
                        "SAPEREChemotaxis": {
                          "ownKey": "SAPEREChemotaxis",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "SAPEREChemotaxis",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/SAPEREChemotaxis"
                            },
                            "description": "",
                            "title": "SAPEREChemotaxis",
                            "content": "<p>This class provides a chemotaxis implementation for SAPERE, namely, an agent able to move a molecule towards a specific node.<init>\nBuilds a new SAPEREChemotaxis.<\/p>\n<p>execute<\/p>\n"
                          }]
                        },
                        "LsaRandomNeighborAction": {
                          "ownKey": "LsaRandomNeighborAction",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "LsaRandomNeighborAction",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/LsaRandomNeighborAction"
                            },
                            "description": "",
                            "title": "LsaRandomNeighborAction",
                            "content": "<p><init>\nBuilds a new action in a neighborhood. es: + This class extend LsaAbstractAction.<\/p>\n<p>cloneAction\n{@inheritDoc}\ntoString\n{@inheritDoc}\nexecute\n{@inheritDoc}\ngetContext<\/p>\n"
                          }]
                        },
                        "HeadTowardTarget": {
                          "ownKey": "HeadTowardTarget",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "HeadTowardTarget",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/HeadTowardTarget"
                            },
                            "description": "",
                            "title": "HeadTowardTarget",
                            "content": "<p>Reads the target's absolute coordinates from the target molecule\ncontained in getNode and sets the node's heading accordingly.<init>\nReads the target's absolute coordinates from the target molecule\ncontained in getNode and sets the node's heading accordingly.<\/p>\n<p>cloneAction<\/p>\n<p>execute\nSets the heading of the node according to the target molecule.\ngetContext<\/p>\n"
                          }]
                        },
                        "RunProtelisProgram": {
                          "ownKey": "RunProtelisProgram",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "RunProtelisProgram",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/RunProtelisProgram"
                            },
                            "description": "",
                            "title": "RunProtelisProgram",
                            "content": "<p><init><\/p>\n<p><init><\/p>\n<p>hashCode<\/p>\n<p>equals<\/p>\n<p>toString\n{@inheritDoc}\ngetOutboundDependencies<\/p>\n<p>asMolecule<\/p>\n<p>execute<\/p>\n<p>getContext<\/p>\n<p>cloneAction<\/p>\n<p>prepareForComputationalCycle\nResets the computation status (used for dependency management).\nisComputationalCycleComplete<\/p>\n"
                          }]
                        },
                        "RandomlyToggleMoleculeWithDuration": {
                          "ownKey": "RandomlyToggleMoleculeWithDuration",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "RandomlyToggleMoleculeWithDuration",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/RandomlyToggleMoleculeWithDuration"
                            },
                            "description": "",
                            "title": "RandomlyToggleMoleculeWithDuration",
                            "content": "<p>When the molecule is off, rolls the dices according to odds and if it is time to toggle, sets the concentration\nand choses a random duration in the interval [minDuration, maxDuration].\nThe molecule will be removed after the chosen duration has elapsed.<init>\nWhen the molecule is off, rolls the dices according to odds and if it is time to toggle, sets the concentration\nand choses a random duration in the interval [minDuration, maxDuration].\nThe molecule will be removed after the chosen duration has elapsed.<\/p>\n<p>cloneAction<\/p>\n<p>execute\nRolls the dice and toggles the molecule.\nshouldToggle\nReturns true if it is time to toggle the molecule.<\/p>\n"
                          }]
                        },
                        "CellTensionPolarization": {
                          "ownKey": "CellTensionPolarization",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "CellTensionPolarization",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/CellTensionPolarization"
                            },
                            "description": "",
                            "title": "CellTensionPolarization",
                            "content": "<p><init><\/p>\n<p>execute<\/p>\n<p>getContext<\/p>\n<p>cloneAction<\/p>\n<p>getNode<\/p>\n"
                          }]
                        },
                        "MoveToTarget": {
                          "ownKey": "MoveToTarget",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "MoveToTarget",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/MoveToTarget"
                            },
                            "description": "",
                            "title": "MoveToTarget",
                            "content": "<p>Movement towards a target defined as a concentration.<init><\/p>\n<p>cloneAction<\/p>\n"
                          }]
                        },
                        "RandomWalker": {
                          "ownKey": "RandomWalker",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "RandomWalker",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/RandomWalker"
                            },
                            "description": "",
                            "title": "RandomWalker",
                            "content": "<p>Chooses random targets in a direction extracted from rng at a distance extracted from distanceDistribution.\nMoves the <a href=\"#\">node<\/a> towards the targets at the given constant speed. Changes target on collision.<init>\nChooses random targets in a direction extracted from rng at a distance extracted from distanceDistribution.\nMoves the <a href=\"#\">node<\/a> towards the targets at the given constant speed. Changes target on collision.<\/p>\n<p>cloneAction<\/p>\n"
                          }]
                        },
                        "AbstractLocalAction": {
                          "ownKey": "AbstractLocalAction",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "AbstractLocalAction",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/AbstractLocalAction"
                            },
                            "description": "",
                            "title": "AbstractLocalAction",
                            "content": "<p>getContext<\/p>\n"
                          }]
                        },
                        "CrowdSteeringService": {
                          "ownKey": "CrowdSteeringService",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "CrowdSteeringService",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/CrowdSteeringService"
                            },
                            "description": "",
                            "title": "CrowdSteeringService",
                            "content": "<p><init><\/p>\n<p>execute<\/p>\n"
                          }]
                        },
                        "FlowFieldSteeringAction": {
                          "ownKey": "FlowFieldSteeringAction",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "FlowFieldSteeringAction",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/FlowFieldSteeringAction"
                            },
                            "description": "",
                            "title": "FlowFieldSteeringAction",
                            "content": "<p>Generic implementation of an action influenced by the concentration of a given molecule in the environment.<init>\nGeneric implementation of an action influenced by the concentration of a given molecule in the environment.<\/p>\n<p>interpolatePositions<\/p>\n"
                          }]
                        },
                        "FakeMove": {
                          "ownKey": "FakeMove",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/actions",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "FakeMove",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions/FakeMove"
                            },
                            "description": "",
                            "title": "FakeMove",
                            "content": "<p>Fake movement class, used only to trigger the neighborhood update.<init><\/p>\n<p>cloneAction<\/p>\n<p>getNextPosition<\/p>\n"
                          }]
                        }
                      },
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/implementations",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "actions",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/actions"
                        },
                        "description": "",
                        "title": "it.unibo.alchemist.model.implementations.actions",
                        "content": ""
                      }]
                    },
                    "linkingrules": {
                      "ownKey": "linkingrules",
                      "childrenPages": {
                        "ConnectWithinDistance": {
                          "ownKey": "ConnectWithinDistance",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/linkingrules",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "ConnectWithinDistance",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/linkingrules/ConnectWithinDistance"
                            },
                            "description": "",
                            "title": "ConnectWithinDistance",
                            "content": "<p>LinkingRule which connects nodes whose euclidean distance is shorter than a given radius.<init><\/p>\n<p>computeNeighborhood\nSubclasses may change the way a neighborhood is computed.<\/p>\n"
                          }]
                        },
                        "LinkNodesWithinRoutingRange": {
                          "ownKey": "LinkNodesWithinRoutingRange",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/linkingrules",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "LinkNodesWithinRoutingRange",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/linkingrules/LinkNodesWithinRoutingRange"
                            },
                            "description": "",
                            "title": "LinkNodesWithinRoutingRange",
                            "content": "<p><init><\/p>\n<p>computeNeighborhood<\/p>\n"
                          }]
                        },
                        "SelectiveAdaptiveRange": {
                          "ownKey": "SelectiveAdaptiveRange",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/linkingrules",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "SelectiveAdaptiveRange",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/linkingrules/SelectiveAdaptiveRange"
                            },
                            "description": "",
                            "title": "SelectiveAdaptiveRange",
                            "content": "<p><init><\/p>\n<p><init><\/p>\n<p><init><\/p>\n<p><init><\/p>\n<p><init><\/p>\n<p><init><\/p>\n<p><init><\/p>\n<p><init><\/p>\n<p>DEFAULT_MOLECULETYPE\nThe default filter molecule.<\/p>\n"
                          }]
                        },
                        "ConnectViaAccessPoint": {
                          "ownKey": "ConnectViaAccessPoint",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/linkingrules",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "ConnectViaAccessPoint",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/linkingrules/ConnectViaAccessPoint"
                            },
                            "description": "",
                            "title": "ConnectViaAccessPoint",
                            "content": "<p><init><\/p>\n<p>accessPointId\nthe id of the access point.\ncomputeNeighborhood<\/p>\n"
                          }]
                        },
                        "ClosestN": {
                          "ownKey": "ClosestN",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/linkingrules",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "ClosestN",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/linkingrules/ClosestN"
                            },
                            "description": "",
                            "title": "ClosestN",
                            "content": "<p>Non local-consistent rule that connect the closest N nodes together. Two nodes get connected if either one belongs to the set of the ten devices closest to the other.<init><\/p>\n<p><init><\/p>\n<p><init><\/p>\n<p>computeNeighborhood<\/p>\n<p>isLocallyConsistent<\/p>\n"
                          }]
                        },
                        "NoLinks": {
                          "ownKey": "NoLinks",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/linkingrules",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "NoLinks",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/linkingrules/NoLinks"
                            },
                            "description": "",
                            "title": "NoLinks",
                            "content": "<p>This rule guarantees that no links are created at all.<init>\nThis rule guarantees that no links are created at all.<\/p>\n<p>computeNeighborhood<\/p>\n"
                          }]
                        },
                        "FullyConnected": {
                          "ownKey": "FullyConnected",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/linkingrules",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "FullyConnected",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/linkingrules/FullyConnected"
                            },
                            "description": "",
                            "title": "FullyConnected",
                            "content": "<p><init><\/p>\n<p>isLocallyConsistent<\/p>\n<p>computeNeighborhood<\/p>\n"
                          }]
                        },
                        "ObstaclesBreakConnection": {
                          "ownKey": "ObstaclesBreakConnection",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/linkingrules",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "ObstaclesBreakConnection",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/linkingrules/ObstaclesBreakConnection"
                            },
                            "description": "",
                            "title": "ObstaclesBreakConnection",
                            "content": "<p>Similar to ConnectWithinDistance, but if the environment has obstacles, the links are removed.<init><\/p>\n<p>computeNeighborhood<\/p>\n"
                          }]
                        },
                        "EuclideanDistance": {
                          "ownKey": "EuclideanDistance",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/linkingrules",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "EuclideanDistance",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/linkingrules/EuclideanDistance"
                            },
                            "description": "",
                            "title": "EuclideanDistance",
                            "content": "<p><init><\/p>\n"
                          }]
                        },
                        "ConditionalClosestN": {
                          "ownKey": "ConditionalClosestN",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/linkingrules",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "ConditionalClosestN",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/linkingrules/ConditionalClosestN"
                            },
                            "description": "",
                            "title": "ConditionalClosestN",
                            "content": "<p>A ClosestN rule that also checks that a Molecule has a specific concentration before allowing the connection.<init><\/p>\n<p><init><\/p>\n"
                          }]
                        },
                        "AbstractLocallyConsistentLinkingRule": {
                          "ownKey": "AbstractLocallyConsistentLinkingRule",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/linkingrules",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "AbstractLocallyConsistentLinkingRule",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/linkingrules/AbstractLocallyConsistentLinkingRule"
                            },
                            "description": "",
                            "title": "AbstractLocallyConsistentLinkingRule",
                            "content": "<p><init><\/p>\n<p>isLocallyConsistent<\/p>\n"
                          }]
                        },
                        "ConnectionBeam": {
                          "ownKey": "ConnectionBeam",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/linkingrules",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "ConnectionBeam",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/linkingrules/ConnectionBeam"
                            },
                            "description": "",
                            "title": "ConnectionBeam",
                            "content": "<p>Connects two nodes if, throwing a beam from one to the other, there exists at least one path entirely inside the beam that connects the two nodes. This rule is ideal for environments with obstacles, where the user wants some tolerance in connection breaking.<init><\/p>\n<p>computeNeighborhood<\/p>\n"
                          }]
                        },
                        "ConnectToAccessPoint": {
                          "ownKey": "ConnectToAccessPoint",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/linkingrules",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "ConnectToAccessPoint",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/linkingrules/ConnectToAccessPoint"
                            },
                            "description": "",
                            "title": "ConnectToAccessPoint",
                            "content": "<p><init><\/p>\n<p>accessPointId\nthe id of the access point.\ncomputeNeighborhood<\/p>\n"
                          }]
                        },
                        "AdaptiveRange": {
                          "ownKey": "AdaptiveRange",
                          "ownPages": [{
                            "reference": {
                              "path": "it/unibo/alchemist/model/implementations/linkingrules",
                              "baseUrl": "https://alchemistsimulator.github.io/latest",
                              "fileName": "AdaptiveRange",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/linkingrules/AdaptiveRange"
                            },
                            "description": "",
                            "title": "AdaptiveRange",
                            "content": "<p>This linking rule dynamically searches for the best radius for each device, in such a way that it connects to a certain number of devices.<init><\/p>\n<p><init><\/p>\n<p><init><\/p>\n<p><init><\/p>\n<p><init><\/p>\n<p><init><\/p>\n<p>DEFAULT_ADJUSTMENT\nDefault adjustment.\nDEFAULT_MAXRANGE\nDefault maximum range.\nDEFAULT_MINRANGE\nDefault minimum range.\ncomputeNeighborhood<\/p>\n"
                          }]
                        }
                      },
                      "ownPages": [{
                        "reference": {
                          "path": "it/unibo/alchemist/model/implementations",
                          "baseUrl": "https://alchemistsimulator.github.io/latest",
                          "fileName": "linkingrules",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model/implementations/linkingrules"
                        },
                        "description": "",
                        "title": "it.unibo.alchemist.model.implementations.linkingrules",
                        "content": ""
                      }]
                    }
                  }
                }
              },
              "ownPages": [{
                "reference": {
                  "path": "it/unibo/alchemist",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "model",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/model"
                },
                "description": "",
                "title": "it.unibo.alchemist.model",
                "content": ""
              }]
            },
            "AlchemistExecutionOptions": {
              "ownKey": "AlchemistExecutionOptions",
              "ownPages": [{
                "reference": {
                  "path": "it/unibo/alchemist",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "AlchemistExecutionOptions",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/AlchemistExecutionOptions"
                },
                "description": "",
                "title": "AlchemistExecutionOptions",
                "content": "<p>Alchemist options provided by the command line.<init>\nAlchemist options provided by the command line.\nconfiguration\nnull if no simulation file is specified (default), file path otherwise\nheadless\ntrue if forced, false otherwise (default)\nvariables\nselected batch variables. Defaults to <a href=\"#\">emptyList<\/a>\nbatch\nwhether batch mode is selected.\nexport\nthe path to the file root of the data to export, or null if unspecified (export disabled).\ndistributed\nthe path to the file with the load distribution configuration, or null if the run is local\ngraphics\nthe path to the effects file, or null if unspecified\nhelp\ntrue if print help function is selected\ninterval\nsampling time, defaults to defaultInterval\nserver\nif launched as Alchemist grid node server, the path to the configuration file. Null otherwise.\nparallelism\nparallel threads used for running locally. Defaults to defaultParallelism\nendTime\nfinal simulation time. Defaults to defaultEndTime<\/p>\n"
              }]
            },
            "protelis": {
              "ownKey": "protelis",
              "childrenPages": {
                "AlchemistNetworkManager": {
                  "ownKey": "AlchemistNetworkManager",
                  "ownPages": [{
                    "reference": {
                      "path": "it/unibo/alchemist/protelis",
                      "baseUrl": "https://alchemistsimulator.github.io/latest",
                      "fileName": "AlchemistNetworkManager",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/protelis/AlchemistNetworkManager"
                    },
                    "description": "",
                    "title": "AlchemistNetworkManager",
                    "content": "<p>Emulates a NetworkManager. This particular network manager does not send messages instantly. Instead, it records the last message to send, and only when <code>#simulateMessageArrival(double)<\/code> is called the transfer is actually done.<init><\/p>\n<p><init><\/p>\n<p>shareState<\/p>\n<p>simulateMessageArrival\nSimulates the arrival of the message to other nodes.\ngetRetentionTime<\/p>\n<p>getNeighborState<\/p>\n"
                  }]
                },
                "AlchemistExecutionContext": {
                  "ownKey": "AlchemistExecutionContext",
                  "ownPages": [{
                    "reference": {
                      "path": "it/unibo/alchemist/protelis",
                      "baseUrl": "https://alchemistsimulator.github.io/latest",
                      "fileName": "AlchemistExecutionContext",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/protelis/AlchemistExecutionContext"
                    },
                    "description": "",
                    "title": "AlchemistExecutionContext",
                    "content": "<p><init><\/p>\n<p>USE_ROUTES_AS_DISTANCES\nPut this Molecule inside nodes that should compute distances using routes. It only makes sense in case the environment is a MapEnvironment\nAPPROXIMATE_NBR_RANGE\nPut this Molecule inside nodes that should compute distances using routes approximating them. It only makes sense in case the environment is a MapEnvironment\nhashCode<\/p>\n<p>getEnvironmentAccess<\/p>\n<p>nextRandomDouble<\/p>\n<p>equals<\/p>\n<p>getDeviceUID<\/p>\n<p>getCurrentTime<\/p>\n<p>routingDistance\nComputes the distance along a map. Requires a MapEnvironment.\nroutingDistance\nComputes the distance along a map. Requires a MapEnvironment.\nroutingDistance\nComputes the distance along a map. Requires a MapEnvironment.\nroutingDistance\nComputes the distance along a map. Requires a MapEnvironment.\nnbrDelay<\/p>\n<p>nbrRange<\/p>\n<p>getDevicePosition<\/p>\n<p>getCoordinates<\/p>\n<p>nbrLag<\/p>\n<p>nbrVector<\/p>\n<p>distanceTo\nComputes the distance between two nodes, through <code>Environment#getDistanceBetweenNodes(Node, Node)<\/code>.\ndistanceTo\nComputes the distance between two nodes, through <code>Environment#getDistanceBetweenNodes(Node, Node)<\/code>.<\/p>\n"
                  }]
                }
              },
              "ownPages": [{
                "reference": {
                  "path": "it/unibo/alchemist",
                  "baseUrl": "https://alchemistsimulator.github.io/latest",
                  "fileName": "protelis",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist/protelis"
                },
                "description": "",
                "title": "it.unibo.alchemist.protelis",
                "content": ""
              }]
            }
          },
          "ownPages": [{
            "reference": {
              "path": "it/unibo",
              "baseUrl": "https://alchemistsimulator.github.io/latest",
              "fileName": "alchemist",
              "extension": "html",
              "usePrettyUrl": true,
              "link": "https://alchemistsimulator.github.io/latest/it/unibo/alchemist"
            },
            "description": "",
            "title": "it.unibo.alchemist",
            "content": ""
          }]
        }}
      }}
    }
  },
  "ownPages": [
    {
      "reference": {
        "path": "",
        "baseUrl": "https://alchemistsimulator.github.io/latest",
        "fileName": "",
        "extension": "html",
        "usePrettyUrl": true,
        "link": "https://alchemistsimulator.github.io/latest"
      },
      "description": "",
      "title": "The Alchemist Simulator",
      "content": ""
    },
    {
      "reference": {
        "path": "",
        "baseUrl": "https://alchemistsimulator.github.io/latest",
        "fileName": "404",
        "extension": "html",
        "usePrettyUrl": false,
        "link": "https://alchemistsimulator.github.io/latest/404.html"
      },
      "description": "",
      "title": "The Alchemist Simulator",
      "content": ""
    }
  ]
}